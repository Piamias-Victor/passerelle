
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Notice
 * 
 */
export type Notice = $Result.DefaultSelection<Prisma.$NoticePayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model Location
 * 
 */
export type Location = $Result.DefaultSelection<Prisma.$LocationPayload>
/**
 * Model ProductLocation
 * 
 */
export type ProductLocation = $Result.DefaultSelection<Prisma.$ProductLocationPayload>
/**
 * Model Image
 * 
 */
export type Image = $Result.DefaultSelection<Prisma.$ImagePayload>
/**
 * Model ProductImage
 * 
 */
export type ProductImage = $Result.DefaultSelection<Prisma.$ProductImagePayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model Promotion
 * 
 */
export type Promotion = $Result.DefaultSelection<Prisma.$PromotionPayload>
/**
 * Model ProductCategory
 * 
 */
export type ProductCategory = $Result.DefaultSelection<Prisma.$ProductCategoryPayload>
/**
 * Model ProductPromotion
 * 
 */
export type ProductPromotion = $Result.DefaultSelection<Prisma.$ProductPromotionPayload>
/**
 * Model DeliveryMethod
 * 
 */
export type DeliveryMethod = $Result.DefaultSelection<Prisma.$DeliveryMethodPayload>
/**
 * Model Delivery
 * 
 */
export type Delivery = $Result.DefaultSelection<Prisma.$DeliveryPayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model OrderLine
 * 
 */
export type OrderLine = $Result.DefaultSelection<Prisma.$OrderLinePayload>
/**
 * Model Media
 * 
 */
export type Media = $Result.DefaultSelection<Prisma.$MediaPayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model Laboratory
 * 
 */
export type Laboratory = $Result.DefaultSelection<Prisma.$LaboratoryPayload>
/**
 * Model Message
 * 
 */
export type Message = $Result.DefaultSelection<Prisma.$MessagePayload>
/**
 * Model Customer
 * 
 */
export type Customer = $Result.DefaultSelection<Prisma.$CustomerPayload>
/**
 * Model Invoice
 * 
 */
export type Invoice = $Result.DefaultSelection<Prisma.$InvoicePayload>
/**
 * Model Token
 * 
 */
export type Token = $Result.DefaultSelection<Prisma.$TokenPayload>
/**
 * Model Banner
 * 
 */
export type Banner = $Result.DefaultSelection<Prisma.$BannerPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const ProductStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  ARCHIVED: 'ARCHIVED'
};

export type ProductStatus = (typeof ProductStatus)[keyof typeof ProductStatus]


export const ReductionType: {
  FIXED: 'FIXED',
  PERCENTAGE: 'PERCENTAGE'
};

export type ReductionType = (typeof ReductionType)[keyof typeof ReductionType]


export const DeliveryMethodType: {
  CLICKANDCOLLECT: 'CLICKANDCOLLECT',
  DELIVERY: 'DELIVERY'
};

export type DeliveryMethodType = (typeof DeliveryMethodType)[keyof typeof DeliveryMethodType]


export const DeliveryDirection: {
  FORWARD: 'FORWARD',
  RETURN: 'RETURN'
};

export type DeliveryDirection = (typeof DeliveryDirection)[keyof typeof DeliveryDirection]


export const DeliveryStatus: {
  CREATED: 'CREATED',
  PREPARED: 'PREPARED',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELED: 'CANCELED'
};

export type DeliveryStatus = (typeof DeliveryStatus)[keyof typeof DeliveryStatus]


export const PaymentStatus: {
  WAITINGFORPAYMENT: 'WAITINGFORPAYMENT',
  PAYED: 'PAYED',
  REJECTED: 'REJECTED'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]


export const OrderLineStatus: {
  CREATED: 'CREATED',
  STARTED: 'STARTED',
  PREPARED: 'PREPARED',
  CANCELED: 'CANCELED'
};

export type OrderLineStatus = (typeof OrderLineStatus)[keyof typeof OrderLineStatus]


export const MediaType: {
  Address: 'Address',
  Phone: 'Phone',
  Email: 'Email'
};

export type MediaType = (typeof MediaType)[keyof typeof MediaType]


export const MessageType: {
  PREPARATION_MESSAGE: 'PREPARATION_MESSAGE',
  ORDER_MESSAGE: 'ORDER_MESSAGE'
};

export type MessageType = (typeof MessageType)[keyof typeof MessageType]


export const MessageStatus: {
  CREATED: 'CREATED',
  SENT: 'SENT',
  SEND_ERROR: 'SEND_ERROR'
};

export type MessageStatus = (typeof MessageStatus)[keyof typeof MessageStatus]

}

export type ProductStatus = $Enums.ProductStatus

export const ProductStatus: typeof $Enums.ProductStatus

export type ReductionType = $Enums.ReductionType

export const ReductionType: typeof $Enums.ReductionType

export type DeliveryMethodType = $Enums.DeliveryMethodType

export const DeliveryMethodType: typeof $Enums.DeliveryMethodType

export type DeliveryDirection = $Enums.DeliveryDirection

export const DeliveryDirection: typeof $Enums.DeliveryDirection

export type DeliveryStatus = $Enums.DeliveryStatus

export const DeliveryStatus: typeof $Enums.DeliveryStatus

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

export type OrderLineStatus = $Enums.OrderLineStatus

export const OrderLineStatus: typeof $Enums.OrderLineStatus

export type MediaType = $Enums.MediaType

export const MediaType: typeof $Enums.MediaType

export type MessageType = $Enums.MessageType

export const MessageType: typeof $Enums.MessageType

export type MessageStatus = $Enums.MessageStatus

export const MessageStatus: typeof $Enums.MessageStatus

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Notices
 * const notices = await prisma.notice.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Notices
   * const notices = await prisma.notice.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.notice`: Exposes CRUD operations for the **Notice** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notices
    * const notices = await prisma.notice.findMany()
    * ```
    */
  get notice(): Prisma.NoticeDelegate<ExtArgs>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs>;

  /**
   * `prisma.location`: Exposes CRUD operations for the **Location** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Locations
    * const locations = await prisma.location.findMany()
    * ```
    */
  get location(): Prisma.LocationDelegate<ExtArgs>;

  /**
   * `prisma.productLocation`: Exposes CRUD operations for the **ProductLocation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductLocations
    * const productLocations = await prisma.productLocation.findMany()
    * ```
    */
  get productLocation(): Prisma.ProductLocationDelegate<ExtArgs>;

  /**
   * `prisma.image`: Exposes CRUD operations for the **Image** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Images
    * const images = await prisma.image.findMany()
    * ```
    */
  get image(): Prisma.ImageDelegate<ExtArgs>;

  /**
   * `prisma.productImage`: Exposes CRUD operations for the **ProductImage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductImages
    * const productImages = await prisma.productImage.findMany()
    * ```
    */
  get productImage(): Prisma.ProductImageDelegate<ExtArgs>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs>;

  /**
   * `prisma.promotion`: Exposes CRUD operations for the **Promotion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Promotions
    * const promotions = await prisma.promotion.findMany()
    * ```
    */
  get promotion(): Prisma.PromotionDelegate<ExtArgs>;

  /**
   * `prisma.productCategory`: Exposes CRUD operations for the **ProductCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductCategories
    * const productCategories = await prisma.productCategory.findMany()
    * ```
    */
  get productCategory(): Prisma.ProductCategoryDelegate<ExtArgs>;

  /**
   * `prisma.productPromotion`: Exposes CRUD operations for the **ProductPromotion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductPromotions
    * const productPromotions = await prisma.productPromotion.findMany()
    * ```
    */
  get productPromotion(): Prisma.ProductPromotionDelegate<ExtArgs>;

  /**
   * `prisma.deliveryMethod`: Exposes CRUD operations for the **DeliveryMethod** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DeliveryMethods
    * const deliveryMethods = await prisma.deliveryMethod.findMany()
    * ```
    */
  get deliveryMethod(): Prisma.DeliveryMethodDelegate<ExtArgs>;

  /**
   * `prisma.delivery`: Exposes CRUD operations for the **Delivery** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Deliveries
    * const deliveries = await prisma.delivery.findMany()
    * ```
    */
  get delivery(): Prisma.DeliveryDelegate<ExtArgs>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs>;

  /**
   * `prisma.orderLine`: Exposes CRUD operations for the **OrderLine** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderLines
    * const orderLines = await prisma.orderLine.findMany()
    * ```
    */
  get orderLine(): Prisma.OrderLineDelegate<ExtArgs>;

  /**
   * `prisma.media`: Exposes CRUD operations for the **Media** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Media
    * const media = await prisma.media.findMany()
    * ```
    */
  get media(): Prisma.MediaDelegate<ExtArgs>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs>;

  /**
   * `prisma.laboratory`: Exposes CRUD operations for the **Laboratory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Laboratories
    * const laboratories = await prisma.laboratory.findMany()
    * ```
    */
  get laboratory(): Prisma.LaboratoryDelegate<ExtArgs>;

  /**
   * `prisma.message`: Exposes CRUD operations for the **Message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.message.findMany()
    * ```
    */
  get message(): Prisma.MessageDelegate<ExtArgs>;

  /**
   * `prisma.customer`: Exposes CRUD operations for the **Customer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customers
    * const customers = await prisma.customer.findMany()
    * ```
    */
  get customer(): Prisma.CustomerDelegate<ExtArgs>;

  /**
   * `prisma.invoice`: Exposes CRUD operations for the **Invoice** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invoices
    * const invoices = await prisma.invoice.findMany()
    * ```
    */
  get invoice(): Prisma.InvoiceDelegate<ExtArgs>;

  /**
   * `prisma.token`: Exposes CRUD operations for the **Token** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tokens
    * const tokens = await prisma.token.findMany()
    * ```
    */
  get token(): Prisma.TokenDelegate<ExtArgs>;

  /**
   * `prisma.banner`: Exposes CRUD operations for the **Banner** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Banners
    * const banners = await prisma.banner.findMany()
    * ```
    */
  get banner(): Prisma.BannerDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Notice: 'Notice',
    Product: 'Product',
    Location: 'Location',
    ProductLocation: 'ProductLocation',
    Image: 'Image',
    ProductImage: 'ProductImage',
    Category: 'Category',
    Promotion: 'Promotion',
    ProductCategory: 'ProductCategory',
    ProductPromotion: 'ProductPromotion',
    DeliveryMethod: 'DeliveryMethod',
    Delivery: 'Delivery',
    Payment: 'Payment',
    OrderLine: 'OrderLine',
    Media: 'Media',
    Order: 'Order',
    Laboratory: 'Laboratory',
    Message: 'Message',
    Customer: 'Customer',
    Invoice: 'Invoice',
    Token: 'Token',
    Banner: 'Banner'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "notice" | "product" | "location" | "productLocation" | "image" | "productImage" | "category" | "promotion" | "productCategory" | "productPromotion" | "deliveryMethod" | "delivery" | "payment" | "orderLine" | "media" | "order" | "laboratory" | "message" | "customer" | "invoice" | "token" | "banner"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Notice: {
        payload: Prisma.$NoticePayload<ExtArgs>
        fields: Prisma.NoticeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NoticeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NoticePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NoticeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NoticePayload>
          }
          findFirst: {
            args: Prisma.NoticeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NoticePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NoticeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NoticePayload>
          }
          findMany: {
            args: Prisma.NoticeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NoticePayload>[]
          }
          create: {
            args: Prisma.NoticeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NoticePayload>
          }
          createMany: {
            args: Prisma.NoticeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NoticeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NoticePayload>[]
          }
          delete: {
            args: Prisma.NoticeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NoticePayload>
          }
          update: {
            args: Prisma.NoticeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NoticePayload>
          }
          deleteMany: {
            args: Prisma.NoticeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NoticeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NoticeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NoticePayload>
          }
          aggregate: {
            args: Prisma.NoticeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotice>
          }
          groupBy: {
            args: Prisma.NoticeGroupByArgs<ExtArgs>
            result: $Utils.Optional<NoticeGroupByOutputType>[]
          }
          count: {
            args: Prisma.NoticeCountArgs<ExtArgs>
            result: $Utils.Optional<NoticeCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      Location: {
        payload: Prisma.$LocationPayload<ExtArgs>
        fields: Prisma.LocationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LocationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LocationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          findFirst: {
            args: Prisma.LocationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LocationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          findMany: {
            args: Prisma.LocationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>[]
          }
          create: {
            args: Prisma.LocationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          createMany: {
            args: Prisma.LocationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LocationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>[]
          }
          delete: {
            args: Prisma.LocationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          update: {
            args: Prisma.LocationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          deleteMany: {
            args: Prisma.LocationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LocationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LocationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          aggregate: {
            args: Prisma.LocationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLocation>
          }
          groupBy: {
            args: Prisma.LocationGroupByArgs<ExtArgs>
            result: $Utils.Optional<LocationGroupByOutputType>[]
          }
          count: {
            args: Prisma.LocationCountArgs<ExtArgs>
            result: $Utils.Optional<LocationCountAggregateOutputType> | number
          }
        }
      }
      ProductLocation: {
        payload: Prisma.$ProductLocationPayload<ExtArgs>
        fields: Prisma.ProductLocationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductLocationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductLocationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductLocationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductLocationPayload>
          }
          findFirst: {
            args: Prisma.ProductLocationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductLocationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductLocationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductLocationPayload>
          }
          findMany: {
            args: Prisma.ProductLocationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductLocationPayload>[]
          }
          create: {
            args: Prisma.ProductLocationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductLocationPayload>
          }
          createMany: {
            args: Prisma.ProductLocationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductLocationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductLocationPayload>[]
          }
          delete: {
            args: Prisma.ProductLocationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductLocationPayload>
          }
          update: {
            args: Prisma.ProductLocationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductLocationPayload>
          }
          deleteMany: {
            args: Prisma.ProductLocationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductLocationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductLocationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductLocationPayload>
          }
          aggregate: {
            args: Prisma.ProductLocationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductLocation>
          }
          groupBy: {
            args: Prisma.ProductLocationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductLocationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductLocationCountArgs<ExtArgs>
            result: $Utils.Optional<ProductLocationCountAggregateOutputType> | number
          }
        }
      }
      Image: {
        payload: Prisma.$ImagePayload<ExtArgs>
        fields: Prisma.ImageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ImageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ImageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>
          }
          findFirst: {
            args: Prisma.ImageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ImageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>
          }
          findMany: {
            args: Prisma.ImageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>[]
          }
          create: {
            args: Prisma.ImageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>
          }
          createMany: {
            args: Prisma.ImageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ImageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>[]
          }
          delete: {
            args: Prisma.ImageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>
          }
          update: {
            args: Prisma.ImageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>
          }
          deleteMany: {
            args: Prisma.ImageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ImageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ImageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>
          }
          aggregate: {
            args: Prisma.ImageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImage>
          }
          groupBy: {
            args: Prisma.ImageGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImageGroupByOutputType>[]
          }
          count: {
            args: Prisma.ImageCountArgs<ExtArgs>
            result: $Utils.Optional<ImageCountAggregateOutputType> | number
          }
        }
      }
      ProductImage: {
        payload: Prisma.$ProductImagePayload<ExtArgs>
        fields: Prisma.ProductImageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductImageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductImageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          findFirst: {
            args: Prisma.ProductImageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductImageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          findMany: {
            args: Prisma.ProductImageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>[]
          }
          create: {
            args: Prisma.ProductImageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          createMany: {
            args: Prisma.ProductImageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductImageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>[]
          }
          delete: {
            args: Prisma.ProductImageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          update: {
            args: Prisma.ProductImageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          deleteMany: {
            args: Prisma.ProductImageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductImageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductImageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          aggregate: {
            args: Prisma.ProductImageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductImage>
          }
          groupBy: {
            args: Prisma.ProductImageGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductImageGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductImageCountArgs<ExtArgs>
            result: $Utils.Optional<ProductImageCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      Promotion: {
        payload: Prisma.$PromotionPayload<ExtArgs>
        fields: Prisma.PromotionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromotionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromotionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          findFirst: {
            args: Prisma.PromotionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromotionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          findMany: {
            args: Prisma.PromotionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>[]
          }
          create: {
            args: Prisma.PromotionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          createMany: {
            args: Prisma.PromotionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PromotionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>[]
          }
          delete: {
            args: Prisma.PromotionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          update: {
            args: Prisma.PromotionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          deleteMany: {
            args: Prisma.PromotionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PromotionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PromotionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          aggregate: {
            args: Prisma.PromotionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotion>
          }
          groupBy: {
            args: Prisma.PromotionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromotionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromotionCountArgs<ExtArgs>
            result: $Utils.Optional<PromotionCountAggregateOutputType> | number
          }
        }
      }
      ProductCategory: {
        payload: Prisma.$ProductCategoryPayload<ExtArgs>
        fields: Prisma.ProductCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          findFirst: {
            args: Prisma.ProductCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          findMany: {
            args: Prisma.ProductCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>[]
          }
          create: {
            args: Prisma.ProductCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          createMany: {
            args: Prisma.ProductCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>[]
          }
          delete: {
            args: Prisma.ProductCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          update: {
            args: Prisma.ProductCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          deleteMany: {
            args: Prisma.ProductCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          aggregate: {
            args: Prisma.ProductCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductCategory>
          }
          groupBy: {
            args: Prisma.ProductCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCategoryCountAggregateOutputType> | number
          }
        }
      }
      ProductPromotion: {
        payload: Prisma.$ProductPromotionPayload<ExtArgs>
        fields: Prisma.ProductPromotionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductPromotionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPromotionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductPromotionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPromotionPayload>
          }
          findFirst: {
            args: Prisma.ProductPromotionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPromotionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductPromotionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPromotionPayload>
          }
          findMany: {
            args: Prisma.ProductPromotionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPromotionPayload>[]
          }
          create: {
            args: Prisma.ProductPromotionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPromotionPayload>
          }
          createMany: {
            args: Prisma.ProductPromotionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductPromotionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPromotionPayload>[]
          }
          delete: {
            args: Prisma.ProductPromotionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPromotionPayload>
          }
          update: {
            args: Prisma.ProductPromotionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPromotionPayload>
          }
          deleteMany: {
            args: Prisma.ProductPromotionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductPromotionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductPromotionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPromotionPayload>
          }
          aggregate: {
            args: Prisma.ProductPromotionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductPromotion>
          }
          groupBy: {
            args: Prisma.ProductPromotionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductPromotionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductPromotionCountArgs<ExtArgs>
            result: $Utils.Optional<ProductPromotionCountAggregateOutputType> | number
          }
        }
      }
      DeliveryMethod: {
        payload: Prisma.$DeliveryMethodPayload<ExtArgs>
        fields: Prisma.DeliveryMethodFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DeliveryMethodFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryMethodPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DeliveryMethodFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryMethodPayload>
          }
          findFirst: {
            args: Prisma.DeliveryMethodFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryMethodPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DeliveryMethodFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryMethodPayload>
          }
          findMany: {
            args: Prisma.DeliveryMethodFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryMethodPayload>[]
          }
          create: {
            args: Prisma.DeliveryMethodCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryMethodPayload>
          }
          createMany: {
            args: Prisma.DeliveryMethodCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DeliveryMethodCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryMethodPayload>[]
          }
          delete: {
            args: Prisma.DeliveryMethodDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryMethodPayload>
          }
          update: {
            args: Prisma.DeliveryMethodUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryMethodPayload>
          }
          deleteMany: {
            args: Prisma.DeliveryMethodDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DeliveryMethodUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DeliveryMethodUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryMethodPayload>
          }
          aggregate: {
            args: Prisma.DeliveryMethodAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDeliveryMethod>
          }
          groupBy: {
            args: Prisma.DeliveryMethodGroupByArgs<ExtArgs>
            result: $Utils.Optional<DeliveryMethodGroupByOutputType>[]
          }
          count: {
            args: Prisma.DeliveryMethodCountArgs<ExtArgs>
            result: $Utils.Optional<DeliveryMethodCountAggregateOutputType> | number
          }
        }
      }
      Delivery: {
        payload: Prisma.$DeliveryPayload<ExtArgs>
        fields: Prisma.DeliveryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DeliveryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DeliveryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryPayload>
          }
          findFirst: {
            args: Prisma.DeliveryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DeliveryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryPayload>
          }
          findMany: {
            args: Prisma.DeliveryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryPayload>[]
          }
          create: {
            args: Prisma.DeliveryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryPayload>
          }
          createMany: {
            args: Prisma.DeliveryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DeliveryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryPayload>[]
          }
          delete: {
            args: Prisma.DeliveryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryPayload>
          }
          update: {
            args: Prisma.DeliveryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryPayload>
          }
          deleteMany: {
            args: Prisma.DeliveryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DeliveryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DeliveryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryPayload>
          }
          aggregate: {
            args: Prisma.DeliveryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDelivery>
          }
          groupBy: {
            args: Prisma.DeliveryGroupByArgs<ExtArgs>
            result: $Utils.Optional<DeliveryGroupByOutputType>[]
          }
          count: {
            args: Prisma.DeliveryCountArgs<ExtArgs>
            result: $Utils.Optional<DeliveryCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      OrderLine: {
        payload: Prisma.$OrderLinePayload<ExtArgs>
        fields: Prisma.OrderLineFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderLineFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderLinePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderLineFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderLinePayload>
          }
          findFirst: {
            args: Prisma.OrderLineFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderLinePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderLineFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderLinePayload>
          }
          findMany: {
            args: Prisma.OrderLineFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderLinePayload>[]
          }
          create: {
            args: Prisma.OrderLineCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderLinePayload>
          }
          createMany: {
            args: Prisma.OrderLineCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderLineCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderLinePayload>[]
          }
          delete: {
            args: Prisma.OrderLineDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderLinePayload>
          }
          update: {
            args: Prisma.OrderLineUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderLinePayload>
          }
          deleteMany: {
            args: Prisma.OrderLineDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderLineUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderLineUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderLinePayload>
          }
          aggregate: {
            args: Prisma.OrderLineAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderLine>
          }
          groupBy: {
            args: Prisma.OrderLineGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderLineGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderLineCountArgs<ExtArgs>
            result: $Utils.Optional<OrderLineCountAggregateOutputType> | number
          }
        }
      }
      Media: {
        payload: Prisma.$MediaPayload<ExtArgs>
        fields: Prisma.MediaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MediaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MediaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MediaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MediaPayload>
          }
          findFirst: {
            args: Prisma.MediaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MediaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MediaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MediaPayload>
          }
          findMany: {
            args: Prisma.MediaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MediaPayload>[]
          }
          create: {
            args: Prisma.MediaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MediaPayload>
          }
          createMany: {
            args: Prisma.MediaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MediaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MediaPayload>[]
          }
          delete: {
            args: Prisma.MediaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MediaPayload>
          }
          update: {
            args: Prisma.MediaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MediaPayload>
          }
          deleteMany: {
            args: Prisma.MediaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MediaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MediaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MediaPayload>
          }
          aggregate: {
            args: Prisma.MediaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMedia>
          }
          groupBy: {
            args: Prisma.MediaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MediaGroupByOutputType>[]
          }
          count: {
            args: Prisma.MediaCountArgs<ExtArgs>
            result: $Utils.Optional<MediaCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      Laboratory: {
        payload: Prisma.$LaboratoryPayload<ExtArgs>
        fields: Prisma.LaboratoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LaboratoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LaboratoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratoryPayload>
          }
          findFirst: {
            args: Prisma.LaboratoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LaboratoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratoryPayload>
          }
          findMany: {
            args: Prisma.LaboratoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratoryPayload>[]
          }
          create: {
            args: Prisma.LaboratoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratoryPayload>
          }
          createMany: {
            args: Prisma.LaboratoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LaboratoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratoryPayload>[]
          }
          delete: {
            args: Prisma.LaboratoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratoryPayload>
          }
          update: {
            args: Prisma.LaboratoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratoryPayload>
          }
          deleteMany: {
            args: Prisma.LaboratoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LaboratoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LaboratoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LaboratoryPayload>
          }
          aggregate: {
            args: Prisma.LaboratoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLaboratory>
          }
          groupBy: {
            args: Prisma.LaboratoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<LaboratoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.LaboratoryCountArgs<ExtArgs>
            result: $Utils.Optional<LaboratoryCountAggregateOutputType> | number
          }
        }
      }
      Message: {
        payload: Prisma.$MessagePayload<ExtArgs>
        fields: Prisma.MessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findFirst: {
            args: Prisma.MessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findMany: {
            args: Prisma.MessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          create: {
            args: Prisma.MessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          createMany: {
            args: Prisma.MessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MessageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          delete: {
            args: Prisma.MessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          update: {
            args: Prisma.MessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          deleteMany: {
            args: Prisma.MessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          aggregate: {
            args: Prisma.MessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessage>
          }
          groupBy: {
            args: Prisma.MessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.MessageCountArgs<ExtArgs>
            result: $Utils.Optional<MessageCountAggregateOutputType> | number
          }
        }
      }
      Customer: {
        payload: Prisma.$CustomerPayload<ExtArgs>
        fields: Prisma.CustomerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findFirst: {
            args: Prisma.CustomerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findMany: {
            args: Prisma.CustomerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          create: {
            args: Prisma.CustomerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          createMany: {
            args: Prisma.CustomerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CustomerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          delete: {
            args: Prisma.CustomerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          update: {
            args: Prisma.CustomerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          deleteMany: {
            args: Prisma.CustomerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CustomerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          aggregate: {
            args: Prisma.CustomerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomer>
          }
          groupBy: {
            args: Prisma.CustomerGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomerGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomerCountArgs<ExtArgs>
            result: $Utils.Optional<CustomerCountAggregateOutputType> | number
          }
        }
      }
      Invoice: {
        payload: Prisma.$InvoicePayload<ExtArgs>
        fields: Prisma.InvoiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvoiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvoiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          findFirst: {
            args: Prisma.InvoiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvoiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          findMany: {
            args: Prisma.InvoiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>[]
          }
          create: {
            args: Prisma.InvoiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          createMany: {
            args: Prisma.InvoiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvoiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>[]
          }
          delete: {
            args: Prisma.InvoiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          update: {
            args: Prisma.InvoiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          deleteMany: {
            args: Prisma.InvoiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvoiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.InvoiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          aggregate: {
            args: Prisma.InvoiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvoice>
          }
          groupBy: {
            args: Prisma.InvoiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvoiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvoiceCountArgs<ExtArgs>
            result: $Utils.Optional<InvoiceCountAggregateOutputType> | number
          }
        }
      }
      Token: {
        payload: Prisma.$TokenPayload<ExtArgs>
        fields: Prisma.TokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TokenPayload>
          }
          findFirst: {
            args: Prisma.TokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TokenPayload>
          }
          findMany: {
            args: Prisma.TokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TokenPayload>[]
          }
          create: {
            args: Prisma.TokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TokenPayload>
          }
          createMany: {
            args: Prisma.TokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TokenPayload>[]
          }
          delete: {
            args: Prisma.TokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TokenPayload>
          }
          update: {
            args: Prisma.TokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TokenPayload>
          }
          deleteMany: {
            args: Prisma.TokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TokenPayload>
          }
          aggregate: {
            args: Prisma.TokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateToken>
          }
          groupBy: {
            args: Prisma.TokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<TokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.TokenCountArgs<ExtArgs>
            result: $Utils.Optional<TokenCountAggregateOutputType> | number
          }
        }
      }
      Banner: {
        payload: Prisma.$BannerPayload<ExtArgs>
        fields: Prisma.BannerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BannerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BannerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>
          }
          findFirst: {
            args: Prisma.BannerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BannerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>
          }
          findMany: {
            args: Prisma.BannerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>[]
          }
          create: {
            args: Prisma.BannerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>
          }
          createMany: {
            args: Prisma.BannerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BannerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>[]
          }
          delete: {
            args: Prisma.BannerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>
          }
          update: {
            args: Prisma.BannerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>
          }
          deleteMany: {
            args: Prisma.BannerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BannerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BannerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>
          }
          aggregate: {
            args: Prisma.BannerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBanner>
          }
          groupBy: {
            args: Prisma.BannerGroupByArgs<ExtArgs>
            result: $Utils.Optional<BannerGroupByOutputType>[]
          }
          count: {
            args: Prisma.BannerCountArgs<ExtArgs>
            result: $Utils.Optional<BannerCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.DriverAdapter | null
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    promotions: number
    orderLines: number
    images: number
    categories: number
    locations: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | ProductCountOutputTypeCountPromotionsArgs
    orderLines?: boolean | ProductCountOutputTypeCountOrderLinesArgs
    images?: boolean | ProductCountOutputTypeCountImagesArgs
    categories?: boolean | ProductCountOutputTypeCountCategoriesArgs
    locations?: boolean | ProductCountOutputTypeCountLocationsArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductPromotionWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountOrderLinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderLineWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductImageWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductCategoryWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountLocationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductLocationWhereInput
  }


  /**
   * Count Type LocationCountOutputType
   */

  export type LocationCountOutputType = {
    productLocation: number
  }

  export type LocationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productLocation?: boolean | LocationCountOutputTypeCountProductLocationArgs
  }

  // Custom InputTypes
  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationCountOutputType
     */
    select?: LocationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeCountProductLocationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductLocationWhereInput
  }


  /**
   * Count Type ImageCountOutputType
   */

  export type ImageCountOutputType = {
    categoryImage: number
    categoryMiniature: number
    productImage: number
    productMiniature: number
    laboratoryImage: number
    laboratoryMiniature: number
    bannerImage: number
  }

  export type ImageCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoryImage?: boolean | ImageCountOutputTypeCountCategoryImageArgs
    categoryMiniature?: boolean | ImageCountOutputTypeCountCategoryMiniatureArgs
    productImage?: boolean | ImageCountOutputTypeCountProductImageArgs
    productMiniature?: boolean | ImageCountOutputTypeCountProductMiniatureArgs
    laboratoryImage?: boolean | ImageCountOutputTypeCountLaboratoryImageArgs
    laboratoryMiniature?: boolean | ImageCountOutputTypeCountLaboratoryMiniatureArgs
    bannerImage?: boolean | ImageCountOutputTypeCountBannerImageArgs
  }

  // Custom InputTypes
  /**
   * ImageCountOutputType without action
   */
  export type ImageCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageCountOutputType
     */
    select?: ImageCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ImageCountOutputType without action
   */
  export type ImageCountOutputTypeCountCategoryImageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * ImageCountOutputType without action
   */
  export type ImageCountOutputTypeCountCategoryMiniatureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * ImageCountOutputType without action
   */
  export type ImageCountOutputTypeCountProductImageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductImageWhereInput
  }

  /**
   * ImageCountOutputType without action
   */
  export type ImageCountOutputTypeCountProductMiniatureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * ImageCountOutputType without action
   */
  export type ImageCountOutputTypeCountLaboratoryImageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LaboratoryWhereInput
  }

  /**
   * ImageCountOutputType without action
   */
  export type ImageCountOutputTypeCountLaboratoryMiniatureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LaboratoryWhereInput
  }

  /**
   * ImageCountOutputType without action
   */
  export type ImageCountOutputTypeCountBannerImageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BannerWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    productCategory: number
    children: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productCategory?: boolean | CategoryCountOutputTypeCountProductCategoryArgs
    children?: boolean | CategoryCountOutputTypeCountChildrenArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountProductCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductCategoryWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountChildrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }


  /**
   * Count Type PromotionCountOutputType
   */

  export type PromotionCountOutputType = {
    products: number
    orderLines: number
  }

  export type PromotionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | PromotionCountOutputTypeCountProductsArgs
    orderLines?: boolean | PromotionCountOutputTypeCountOrderLinesArgs
  }

  // Custom InputTypes
  /**
   * PromotionCountOutputType without action
   */
  export type PromotionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCountOutputType
     */
    select?: PromotionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PromotionCountOutputType without action
   */
  export type PromotionCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductPromotionWhereInput
  }

  /**
   * PromotionCountOutputType without action
   */
  export type PromotionCountOutputTypeCountOrderLinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderLineWhereInput
  }


  /**
   * Count Type DeliveryMethodCountOutputType
   */

  export type DeliveryMethodCountOutputType = {
    deliveries: number
  }

  export type DeliveryMethodCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveries?: boolean | DeliveryMethodCountOutputTypeCountDeliveriesArgs
  }

  // Custom InputTypes
  /**
   * DeliveryMethodCountOutputType without action
   */
  export type DeliveryMethodCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryMethodCountOutputType
     */
    select?: DeliveryMethodCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DeliveryMethodCountOutputType without action
   */
  export type DeliveryMethodCountOutputTypeCountDeliveriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryWhereInput
  }


  /**
   * Count Type MediaCountOutputType
   */

  export type MediaCountOutputType = {
    deliveryOrder: number
    billingOrder: number
    phoneOrder: number
    emailOrder: number
    deliverySenderAddress: number
    deliverySenderPhone: number
    deliverySenderEmail: number
    deliveryReceiverAddress: number
    deliveryReceiverPhone: number
    deliveryReceiverEmail: number
    customerAddress: number
    customerPhone: number
  }

  export type MediaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveryOrder?: boolean | MediaCountOutputTypeCountDeliveryOrderArgs
    billingOrder?: boolean | MediaCountOutputTypeCountBillingOrderArgs
    phoneOrder?: boolean | MediaCountOutputTypeCountPhoneOrderArgs
    emailOrder?: boolean | MediaCountOutputTypeCountEmailOrderArgs
    deliverySenderAddress?: boolean | MediaCountOutputTypeCountDeliverySenderAddressArgs
    deliverySenderPhone?: boolean | MediaCountOutputTypeCountDeliverySenderPhoneArgs
    deliverySenderEmail?: boolean | MediaCountOutputTypeCountDeliverySenderEmailArgs
    deliveryReceiverAddress?: boolean | MediaCountOutputTypeCountDeliveryReceiverAddressArgs
    deliveryReceiverPhone?: boolean | MediaCountOutputTypeCountDeliveryReceiverPhoneArgs
    deliveryReceiverEmail?: boolean | MediaCountOutputTypeCountDeliveryReceiverEmailArgs
    customerAddress?: boolean | MediaCountOutputTypeCountCustomerAddressArgs
    customerPhone?: boolean | MediaCountOutputTypeCountCustomerPhoneArgs
  }

  // Custom InputTypes
  /**
   * MediaCountOutputType without action
   */
  export type MediaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MediaCountOutputType
     */
    select?: MediaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MediaCountOutputType without action
   */
  export type MediaCountOutputTypeCountDeliveryOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * MediaCountOutputType without action
   */
  export type MediaCountOutputTypeCountBillingOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * MediaCountOutputType without action
   */
  export type MediaCountOutputTypeCountPhoneOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * MediaCountOutputType without action
   */
  export type MediaCountOutputTypeCountEmailOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * MediaCountOutputType without action
   */
  export type MediaCountOutputTypeCountDeliverySenderAddressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryWhereInput
  }

  /**
   * MediaCountOutputType without action
   */
  export type MediaCountOutputTypeCountDeliverySenderPhoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryWhereInput
  }

  /**
   * MediaCountOutputType without action
   */
  export type MediaCountOutputTypeCountDeliverySenderEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryWhereInput
  }

  /**
   * MediaCountOutputType without action
   */
  export type MediaCountOutputTypeCountDeliveryReceiverAddressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryWhereInput
  }

  /**
   * MediaCountOutputType without action
   */
  export type MediaCountOutputTypeCountDeliveryReceiverPhoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryWhereInput
  }

  /**
   * MediaCountOutputType without action
   */
  export type MediaCountOutputTypeCountDeliveryReceiverEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryWhereInput
  }

  /**
   * MediaCountOutputType without action
   */
  export type MediaCountOutputTypeCountCustomerAddressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerWhereInput
  }

  /**
   * MediaCountOutputType without action
   */
  export type MediaCountOutputTypeCountCustomerPhoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    lines: number
    messages: number
    deliveries: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lines?: boolean | OrderCountOutputTypeCountLinesArgs
    messages?: boolean | OrderCountOutputTypeCountMessagesArgs
    deliveries?: boolean | OrderCountOutputTypeCountDeliveriesArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountLinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderLineWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountDeliveriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryWhereInput
  }


  /**
   * Count Type LaboratoryCountOutputType
   */

  export type LaboratoryCountOutputType = {
    product: number
  }

  export type LaboratoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | LaboratoryCountOutputTypeCountProductArgs
  }

  // Custom InputTypes
  /**
   * LaboratoryCountOutputType without action
   */
  export type LaboratoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LaboratoryCountOutputType
     */
    select?: LaboratoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LaboratoryCountOutputType without action
   */
  export type LaboratoryCountOutputTypeCountProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type CustomerCountOutputType
   */

  export type CustomerCountOutputType = {
    orders: number
  }

  export type CustomerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | CustomerCountOutputTypeCountOrdersArgs
  }

  // Custom InputTypes
  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerCountOutputType
     */
    select?: CustomerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Notice
   */

  export type AggregateNotice = {
    _count: NoticeCountAggregateOutputType | null
    _min: NoticeMinAggregateOutputType | null
    _max: NoticeMaxAggregateOutputType | null
  }

  export type NoticeMinAggregateOutputType = {
    productUuid: string | null
    url: string | null
  }

  export type NoticeMaxAggregateOutputType = {
    productUuid: string | null
    url: string | null
  }

  export type NoticeCountAggregateOutputType = {
    productUuid: number
    url: number
    _all: number
  }


  export type NoticeMinAggregateInputType = {
    productUuid?: true
    url?: true
  }

  export type NoticeMaxAggregateInputType = {
    productUuid?: true
    url?: true
  }

  export type NoticeCountAggregateInputType = {
    productUuid?: true
    url?: true
    _all?: true
  }

  export type NoticeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notice to aggregate.
     */
    where?: NoticeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notices to fetch.
     */
    orderBy?: NoticeOrderByWithRelationInput | NoticeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NoticeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notices
    **/
    _count?: true | NoticeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NoticeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NoticeMaxAggregateInputType
  }

  export type GetNoticeAggregateType<T extends NoticeAggregateArgs> = {
        [P in keyof T & keyof AggregateNotice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotice[P]>
      : GetScalarType<T[P], AggregateNotice[P]>
  }




  export type NoticeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoticeWhereInput
    orderBy?: NoticeOrderByWithAggregationInput | NoticeOrderByWithAggregationInput[]
    by: NoticeScalarFieldEnum[] | NoticeScalarFieldEnum
    having?: NoticeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NoticeCountAggregateInputType | true
    _min?: NoticeMinAggregateInputType
    _max?: NoticeMaxAggregateInputType
  }

  export type NoticeGroupByOutputType = {
    productUuid: string
    url: string
    _count: NoticeCountAggregateOutputType | null
    _min: NoticeMinAggregateOutputType | null
    _max: NoticeMaxAggregateOutputType | null
  }

  type GetNoticeGroupByPayload<T extends NoticeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NoticeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NoticeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NoticeGroupByOutputType[P]>
            : GetScalarType<T[P], NoticeGroupByOutputType[P]>
        }
      >
    >


  export type NoticeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    productUuid?: boolean
    url?: boolean
    product?: boolean | Notice$productArgs<ExtArgs>
  }, ExtArgs["result"]["notice"]>

  export type NoticeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    productUuid?: boolean
    url?: boolean
    product?: boolean | Notice$productArgs<ExtArgs>
  }, ExtArgs["result"]["notice"]>

  export type NoticeSelectScalar = {
    productUuid?: boolean
    url?: boolean
  }

  export type NoticeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | Notice$productArgs<ExtArgs>
  }
  export type NoticeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | Notice$productArgs<ExtArgs>
  }

  export type $NoticePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notice"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      productUuid: string
      url: string
    }, ExtArgs["result"]["notice"]>
    composites: {}
  }

  type NoticeGetPayload<S extends boolean | null | undefined | NoticeDefaultArgs> = $Result.GetResult<Prisma.$NoticePayload, S>

  type NoticeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NoticeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NoticeCountAggregateInputType | true
    }

  export interface NoticeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notice'], meta: { name: 'Notice' } }
    /**
     * Find zero or one Notice that matches the filter.
     * @param {NoticeFindUniqueArgs} args - Arguments to find a Notice
     * @example
     * // Get one Notice
     * const notice = await prisma.notice.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NoticeFindUniqueArgs>(args: SelectSubset<T, NoticeFindUniqueArgs<ExtArgs>>): Prisma__NoticeClient<$Result.GetResult<Prisma.$NoticePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Notice that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NoticeFindUniqueOrThrowArgs} args - Arguments to find a Notice
     * @example
     * // Get one Notice
     * const notice = await prisma.notice.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NoticeFindUniqueOrThrowArgs>(args: SelectSubset<T, NoticeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NoticeClient<$Result.GetResult<Prisma.$NoticePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Notice that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoticeFindFirstArgs} args - Arguments to find a Notice
     * @example
     * // Get one Notice
     * const notice = await prisma.notice.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NoticeFindFirstArgs>(args?: SelectSubset<T, NoticeFindFirstArgs<ExtArgs>>): Prisma__NoticeClient<$Result.GetResult<Prisma.$NoticePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Notice that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoticeFindFirstOrThrowArgs} args - Arguments to find a Notice
     * @example
     * // Get one Notice
     * const notice = await prisma.notice.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NoticeFindFirstOrThrowArgs>(args?: SelectSubset<T, NoticeFindFirstOrThrowArgs<ExtArgs>>): Prisma__NoticeClient<$Result.GetResult<Prisma.$NoticePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Notices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoticeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notices
     * const notices = await prisma.notice.findMany()
     * 
     * // Get first 10 Notices
     * const notices = await prisma.notice.findMany({ take: 10 })
     * 
     * // Only select the `productUuid`
     * const noticeWithProductUuidOnly = await prisma.notice.findMany({ select: { productUuid: true } })
     * 
     */
    findMany<T extends NoticeFindManyArgs>(args?: SelectSubset<T, NoticeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NoticePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Notice.
     * @param {NoticeCreateArgs} args - Arguments to create a Notice.
     * @example
     * // Create one Notice
     * const Notice = await prisma.notice.create({
     *   data: {
     *     // ... data to create a Notice
     *   }
     * })
     * 
     */
    create<T extends NoticeCreateArgs>(args: SelectSubset<T, NoticeCreateArgs<ExtArgs>>): Prisma__NoticeClient<$Result.GetResult<Prisma.$NoticePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Notices.
     * @param {NoticeCreateManyArgs} args - Arguments to create many Notices.
     * @example
     * // Create many Notices
     * const notice = await prisma.notice.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NoticeCreateManyArgs>(args?: SelectSubset<T, NoticeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notices and returns the data saved in the database.
     * @param {NoticeCreateManyAndReturnArgs} args - Arguments to create many Notices.
     * @example
     * // Create many Notices
     * const notice = await prisma.notice.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notices and only return the `productUuid`
     * const noticeWithProductUuidOnly = await prisma.notice.createManyAndReturn({ 
     *   select: { productUuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NoticeCreateManyAndReturnArgs>(args?: SelectSubset<T, NoticeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NoticePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Notice.
     * @param {NoticeDeleteArgs} args - Arguments to delete one Notice.
     * @example
     * // Delete one Notice
     * const Notice = await prisma.notice.delete({
     *   where: {
     *     // ... filter to delete one Notice
     *   }
     * })
     * 
     */
    delete<T extends NoticeDeleteArgs>(args: SelectSubset<T, NoticeDeleteArgs<ExtArgs>>): Prisma__NoticeClient<$Result.GetResult<Prisma.$NoticePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Notice.
     * @param {NoticeUpdateArgs} args - Arguments to update one Notice.
     * @example
     * // Update one Notice
     * const notice = await prisma.notice.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NoticeUpdateArgs>(args: SelectSubset<T, NoticeUpdateArgs<ExtArgs>>): Prisma__NoticeClient<$Result.GetResult<Prisma.$NoticePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Notices.
     * @param {NoticeDeleteManyArgs} args - Arguments to filter Notices to delete.
     * @example
     * // Delete a few Notices
     * const { count } = await prisma.notice.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NoticeDeleteManyArgs>(args?: SelectSubset<T, NoticeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoticeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notices
     * const notice = await prisma.notice.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NoticeUpdateManyArgs>(args: SelectSubset<T, NoticeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notice.
     * @param {NoticeUpsertArgs} args - Arguments to update or create a Notice.
     * @example
     * // Update or create a Notice
     * const notice = await prisma.notice.upsert({
     *   create: {
     *     // ... data to create a Notice
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notice we want to update
     *   }
     * })
     */
    upsert<T extends NoticeUpsertArgs>(args: SelectSubset<T, NoticeUpsertArgs<ExtArgs>>): Prisma__NoticeClient<$Result.GetResult<Prisma.$NoticePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Notices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoticeCountArgs} args - Arguments to filter Notices to count.
     * @example
     * // Count the number of Notices
     * const count = await prisma.notice.count({
     *   where: {
     *     // ... the filter for the Notices we want to count
     *   }
     * })
    **/
    count<T extends NoticeCountArgs>(
      args?: Subset<T, NoticeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NoticeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoticeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NoticeAggregateArgs>(args: Subset<T, NoticeAggregateArgs>): Prisma.PrismaPromise<GetNoticeAggregateType<T>>

    /**
     * Group by Notice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoticeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NoticeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NoticeGroupByArgs['orderBy'] }
        : { orderBy?: NoticeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NoticeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNoticeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notice model
   */
  readonly fields: NoticeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notice.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NoticeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends Notice$productArgs<ExtArgs> = {}>(args?: Subset<T, Notice$productArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notice model
   */ 
  interface NoticeFieldRefs {
    readonly productUuid: FieldRef<"Notice", 'String'>
    readonly url: FieldRef<"Notice", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Notice findUnique
   */
  export type NoticeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notice
     */
    select?: NoticeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoticeInclude<ExtArgs> | null
    /**
     * Filter, which Notice to fetch.
     */
    where: NoticeWhereUniqueInput
  }

  /**
   * Notice findUniqueOrThrow
   */
  export type NoticeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notice
     */
    select?: NoticeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoticeInclude<ExtArgs> | null
    /**
     * Filter, which Notice to fetch.
     */
    where: NoticeWhereUniqueInput
  }

  /**
   * Notice findFirst
   */
  export type NoticeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notice
     */
    select?: NoticeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoticeInclude<ExtArgs> | null
    /**
     * Filter, which Notice to fetch.
     */
    where?: NoticeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notices to fetch.
     */
    orderBy?: NoticeOrderByWithRelationInput | NoticeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notices.
     */
    cursor?: NoticeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notices.
     */
    distinct?: NoticeScalarFieldEnum | NoticeScalarFieldEnum[]
  }

  /**
   * Notice findFirstOrThrow
   */
  export type NoticeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notice
     */
    select?: NoticeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoticeInclude<ExtArgs> | null
    /**
     * Filter, which Notice to fetch.
     */
    where?: NoticeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notices to fetch.
     */
    orderBy?: NoticeOrderByWithRelationInput | NoticeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notices.
     */
    cursor?: NoticeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notices.
     */
    distinct?: NoticeScalarFieldEnum | NoticeScalarFieldEnum[]
  }

  /**
   * Notice findMany
   */
  export type NoticeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notice
     */
    select?: NoticeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoticeInclude<ExtArgs> | null
    /**
     * Filter, which Notices to fetch.
     */
    where?: NoticeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notices to fetch.
     */
    orderBy?: NoticeOrderByWithRelationInput | NoticeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notices.
     */
    cursor?: NoticeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notices.
     */
    skip?: number
    distinct?: NoticeScalarFieldEnum | NoticeScalarFieldEnum[]
  }

  /**
   * Notice create
   */
  export type NoticeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notice
     */
    select?: NoticeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoticeInclude<ExtArgs> | null
    /**
     * The data needed to create a Notice.
     */
    data: XOR<NoticeCreateInput, NoticeUncheckedCreateInput>
  }

  /**
   * Notice createMany
   */
  export type NoticeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notices.
     */
    data: NoticeCreateManyInput | NoticeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notice createManyAndReturn
   */
  export type NoticeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notice
     */
    select?: NoticeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Notices.
     */
    data: NoticeCreateManyInput | NoticeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoticeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notice update
   */
  export type NoticeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notice
     */
    select?: NoticeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoticeInclude<ExtArgs> | null
    /**
     * The data needed to update a Notice.
     */
    data: XOR<NoticeUpdateInput, NoticeUncheckedUpdateInput>
    /**
     * Choose, which Notice to update.
     */
    where: NoticeWhereUniqueInput
  }

  /**
   * Notice updateMany
   */
  export type NoticeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notices.
     */
    data: XOR<NoticeUpdateManyMutationInput, NoticeUncheckedUpdateManyInput>
    /**
     * Filter which Notices to update
     */
    where?: NoticeWhereInput
  }

  /**
   * Notice upsert
   */
  export type NoticeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notice
     */
    select?: NoticeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoticeInclude<ExtArgs> | null
    /**
     * The filter to search for the Notice to update in case it exists.
     */
    where: NoticeWhereUniqueInput
    /**
     * In case the Notice found by the `where` argument doesn't exist, create a new Notice with this data.
     */
    create: XOR<NoticeCreateInput, NoticeUncheckedCreateInput>
    /**
     * In case the Notice was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NoticeUpdateInput, NoticeUncheckedUpdateInput>
  }

  /**
   * Notice delete
   */
  export type NoticeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notice
     */
    select?: NoticeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoticeInclude<ExtArgs> | null
    /**
     * Filter which Notice to delete.
     */
    where: NoticeWhereUniqueInput
  }

  /**
   * Notice deleteMany
   */
  export type NoticeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notices to delete
     */
    where?: NoticeWhereInput
  }

  /**
   * Notice.product
   */
  export type Notice$productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
  }

  /**
   * Notice without action
   */
  export type NoticeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notice
     */
    select?: NoticeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoticeInclude<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    availableStock: number | null
    priceWithoutTax: Decimal | null
    percentTaxRate: Decimal | null
    weight: number | null
    maxQuantityForOrder: number | null
  }

  export type ProductSumAggregateOutputType = {
    availableStock: number | null
    priceWithoutTax: Decimal | null
    percentTaxRate: Decimal | null
    weight: number | null
    maxQuantityForOrder: number | null
  }

  export type ProductMinAggregateOutputType = {
    uuid: string | null
    availableStock: number | null
    name: string | null
    miniatureHash: string | null
    cip7: string | null
    cip13: string | null
    ean13: string | null
    priceWithoutTax: Decimal | null
    percentTaxRate: Decimal | null
    laboratoryUuid: string | null
    description: string | null
    instructionsForUse: string | null
    composition: string | null
    weight: number | null
    maxQuantityForOrder: number | null
    status: $Enums.ProductStatus | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type ProductMaxAggregateOutputType = {
    uuid: string | null
    availableStock: number | null
    name: string | null
    miniatureHash: string | null
    cip7: string | null
    cip13: string | null
    ean13: string | null
    priceWithoutTax: Decimal | null
    percentTaxRate: Decimal | null
    laboratoryUuid: string | null
    description: string | null
    instructionsForUse: string | null
    composition: string | null
    weight: number | null
    maxQuantityForOrder: number | null
    status: $Enums.ProductStatus | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type ProductCountAggregateOutputType = {
    uuid: number
    availableStock: number
    name: number
    miniatureHash: number
    cip7: number
    cip13: number
    ean13: number
    priceWithoutTax: number
    percentTaxRate: number
    laboratoryUuid: number
    description: number
    instructionsForUse: number
    composition: number
    weight: number
    maxQuantityForOrder: number
    status: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    availableStock?: true
    priceWithoutTax?: true
    percentTaxRate?: true
    weight?: true
    maxQuantityForOrder?: true
  }

  export type ProductSumAggregateInputType = {
    availableStock?: true
    priceWithoutTax?: true
    percentTaxRate?: true
    weight?: true
    maxQuantityForOrder?: true
  }

  export type ProductMinAggregateInputType = {
    uuid?: true
    availableStock?: true
    name?: true
    miniatureHash?: true
    cip7?: true
    cip13?: true
    ean13?: true
    priceWithoutTax?: true
    percentTaxRate?: true
    laboratoryUuid?: true
    description?: true
    instructionsForUse?: true
    composition?: true
    weight?: true
    maxQuantityForOrder?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ProductMaxAggregateInputType = {
    uuid?: true
    availableStock?: true
    name?: true
    miniatureHash?: true
    cip7?: true
    cip13?: true
    ean13?: true
    priceWithoutTax?: true
    percentTaxRate?: true
    laboratoryUuid?: true
    description?: true
    instructionsForUse?: true
    composition?: true
    weight?: true
    maxQuantityForOrder?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ProductCountAggregateInputType = {
    uuid?: true
    availableStock?: true
    name?: true
    miniatureHash?: true
    cip7?: true
    cip13?: true
    ean13?: true
    priceWithoutTax?: true
    percentTaxRate?: true
    laboratoryUuid?: true
    description?: true
    instructionsForUse?: true
    composition?: true
    weight?: true
    maxQuantityForOrder?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    uuid: string
    availableStock: number
    name: string
    miniatureHash: string | null
    cip7: string | null
    cip13: string | null
    ean13: string
    priceWithoutTax: Decimal
    percentTaxRate: Decimal
    laboratoryUuid: string | null
    description: string | null
    instructionsForUse: string | null
    composition: string | null
    weight: number
    maxQuantityForOrder: number | null
    status: $Enums.ProductStatus
    createdAt: Date
    createdBy: string
    updatedAt: Date
    updatedBy: string
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    availableStock?: boolean
    name?: boolean
    miniatureHash?: boolean
    cip7?: boolean
    cip13?: boolean
    ean13?: boolean
    priceWithoutTax?: boolean
    percentTaxRate?: boolean
    laboratoryUuid?: boolean
    description?: boolean
    instructionsForUse?: boolean
    composition?: boolean
    weight?: boolean
    maxQuantityForOrder?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    promotions?: boolean | Product$promotionsArgs<ExtArgs>
    orderLines?: boolean | Product$orderLinesArgs<ExtArgs>
    images?: boolean | Product$imagesArgs<ExtArgs>
    miniature?: boolean | Product$miniatureArgs<ExtArgs>
    categories?: boolean | Product$categoriesArgs<ExtArgs>
    laboratory?: boolean | Product$laboratoryArgs<ExtArgs>
    locations?: boolean | Product$locationsArgs<ExtArgs>
    notice?: boolean | Product$noticeArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    availableStock?: boolean
    name?: boolean
    miniatureHash?: boolean
    cip7?: boolean
    cip13?: boolean
    ean13?: boolean
    priceWithoutTax?: boolean
    percentTaxRate?: boolean
    laboratoryUuid?: boolean
    description?: boolean
    instructionsForUse?: boolean
    composition?: boolean
    weight?: boolean
    maxQuantityForOrder?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    miniature?: boolean | Product$miniatureArgs<ExtArgs>
    laboratory?: boolean | Product$laboratoryArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    uuid?: boolean
    availableStock?: boolean
    name?: boolean
    miniatureHash?: boolean
    cip7?: boolean
    cip13?: boolean
    ean13?: boolean
    priceWithoutTax?: boolean
    percentTaxRate?: boolean
    laboratoryUuid?: boolean
    description?: boolean
    instructionsForUse?: boolean
    composition?: boolean
    weight?: boolean
    maxQuantityForOrder?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | Product$promotionsArgs<ExtArgs>
    orderLines?: boolean | Product$orderLinesArgs<ExtArgs>
    images?: boolean | Product$imagesArgs<ExtArgs>
    miniature?: boolean | Product$miniatureArgs<ExtArgs>
    categories?: boolean | Product$categoriesArgs<ExtArgs>
    laboratory?: boolean | Product$laboratoryArgs<ExtArgs>
    locations?: boolean | Product$locationsArgs<ExtArgs>
    notice?: boolean | Product$noticeArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    miniature?: boolean | Product$miniatureArgs<ExtArgs>
    laboratory?: boolean | Product$laboratoryArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      promotions: Prisma.$ProductPromotionPayload<ExtArgs>[]
      orderLines: Prisma.$OrderLinePayload<ExtArgs>[]
      images: Prisma.$ProductImagePayload<ExtArgs>[]
      miniature: Prisma.$ImagePayload<ExtArgs> | null
      categories: Prisma.$ProductCategoryPayload<ExtArgs>[]
      laboratory: Prisma.$LaboratoryPayload<ExtArgs> | null
      locations: Prisma.$ProductLocationPayload<ExtArgs>[]
      notice: Prisma.$NoticePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      availableStock: number
      name: string
      miniatureHash: string | null
      cip7: string | null
      cip13: string | null
      ean13: string
      priceWithoutTax: Prisma.Decimal
      percentTaxRate: Prisma.Decimal
      laboratoryUuid: string | null
      description: string | null
      instructionsForUse: string | null
      composition: string | null
      weight: number
      maxQuantityForOrder: number | null
      status: $Enums.ProductStatus
      createdAt: Date
      createdBy: string
      updatedAt: Date
      updatedBy: string
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const productWithUuidOnly = await prisma.product.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `uuid`
     * const productWithUuidOnly = await prisma.product.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    promotions<T extends Product$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, Product$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPromotionPayload<ExtArgs>, T, "findMany"> | Null>
    orderLines<T extends Product$orderLinesArgs<ExtArgs> = {}>(args?: Subset<T, Product$orderLinesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderLinePayload<ExtArgs>, T, "findMany"> | Null>
    images<T extends Product$imagesArgs<ExtArgs> = {}>(args?: Subset<T, Product$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findMany"> | Null>
    miniature<T extends Product$miniatureArgs<ExtArgs> = {}>(args?: Subset<T, Product$miniatureArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    categories<T extends Product$categoriesArgs<ExtArgs> = {}>(args?: Subset<T, Product$categoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findMany"> | Null>
    laboratory<T extends Product$laboratoryArgs<ExtArgs> = {}>(args?: Subset<T, Product$laboratoryArgs<ExtArgs>>): Prisma__LaboratoryClient<$Result.GetResult<Prisma.$LaboratoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    locations<T extends Product$locationsArgs<ExtArgs> = {}>(args?: Subset<T, Product$locationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductLocationPayload<ExtArgs>, T, "findMany"> | Null>
    notice<T extends Product$noticeArgs<ExtArgs> = {}>(args?: Subset<T, Product$noticeArgs<ExtArgs>>): Prisma__NoticeClient<$Result.GetResult<Prisma.$NoticePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */ 
  interface ProductFieldRefs {
    readonly uuid: FieldRef<"Product", 'String'>
    readonly availableStock: FieldRef<"Product", 'Int'>
    readonly name: FieldRef<"Product", 'String'>
    readonly miniatureHash: FieldRef<"Product", 'String'>
    readonly cip7: FieldRef<"Product", 'String'>
    readonly cip13: FieldRef<"Product", 'String'>
    readonly ean13: FieldRef<"Product", 'String'>
    readonly priceWithoutTax: FieldRef<"Product", 'Decimal'>
    readonly percentTaxRate: FieldRef<"Product", 'Decimal'>
    readonly laboratoryUuid: FieldRef<"Product", 'String'>
    readonly description: FieldRef<"Product", 'String'>
    readonly instructionsForUse: FieldRef<"Product", 'String'>
    readonly composition: FieldRef<"Product", 'String'>
    readonly weight: FieldRef<"Product", 'Int'>
    readonly maxQuantityForOrder: FieldRef<"Product", 'Int'>
    readonly status: FieldRef<"Product", 'ProductStatus'>
    readonly createdAt: FieldRef<"Product", 'DateTime'>
    readonly createdBy: FieldRef<"Product", 'String'>
    readonly updatedAt: FieldRef<"Product", 'DateTime'>
    readonly updatedBy: FieldRef<"Product", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
  }

  /**
   * Product.promotions
   */
  export type Product$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPromotion
     */
    select?: ProductPromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductPromotionInclude<ExtArgs> | null
    where?: ProductPromotionWhereInput
    orderBy?: ProductPromotionOrderByWithRelationInput | ProductPromotionOrderByWithRelationInput[]
    cursor?: ProductPromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductPromotionScalarFieldEnum | ProductPromotionScalarFieldEnum[]
  }

  /**
   * Product.orderLines
   */
  export type Product$orderLinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineInclude<ExtArgs> | null
    where?: OrderLineWhereInput
    orderBy?: OrderLineOrderByWithRelationInput | OrderLineOrderByWithRelationInput[]
    cursor?: OrderLineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderLineScalarFieldEnum | OrderLineScalarFieldEnum[]
  }

  /**
   * Product.images
   */
  export type Product$imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    where?: ProductImageWhereInput
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    cursor?: ProductImageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * Product.miniature
   */
  export type Product$miniatureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    where?: ImageWhereInput
  }

  /**
   * Product.categories
   */
  export type Product$categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    where?: ProductCategoryWhereInput
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    cursor?: ProductCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * Product.laboratory
   */
  export type Product$laboratoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryInclude<ExtArgs> | null
    where?: LaboratoryWhereInput
  }

  /**
   * Product.locations
   */
  export type Product$locationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductLocation
     */
    select?: ProductLocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductLocationInclude<ExtArgs> | null
    where?: ProductLocationWhereInput
    orderBy?: ProductLocationOrderByWithRelationInput | ProductLocationOrderByWithRelationInput[]
    cursor?: ProductLocationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductLocationScalarFieldEnum | ProductLocationScalarFieldEnum[]
  }

  /**
   * Product.notice
   */
  export type Product$noticeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notice
     */
    select?: NoticeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoticeInclude<ExtArgs> | null
    where?: NoticeWhereInput
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model Location
   */

  export type AggregateLocation = {
    _count: LocationCountAggregateOutputType | null
    _avg: LocationAvgAggregateOutputType | null
    _sum: LocationSumAggregateOutputType | null
    _min: LocationMinAggregateOutputType | null
    _max: LocationMaxAggregateOutputType | null
  }

  export type LocationAvgAggregateOutputType = {
    order: number | null
  }

  export type LocationSumAggregateOutputType = {
    order: number | null
  }

  export type LocationMinAggregateOutputType = {
    uuid: string | null
    name: string | null
    order: number | null
  }

  export type LocationMaxAggregateOutputType = {
    uuid: string | null
    name: string | null
    order: number | null
  }

  export type LocationCountAggregateOutputType = {
    uuid: number
    name: number
    order: number
    _all: number
  }


  export type LocationAvgAggregateInputType = {
    order?: true
  }

  export type LocationSumAggregateInputType = {
    order?: true
  }

  export type LocationMinAggregateInputType = {
    uuid?: true
    name?: true
    order?: true
  }

  export type LocationMaxAggregateInputType = {
    uuid?: true
    name?: true
    order?: true
  }

  export type LocationCountAggregateInputType = {
    uuid?: true
    name?: true
    order?: true
    _all?: true
  }

  export type LocationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Location to aggregate.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Locations
    **/
    _count?: true | LocationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LocationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LocationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LocationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LocationMaxAggregateInputType
  }

  export type GetLocationAggregateType<T extends LocationAggregateArgs> = {
        [P in keyof T & keyof AggregateLocation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLocation[P]>
      : GetScalarType<T[P], AggregateLocation[P]>
  }




  export type LocationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LocationWhereInput
    orderBy?: LocationOrderByWithAggregationInput | LocationOrderByWithAggregationInput[]
    by: LocationScalarFieldEnum[] | LocationScalarFieldEnum
    having?: LocationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LocationCountAggregateInputType | true
    _avg?: LocationAvgAggregateInputType
    _sum?: LocationSumAggregateInputType
    _min?: LocationMinAggregateInputType
    _max?: LocationMaxAggregateInputType
  }

  export type LocationGroupByOutputType = {
    uuid: string
    name: string
    order: number
    _count: LocationCountAggregateOutputType | null
    _avg: LocationAvgAggregateOutputType | null
    _sum: LocationSumAggregateOutputType | null
    _min: LocationMinAggregateOutputType | null
    _max: LocationMaxAggregateOutputType | null
  }

  type GetLocationGroupByPayload<T extends LocationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LocationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LocationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LocationGroupByOutputType[P]>
            : GetScalarType<T[P], LocationGroupByOutputType[P]>
        }
      >
    >


  export type LocationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    name?: boolean
    order?: boolean
    productLocation?: boolean | Location$productLocationArgs<ExtArgs>
    _count?: boolean | LocationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["location"]>

  export type LocationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    name?: boolean
    order?: boolean
  }, ExtArgs["result"]["location"]>

  export type LocationSelectScalar = {
    uuid?: boolean
    name?: boolean
    order?: boolean
  }

  export type LocationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productLocation?: boolean | Location$productLocationArgs<ExtArgs>
    _count?: boolean | LocationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LocationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $LocationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Location"
    objects: {
      productLocation: Prisma.$ProductLocationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      name: string
      order: number
    }, ExtArgs["result"]["location"]>
    composites: {}
  }

  type LocationGetPayload<S extends boolean | null | undefined | LocationDefaultArgs> = $Result.GetResult<Prisma.$LocationPayload, S>

  type LocationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LocationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LocationCountAggregateInputType | true
    }

  export interface LocationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Location'], meta: { name: 'Location' } }
    /**
     * Find zero or one Location that matches the filter.
     * @param {LocationFindUniqueArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LocationFindUniqueArgs>(args: SelectSubset<T, LocationFindUniqueArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Location that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LocationFindUniqueOrThrowArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LocationFindUniqueOrThrowArgs>(args: SelectSubset<T, LocationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Location that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindFirstArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LocationFindFirstArgs>(args?: SelectSubset<T, LocationFindFirstArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Location that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindFirstOrThrowArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LocationFindFirstOrThrowArgs>(args?: SelectSubset<T, LocationFindFirstOrThrowArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Locations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Locations
     * const locations = await prisma.location.findMany()
     * 
     * // Get first 10 Locations
     * const locations = await prisma.location.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const locationWithUuidOnly = await prisma.location.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends LocationFindManyArgs>(args?: SelectSubset<T, LocationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Location.
     * @param {LocationCreateArgs} args - Arguments to create a Location.
     * @example
     * // Create one Location
     * const Location = await prisma.location.create({
     *   data: {
     *     // ... data to create a Location
     *   }
     * })
     * 
     */
    create<T extends LocationCreateArgs>(args: SelectSubset<T, LocationCreateArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Locations.
     * @param {LocationCreateManyArgs} args - Arguments to create many Locations.
     * @example
     * // Create many Locations
     * const location = await prisma.location.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LocationCreateManyArgs>(args?: SelectSubset<T, LocationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Locations and returns the data saved in the database.
     * @param {LocationCreateManyAndReturnArgs} args - Arguments to create many Locations.
     * @example
     * // Create many Locations
     * const location = await prisma.location.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Locations and only return the `uuid`
     * const locationWithUuidOnly = await prisma.location.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LocationCreateManyAndReturnArgs>(args?: SelectSubset<T, LocationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Location.
     * @param {LocationDeleteArgs} args - Arguments to delete one Location.
     * @example
     * // Delete one Location
     * const Location = await prisma.location.delete({
     *   where: {
     *     // ... filter to delete one Location
     *   }
     * })
     * 
     */
    delete<T extends LocationDeleteArgs>(args: SelectSubset<T, LocationDeleteArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Location.
     * @param {LocationUpdateArgs} args - Arguments to update one Location.
     * @example
     * // Update one Location
     * const location = await prisma.location.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LocationUpdateArgs>(args: SelectSubset<T, LocationUpdateArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Locations.
     * @param {LocationDeleteManyArgs} args - Arguments to filter Locations to delete.
     * @example
     * // Delete a few Locations
     * const { count } = await prisma.location.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LocationDeleteManyArgs>(args?: SelectSubset<T, LocationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Locations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Locations
     * const location = await prisma.location.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LocationUpdateManyArgs>(args: SelectSubset<T, LocationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Location.
     * @param {LocationUpsertArgs} args - Arguments to update or create a Location.
     * @example
     * // Update or create a Location
     * const location = await prisma.location.upsert({
     *   create: {
     *     // ... data to create a Location
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Location we want to update
     *   }
     * })
     */
    upsert<T extends LocationUpsertArgs>(args: SelectSubset<T, LocationUpsertArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Locations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationCountArgs} args - Arguments to filter Locations to count.
     * @example
     * // Count the number of Locations
     * const count = await prisma.location.count({
     *   where: {
     *     // ... the filter for the Locations we want to count
     *   }
     * })
    **/
    count<T extends LocationCountArgs>(
      args?: Subset<T, LocationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LocationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Location.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LocationAggregateArgs>(args: Subset<T, LocationAggregateArgs>): Prisma.PrismaPromise<GetLocationAggregateType<T>>

    /**
     * Group by Location.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LocationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LocationGroupByArgs['orderBy'] }
        : { orderBy?: LocationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LocationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLocationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Location model
   */
  readonly fields: LocationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Location.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LocationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productLocation<T extends Location$productLocationArgs<ExtArgs> = {}>(args?: Subset<T, Location$productLocationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductLocationPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Location model
   */ 
  interface LocationFieldRefs {
    readonly uuid: FieldRef<"Location", 'String'>
    readonly name: FieldRef<"Location", 'String'>
    readonly order: FieldRef<"Location", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Location findUnique
   */
  export type LocationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location findUniqueOrThrow
   */
  export type LocationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location findFirst
   */
  export type LocationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Locations.
     */
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location findFirstOrThrow
   */
  export type LocationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Locations.
     */
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location findMany
   */
  export type LocationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Locations to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location create
   */
  export type LocationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The data needed to create a Location.
     */
    data: XOR<LocationCreateInput, LocationUncheckedCreateInput>
  }

  /**
   * Location createMany
   */
  export type LocationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Locations.
     */
    data: LocationCreateManyInput | LocationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Location createManyAndReturn
   */
  export type LocationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Locations.
     */
    data: LocationCreateManyInput | LocationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Location update
   */
  export type LocationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The data needed to update a Location.
     */
    data: XOR<LocationUpdateInput, LocationUncheckedUpdateInput>
    /**
     * Choose, which Location to update.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location updateMany
   */
  export type LocationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Locations.
     */
    data: XOR<LocationUpdateManyMutationInput, LocationUncheckedUpdateManyInput>
    /**
     * Filter which Locations to update
     */
    where?: LocationWhereInput
  }

  /**
   * Location upsert
   */
  export type LocationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The filter to search for the Location to update in case it exists.
     */
    where: LocationWhereUniqueInput
    /**
     * In case the Location found by the `where` argument doesn't exist, create a new Location with this data.
     */
    create: XOR<LocationCreateInput, LocationUncheckedCreateInput>
    /**
     * In case the Location was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LocationUpdateInput, LocationUncheckedUpdateInput>
  }

  /**
   * Location delete
   */
  export type LocationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter which Location to delete.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location deleteMany
   */
  export type LocationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Locations to delete
     */
    where?: LocationWhereInput
  }

  /**
   * Location.productLocation
   */
  export type Location$productLocationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductLocation
     */
    select?: ProductLocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductLocationInclude<ExtArgs> | null
    where?: ProductLocationWhereInput
    orderBy?: ProductLocationOrderByWithRelationInput | ProductLocationOrderByWithRelationInput[]
    cursor?: ProductLocationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductLocationScalarFieldEnum | ProductLocationScalarFieldEnum[]
  }

  /**
   * Location without action
   */
  export type LocationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
  }


  /**
   * Model ProductLocation
   */

  export type AggregateProductLocation = {
    _count: ProductLocationCountAggregateOutputType | null
    _min: ProductLocationMinAggregateOutputType | null
    _max: ProductLocationMaxAggregateOutputType | null
  }

  export type ProductLocationMinAggregateOutputType = {
    locationUuid: string | null
    productUuid: string | null
    value: string | null
  }

  export type ProductLocationMaxAggregateOutputType = {
    locationUuid: string | null
    productUuid: string | null
    value: string | null
  }

  export type ProductLocationCountAggregateOutputType = {
    locationUuid: number
    productUuid: number
    value: number
    _all: number
  }


  export type ProductLocationMinAggregateInputType = {
    locationUuid?: true
    productUuid?: true
    value?: true
  }

  export type ProductLocationMaxAggregateInputType = {
    locationUuid?: true
    productUuid?: true
    value?: true
  }

  export type ProductLocationCountAggregateInputType = {
    locationUuid?: true
    productUuid?: true
    value?: true
    _all?: true
  }

  export type ProductLocationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductLocation to aggregate.
     */
    where?: ProductLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductLocations to fetch.
     */
    orderBy?: ProductLocationOrderByWithRelationInput | ProductLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductLocations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductLocations
    **/
    _count?: true | ProductLocationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductLocationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductLocationMaxAggregateInputType
  }

  export type GetProductLocationAggregateType<T extends ProductLocationAggregateArgs> = {
        [P in keyof T & keyof AggregateProductLocation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductLocation[P]>
      : GetScalarType<T[P], AggregateProductLocation[P]>
  }




  export type ProductLocationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductLocationWhereInput
    orderBy?: ProductLocationOrderByWithAggregationInput | ProductLocationOrderByWithAggregationInput[]
    by: ProductLocationScalarFieldEnum[] | ProductLocationScalarFieldEnum
    having?: ProductLocationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductLocationCountAggregateInputType | true
    _min?: ProductLocationMinAggregateInputType
    _max?: ProductLocationMaxAggregateInputType
  }

  export type ProductLocationGroupByOutputType = {
    locationUuid: string
    productUuid: string
    value: string
    _count: ProductLocationCountAggregateOutputType | null
    _min: ProductLocationMinAggregateOutputType | null
    _max: ProductLocationMaxAggregateOutputType | null
  }

  type GetProductLocationGroupByPayload<T extends ProductLocationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductLocationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductLocationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductLocationGroupByOutputType[P]>
            : GetScalarType<T[P], ProductLocationGroupByOutputType[P]>
        }
      >
    >


  export type ProductLocationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    locationUuid?: boolean
    productUuid?: boolean
    value?: boolean
    location?: boolean | LocationDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productLocation"]>

  export type ProductLocationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    locationUuid?: boolean
    productUuid?: boolean
    value?: boolean
    location?: boolean | LocationDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productLocation"]>

  export type ProductLocationSelectScalar = {
    locationUuid?: boolean
    productUuid?: boolean
    value?: boolean
  }

  export type ProductLocationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    location?: boolean | LocationDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductLocationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    location?: boolean | LocationDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductLocationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductLocation"
    objects: {
      location: Prisma.$LocationPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      locationUuid: string
      productUuid: string
      value: string
    }, ExtArgs["result"]["productLocation"]>
    composites: {}
  }

  type ProductLocationGetPayload<S extends boolean | null | undefined | ProductLocationDefaultArgs> = $Result.GetResult<Prisma.$ProductLocationPayload, S>

  type ProductLocationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductLocationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductLocationCountAggregateInputType | true
    }

  export interface ProductLocationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductLocation'], meta: { name: 'ProductLocation' } }
    /**
     * Find zero or one ProductLocation that matches the filter.
     * @param {ProductLocationFindUniqueArgs} args - Arguments to find a ProductLocation
     * @example
     * // Get one ProductLocation
     * const productLocation = await prisma.productLocation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductLocationFindUniqueArgs>(args: SelectSubset<T, ProductLocationFindUniqueArgs<ExtArgs>>): Prisma__ProductLocationClient<$Result.GetResult<Prisma.$ProductLocationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProductLocation that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductLocationFindUniqueOrThrowArgs} args - Arguments to find a ProductLocation
     * @example
     * // Get one ProductLocation
     * const productLocation = await prisma.productLocation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductLocationFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductLocationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductLocationClient<$Result.GetResult<Prisma.$ProductLocationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProductLocation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductLocationFindFirstArgs} args - Arguments to find a ProductLocation
     * @example
     * // Get one ProductLocation
     * const productLocation = await prisma.productLocation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductLocationFindFirstArgs>(args?: SelectSubset<T, ProductLocationFindFirstArgs<ExtArgs>>): Prisma__ProductLocationClient<$Result.GetResult<Prisma.$ProductLocationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProductLocation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductLocationFindFirstOrThrowArgs} args - Arguments to find a ProductLocation
     * @example
     * // Get one ProductLocation
     * const productLocation = await prisma.productLocation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductLocationFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductLocationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductLocationClient<$Result.GetResult<Prisma.$ProductLocationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProductLocations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductLocationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductLocations
     * const productLocations = await prisma.productLocation.findMany()
     * 
     * // Get first 10 ProductLocations
     * const productLocations = await prisma.productLocation.findMany({ take: 10 })
     * 
     * // Only select the `locationUuid`
     * const productLocationWithLocationUuidOnly = await prisma.productLocation.findMany({ select: { locationUuid: true } })
     * 
     */
    findMany<T extends ProductLocationFindManyArgs>(args?: SelectSubset<T, ProductLocationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductLocationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProductLocation.
     * @param {ProductLocationCreateArgs} args - Arguments to create a ProductLocation.
     * @example
     * // Create one ProductLocation
     * const ProductLocation = await prisma.productLocation.create({
     *   data: {
     *     // ... data to create a ProductLocation
     *   }
     * })
     * 
     */
    create<T extends ProductLocationCreateArgs>(args: SelectSubset<T, ProductLocationCreateArgs<ExtArgs>>): Prisma__ProductLocationClient<$Result.GetResult<Prisma.$ProductLocationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProductLocations.
     * @param {ProductLocationCreateManyArgs} args - Arguments to create many ProductLocations.
     * @example
     * // Create many ProductLocations
     * const productLocation = await prisma.productLocation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductLocationCreateManyArgs>(args?: SelectSubset<T, ProductLocationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductLocations and returns the data saved in the database.
     * @param {ProductLocationCreateManyAndReturnArgs} args - Arguments to create many ProductLocations.
     * @example
     * // Create many ProductLocations
     * const productLocation = await prisma.productLocation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductLocations and only return the `locationUuid`
     * const productLocationWithLocationUuidOnly = await prisma.productLocation.createManyAndReturn({ 
     *   select: { locationUuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductLocationCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductLocationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductLocationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ProductLocation.
     * @param {ProductLocationDeleteArgs} args - Arguments to delete one ProductLocation.
     * @example
     * // Delete one ProductLocation
     * const ProductLocation = await prisma.productLocation.delete({
     *   where: {
     *     // ... filter to delete one ProductLocation
     *   }
     * })
     * 
     */
    delete<T extends ProductLocationDeleteArgs>(args: SelectSubset<T, ProductLocationDeleteArgs<ExtArgs>>): Prisma__ProductLocationClient<$Result.GetResult<Prisma.$ProductLocationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProductLocation.
     * @param {ProductLocationUpdateArgs} args - Arguments to update one ProductLocation.
     * @example
     * // Update one ProductLocation
     * const productLocation = await prisma.productLocation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductLocationUpdateArgs>(args: SelectSubset<T, ProductLocationUpdateArgs<ExtArgs>>): Prisma__ProductLocationClient<$Result.GetResult<Prisma.$ProductLocationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProductLocations.
     * @param {ProductLocationDeleteManyArgs} args - Arguments to filter ProductLocations to delete.
     * @example
     * // Delete a few ProductLocations
     * const { count } = await prisma.productLocation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductLocationDeleteManyArgs>(args?: SelectSubset<T, ProductLocationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductLocations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductLocationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductLocations
     * const productLocation = await prisma.productLocation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductLocationUpdateManyArgs>(args: SelectSubset<T, ProductLocationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductLocation.
     * @param {ProductLocationUpsertArgs} args - Arguments to update or create a ProductLocation.
     * @example
     * // Update or create a ProductLocation
     * const productLocation = await prisma.productLocation.upsert({
     *   create: {
     *     // ... data to create a ProductLocation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductLocation we want to update
     *   }
     * })
     */
    upsert<T extends ProductLocationUpsertArgs>(args: SelectSubset<T, ProductLocationUpsertArgs<ExtArgs>>): Prisma__ProductLocationClient<$Result.GetResult<Prisma.$ProductLocationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProductLocations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductLocationCountArgs} args - Arguments to filter ProductLocations to count.
     * @example
     * // Count the number of ProductLocations
     * const count = await prisma.productLocation.count({
     *   where: {
     *     // ... the filter for the ProductLocations we want to count
     *   }
     * })
    **/
    count<T extends ProductLocationCountArgs>(
      args?: Subset<T, ProductLocationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductLocationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductLocation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductLocationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductLocationAggregateArgs>(args: Subset<T, ProductLocationAggregateArgs>): Prisma.PrismaPromise<GetProductLocationAggregateType<T>>

    /**
     * Group by ProductLocation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductLocationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductLocationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductLocationGroupByArgs['orderBy'] }
        : { orderBy?: ProductLocationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductLocationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductLocationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductLocation model
   */
  readonly fields: ProductLocationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductLocation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductLocationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    location<T extends LocationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LocationDefaultArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductLocation model
   */ 
  interface ProductLocationFieldRefs {
    readonly locationUuid: FieldRef<"ProductLocation", 'String'>
    readonly productUuid: FieldRef<"ProductLocation", 'String'>
    readonly value: FieldRef<"ProductLocation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProductLocation findUnique
   */
  export type ProductLocationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductLocation
     */
    select?: ProductLocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductLocationInclude<ExtArgs> | null
    /**
     * Filter, which ProductLocation to fetch.
     */
    where: ProductLocationWhereUniqueInput
  }

  /**
   * ProductLocation findUniqueOrThrow
   */
  export type ProductLocationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductLocation
     */
    select?: ProductLocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductLocationInclude<ExtArgs> | null
    /**
     * Filter, which ProductLocation to fetch.
     */
    where: ProductLocationWhereUniqueInput
  }

  /**
   * ProductLocation findFirst
   */
  export type ProductLocationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductLocation
     */
    select?: ProductLocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductLocationInclude<ExtArgs> | null
    /**
     * Filter, which ProductLocation to fetch.
     */
    where?: ProductLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductLocations to fetch.
     */
    orderBy?: ProductLocationOrderByWithRelationInput | ProductLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductLocations.
     */
    cursor?: ProductLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductLocations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductLocations.
     */
    distinct?: ProductLocationScalarFieldEnum | ProductLocationScalarFieldEnum[]
  }

  /**
   * ProductLocation findFirstOrThrow
   */
  export type ProductLocationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductLocation
     */
    select?: ProductLocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductLocationInclude<ExtArgs> | null
    /**
     * Filter, which ProductLocation to fetch.
     */
    where?: ProductLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductLocations to fetch.
     */
    orderBy?: ProductLocationOrderByWithRelationInput | ProductLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductLocations.
     */
    cursor?: ProductLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductLocations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductLocations.
     */
    distinct?: ProductLocationScalarFieldEnum | ProductLocationScalarFieldEnum[]
  }

  /**
   * ProductLocation findMany
   */
  export type ProductLocationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductLocation
     */
    select?: ProductLocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductLocationInclude<ExtArgs> | null
    /**
     * Filter, which ProductLocations to fetch.
     */
    where?: ProductLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductLocations to fetch.
     */
    orderBy?: ProductLocationOrderByWithRelationInput | ProductLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductLocations.
     */
    cursor?: ProductLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductLocations.
     */
    skip?: number
    distinct?: ProductLocationScalarFieldEnum | ProductLocationScalarFieldEnum[]
  }

  /**
   * ProductLocation create
   */
  export type ProductLocationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductLocation
     */
    select?: ProductLocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductLocationInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductLocation.
     */
    data: XOR<ProductLocationCreateInput, ProductLocationUncheckedCreateInput>
  }

  /**
   * ProductLocation createMany
   */
  export type ProductLocationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductLocations.
     */
    data: ProductLocationCreateManyInput | ProductLocationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductLocation createManyAndReturn
   */
  export type ProductLocationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductLocation
     */
    select?: ProductLocationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ProductLocations.
     */
    data: ProductLocationCreateManyInput | ProductLocationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductLocationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductLocation update
   */
  export type ProductLocationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductLocation
     */
    select?: ProductLocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductLocationInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductLocation.
     */
    data: XOR<ProductLocationUpdateInput, ProductLocationUncheckedUpdateInput>
    /**
     * Choose, which ProductLocation to update.
     */
    where: ProductLocationWhereUniqueInput
  }

  /**
   * ProductLocation updateMany
   */
  export type ProductLocationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductLocations.
     */
    data: XOR<ProductLocationUpdateManyMutationInput, ProductLocationUncheckedUpdateManyInput>
    /**
     * Filter which ProductLocations to update
     */
    where?: ProductLocationWhereInput
  }

  /**
   * ProductLocation upsert
   */
  export type ProductLocationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductLocation
     */
    select?: ProductLocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductLocationInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductLocation to update in case it exists.
     */
    where: ProductLocationWhereUniqueInput
    /**
     * In case the ProductLocation found by the `where` argument doesn't exist, create a new ProductLocation with this data.
     */
    create: XOR<ProductLocationCreateInput, ProductLocationUncheckedCreateInput>
    /**
     * In case the ProductLocation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductLocationUpdateInput, ProductLocationUncheckedUpdateInput>
  }

  /**
   * ProductLocation delete
   */
  export type ProductLocationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductLocation
     */
    select?: ProductLocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductLocationInclude<ExtArgs> | null
    /**
     * Filter which ProductLocation to delete.
     */
    where: ProductLocationWhereUniqueInput
  }

  /**
   * ProductLocation deleteMany
   */
  export type ProductLocationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductLocations to delete
     */
    where?: ProductLocationWhereInput
  }

  /**
   * ProductLocation without action
   */
  export type ProductLocationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductLocation
     */
    select?: ProductLocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductLocationInclude<ExtArgs> | null
  }


  /**
   * Model Image
   */

  export type AggregateImage = {
    _count: ImageCountAggregateOutputType | null
    _min: ImageMinAggregateOutputType | null
    _max: ImageMaxAggregateOutputType | null
  }

  export type ImageMinAggregateOutputType = {
    hash: string | null
    name: string | null
    url: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type ImageMaxAggregateOutputType = {
    hash: string | null
    name: string | null
    url: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type ImageCountAggregateOutputType = {
    hash: number
    name: number
    url: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type ImageMinAggregateInputType = {
    hash?: true
    name?: true
    url?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ImageMaxAggregateInputType = {
    hash?: true
    name?: true
    url?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ImageCountAggregateInputType = {
    hash?: true
    name?: true
    url?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type ImageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Image to aggregate.
     */
    where?: ImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Images to fetch.
     */
    orderBy?: ImageOrderByWithRelationInput | ImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Images
    **/
    _count?: true | ImageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImageMaxAggregateInputType
  }

  export type GetImageAggregateType<T extends ImageAggregateArgs> = {
        [P in keyof T & keyof AggregateImage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImage[P]>
      : GetScalarType<T[P], AggregateImage[P]>
  }




  export type ImageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImageWhereInput
    orderBy?: ImageOrderByWithAggregationInput | ImageOrderByWithAggregationInput[]
    by: ImageScalarFieldEnum[] | ImageScalarFieldEnum
    having?: ImageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImageCountAggregateInputType | true
    _min?: ImageMinAggregateInputType
    _max?: ImageMaxAggregateInputType
  }

  export type ImageGroupByOutputType = {
    hash: string
    name: string
    url: string
    createdAt: Date
    createdBy: string
    updatedAt: Date
    updatedBy: string
    _count: ImageCountAggregateOutputType | null
    _min: ImageMinAggregateOutputType | null
    _max: ImageMaxAggregateOutputType | null
  }

  type GetImageGroupByPayload<T extends ImageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImageGroupByOutputType[P]>
            : GetScalarType<T[P], ImageGroupByOutputType[P]>
        }
      >
    >


  export type ImageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    hash?: boolean
    name?: boolean
    url?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    categoryImage?: boolean | Image$categoryImageArgs<ExtArgs>
    categoryMiniature?: boolean | Image$categoryMiniatureArgs<ExtArgs>
    productImage?: boolean | Image$productImageArgs<ExtArgs>
    productMiniature?: boolean | Image$productMiniatureArgs<ExtArgs>
    laboratoryImage?: boolean | Image$laboratoryImageArgs<ExtArgs>
    laboratoryMiniature?: boolean | Image$laboratoryMiniatureArgs<ExtArgs>
    bannerImage?: boolean | Image$bannerImageArgs<ExtArgs>
    _count?: boolean | ImageCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["image"]>

  export type ImageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    hash?: boolean
    name?: boolean
    url?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }, ExtArgs["result"]["image"]>

  export type ImageSelectScalar = {
    hash?: boolean
    name?: boolean
    url?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type ImageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoryImage?: boolean | Image$categoryImageArgs<ExtArgs>
    categoryMiniature?: boolean | Image$categoryMiniatureArgs<ExtArgs>
    productImage?: boolean | Image$productImageArgs<ExtArgs>
    productMiniature?: boolean | Image$productMiniatureArgs<ExtArgs>
    laboratoryImage?: boolean | Image$laboratoryImageArgs<ExtArgs>
    laboratoryMiniature?: boolean | Image$laboratoryMiniatureArgs<ExtArgs>
    bannerImage?: boolean | Image$bannerImageArgs<ExtArgs>
    _count?: boolean | ImageCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ImageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ImagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Image"
    objects: {
      categoryImage: Prisma.$CategoryPayload<ExtArgs>[]
      categoryMiniature: Prisma.$CategoryPayload<ExtArgs>[]
      productImage: Prisma.$ProductImagePayload<ExtArgs>[]
      productMiniature: Prisma.$ProductPayload<ExtArgs>[]
      laboratoryImage: Prisma.$LaboratoryPayload<ExtArgs>[]
      laboratoryMiniature: Prisma.$LaboratoryPayload<ExtArgs>[]
      bannerImage: Prisma.$BannerPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      hash: string
      name: string
      url: string
      createdAt: Date
      createdBy: string
      updatedAt: Date
      updatedBy: string
    }, ExtArgs["result"]["image"]>
    composites: {}
  }

  type ImageGetPayload<S extends boolean | null | undefined | ImageDefaultArgs> = $Result.GetResult<Prisma.$ImagePayload, S>

  type ImageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ImageFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ImageCountAggregateInputType | true
    }

  export interface ImageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Image'], meta: { name: 'Image' } }
    /**
     * Find zero or one Image that matches the filter.
     * @param {ImageFindUniqueArgs} args - Arguments to find a Image
     * @example
     * // Get one Image
     * const image = await prisma.image.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ImageFindUniqueArgs>(args: SelectSubset<T, ImageFindUniqueArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Image that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ImageFindUniqueOrThrowArgs} args - Arguments to find a Image
     * @example
     * // Get one Image
     * const image = await prisma.image.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ImageFindUniqueOrThrowArgs>(args: SelectSubset<T, ImageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Image that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageFindFirstArgs} args - Arguments to find a Image
     * @example
     * // Get one Image
     * const image = await prisma.image.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ImageFindFirstArgs>(args?: SelectSubset<T, ImageFindFirstArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Image that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageFindFirstOrThrowArgs} args - Arguments to find a Image
     * @example
     * // Get one Image
     * const image = await prisma.image.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ImageFindFirstOrThrowArgs>(args?: SelectSubset<T, ImageFindFirstOrThrowArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Images
     * const images = await prisma.image.findMany()
     * 
     * // Get first 10 Images
     * const images = await prisma.image.findMany({ take: 10 })
     * 
     * // Only select the `hash`
     * const imageWithHashOnly = await prisma.image.findMany({ select: { hash: true } })
     * 
     */
    findMany<T extends ImageFindManyArgs>(args?: SelectSubset<T, ImageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Image.
     * @param {ImageCreateArgs} args - Arguments to create a Image.
     * @example
     * // Create one Image
     * const Image = await prisma.image.create({
     *   data: {
     *     // ... data to create a Image
     *   }
     * })
     * 
     */
    create<T extends ImageCreateArgs>(args: SelectSubset<T, ImageCreateArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Images.
     * @param {ImageCreateManyArgs} args - Arguments to create many Images.
     * @example
     * // Create many Images
     * const image = await prisma.image.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ImageCreateManyArgs>(args?: SelectSubset<T, ImageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Images and returns the data saved in the database.
     * @param {ImageCreateManyAndReturnArgs} args - Arguments to create many Images.
     * @example
     * // Create many Images
     * const image = await prisma.image.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Images and only return the `hash`
     * const imageWithHashOnly = await prisma.image.createManyAndReturn({ 
     *   select: { hash: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ImageCreateManyAndReturnArgs>(args?: SelectSubset<T, ImageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Image.
     * @param {ImageDeleteArgs} args - Arguments to delete one Image.
     * @example
     * // Delete one Image
     * const Image = await prisma.image.delete({
     *   where: {
     *     // ... filter to delete one Image
     *   }
     * })
     * 
     */
    delete<T extends ImageDeleteArgs>(args: SelectSubset<T, ImageDeleteArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Image.
     * @param {ImageUpdateArgs} args - Arguments to update one Image.
     * @example
     * // Update one Image
     * const image = await prisma.image.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ImageUpdateArgs>(args: SelectSubset<T, ImageUpdateArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Images.
     * @param {ImageDeleteManyArgs} args - Arguments to filter Images to delete.
     * @example
     * // Delete a few Images
     * const { count } = await prisma.image.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ImageDeleteManyArgs>(args?: SelectSubset<T, ImageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Images
     * const image = await prisma.image.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ImageUpdateManyArgs>(args: SelectSubset<T, ImageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Image.
     * @param {ImageUpsertArgs} args - Arguments to update or create a Image.
     * @example
     * // Update or create a Image
     * const image = await prisma.image.upsert({
     *   create: {
     *     // ... data to create a Image
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Image we want to update
     *   }
     * })
     */
    upsert<T extends ImageUpsertArgs>(args: SelectSubset<T, ImageUpsertArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageCountArgs} args - Arguments to filter Images to count.
     * @example
     * // Count the number of Images
     * const count = await prisma.image.count({
     *   where: {
     *     // ... the filter for the Images we want to count
     *   }
     * })
    **/
    count<T extends ImageCountArgs>(
      args?: Subset<T, ImageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Image.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImageAggregateArgs>(args: Subset<T, ImageAggregateArgs>): Prisma.PrismaPromise<GetImageAggregateType<T>>

    /**
     * Group by Image.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ImageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ImageGroupByArgs['orderBy'] }
        : { orderBy?: ImageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ImageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Image model
   */
  readonly fields: ImageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Image.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ImageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    categoryImage<T extends Image$categoryImageArgs<ExtArgs> = {}>(args?: Subset<T, Image$categoryImageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany"> | Null>
    categoryMiniature<T extends Image$categoryMiniatureArgs<ExtArgs> = {}>(args?: Subset<T, Image$categoryMiniatureArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany"> | Null>
    productImage<T extends Image$productImageArgs<ExtArgs> = {}>(args?: Subset<T, Image$productImageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findMany"> | Null>
    productMiniature<T extends Image$productMiniatureArgs<ExtArgs> = {}>(args?: Subset<T, Image$productMiniatureArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany"> | Null>
    laboratoryImage<T extends Image$laboratoryImageArgs<ExtArgs> = {}>(args?: Subset<T, Image$laboratoryImageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LaboratoryPayload<ExtArgs>, T, "findMany"> | Null>
    laboratoryMiniature<T extends Image$laboratoryMiniatureArgs<ExtArgs> = {}>(args?: Subset<T, Image$laboratoryMiniatureArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LaboratoryPayload<ExtArgs>, T, "findMany"> | Null>
    bannerImage<T extends Image$bannerImageArgs<ExtArgs> = {}>(args?: Subset<T, Image$bannerImageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Image model
   */ 
  interface ImageFieldRefs {
    readonly hash: FieldRef<"Image", 'String'>
    readonly name: FieldRef<"Image", 'String'>
    readonly url: FieldRef<"Image", 'String'>
    readonly createdAt: FieldRef<"Image", 'DateTime'>
    readonly createdBy: FieldRef<"Image", 'String'>
    readonly updatedAt: FieldRef<"Image", 'DateTime'>
    readonly updatedBy: FieldRef<"Image", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Image findUnique
   */
  export type ImageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * Filter, which Image to fetch.
     */
    where: ImageWhereUniqueInput
  }

  /**
   * Image findUniqueOrThrow
   */
  export type ImageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * Filter, which Image to fetch.
     */
    where: ImageWhereUniqueInput
  }

  /**
   * Image findFirst
   */
  export type ImageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * Filter, which Image to fetch.
     */
    where?: ImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Images to fetch.
     */
    orderBy?: ImageOrderByWithRelationInput | ImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Images.
     */
    cursor?: ImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Images.
     */
    distinct?: ImageScalarFieldEnum | ImageScalarFieldEnum[]
  }

  /**
   * Image findFirstOrThrow
   */
  export type ImageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * Filter, which Image to fetch.
     */
    where?: ImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Images to fetch.
     */
    orderBy?: ImageOrderByWithRelationInput | ImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Images.
     */
    cursor?: ImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Images.
     */
    distinct?: ImageScalarFieldEnum | ImageScalarFieldEnum[]
  }

  /**
   * Image findMany
   */
  export type ImageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * Filter, which Images to fetch.
     */
    where?: ImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Images to fetch.
     */
    orderBy?: ImageOrderByWithRelationInput | ImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Images.
     */
    cursor?: ImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Images.
     */
    skip?: number
    distinct?: ImageScalarFieldEnum | ImageScalarFieldEnum[]
  }

  /**
   * Image create
   */
  export type ImageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * The data needed to create a Image.
     */
    data: XOR<ImageCreateInput, ImageUncheckedCreateInput>
  }

  /**
   * Image createMany
   */
  export type ImageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Images.
     */
    data: ImageCreateManyInput | ImageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Image createManyAndReturn
   */
  export type ImageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Images.
     */
    data: ImageCreateManyInput | ImageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Image update
   */
  export type ImageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * The data needed to update a Image.
     */
    data: XOR<ImageUpdateInput, ImageUncheckedUpdateInput>
    /**
     * Choose, which Image to update.
     */
    where: ImageWhereUniqueInput
  }

  /**
   * Image updateMany
   */
  export type ImageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Images.
     */
    data: XOR<ImageUpdateManyMutationInput, ImageUncheckedUpdateManyInput>
    /**
     * Filter which Images to update
     */
    where?: ImageWhereInput
  }

  /**
   * Image upsert
   */
  export type ImageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * The filter to search for the Image to update in case it exists.
     */
    where: ImageWhereUniqueInput
    /**
     * In case the Image found by the `where` argument doesn't exist, create a new Image with this data.
     */
    create: XOR<ImageCreateInput, ImageUncheckedCreateInput>
    /**
     * In case the Image was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ImageUpdateInput, ImageUncheckedUpdateInput>
  }

  /**
   * Image delete
   */
  export type ImageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * Filter which Image to delete.
     */
    where: ImageWhereUniqueInput
  }

  /**
   * Image deleteMany
   */
  export type ImageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Images to delete
     */
    where?: ImageWhereInput
  }

  /**
   * Image.categoryImage
   */
  export type Image$categoryImageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Image.categoryMiniature
   */
  export type Image$categoryMiniatureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Image.productImage
   */
  export type Image$productImageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    where?: ProductImageWhereInput
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    cursor?: ProductImageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * Image.productMiniature
   */
  export type Image$productMiniatureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Image.laboratoryImage
   */
  export type Image$laboratoryImageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryInclude<ExtArgs> | null
    where?: LaboratoryWhereInput
    orderBy?: LaboratoryOrderByWithRelationInput | LaboratoryOrderByWithRelationInput[]
    cursor?: LaboratoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LaboratoryScalarFieldEnum | LaboratoryScalarFieldEnum[]
  }

  /**
   * Image.laboratoryMiniature
   */
  export type Image$laboratoryMiniatureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryInclude<ExtArgs> | null
    where?: LaboratoryWhereInput
    orderBy?: LaboratoryOrderByWithRelationInput | LaboratoryOrderByWithRelationInput[]
    cursor?: LaboratoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LaboratoryScalarFieldEnum | LaboratoryScalarFieldEnum[]
  }

  /**
   * Image.bannerImage
   */
  export type Image$bannerImageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BannerInclude<ExtArgs> | null
    where?: BannerWhereInput
    orderBy?: BannerOrderByWithRelationInput | BannerOrderByWithRelationInput[]
    cursor?: BannerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BannerScalarFieldEnum | BannerScalarFieldEnum[]
  }

  /**
   * Image without action
   */
  export type ImageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
  }


  /**
   * Model ProductImage
   */

  export type AggregateProductImage = {
    _count: ProductImageCountAggregateOutputType | null
    _min: ProductImageMinAggregateOutputType | null
    _max: ProductImageMaxAggregateOutputType | null
  }

  export type ProductImageMinAggregateOutputType = {
    imageHash: string | null
    productUuid: string | null
  }

  export type ProductImageMaxAggregateOutputType = {
    imageHash: string | null
    productUuid: string | null
  }

  export type ProductImageCountAggregateOutputType = {
    imageHash: number
    productUuid: number
    _all: number
  }


  export type ProductImageMinAggregateInputType = {
    imageHash?: true
    productUuid?: true
  }

  export type ProductImageMaxAggregateInputType = {
    imageHash?: true
    productUuid?: true
  }

  export type ProductImageCountAggregateInputType = {
    imageHash?: true
    productUuid?: true
    _all?: true
  }

  export type ProductImageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductImage to aggregate.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductImages
    **/
    _count?: true | ProductImageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductImageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductImageMaxAggregateInputType
  }

  export type GetProductImageAggregateType<T extends ProductImageAggregateArgs> = {
        [P in keyof T & keyof AggregateProductImage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductImage[P]>
      : GetScalarType<T[P], AggregateProductImage[P]>
  }




  export type ProductImageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductImageWhereInput
    orderBy?: ProductImageOrderByWithAggregationInput | ProductImageOrderByWithAggregationInput[]
    by: ProductImageScalarFieldEnum[] | ProductImageScalarFieldEnum
    having?: ProductImageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductImageCountAggregateInputType | true
    _min?: ProductImageMinAggregateInputType
    _max?: ProductImageMaxAggregateInputType
  }

  export type ProductImageGroupByOutputType = {
    imageHash: string
    productUuid: string
    _count: ProductImageCountAggregateOutputType | null
    _min: ProductImageMinAggregateOutputType | null
    _max: ProductImageMaxAggregateOutputType | null
  }

  type GetProductImageGroupByPayload<T extends ProductImageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductImageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductImageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductImageGroupByOutputType[P]>
            : GetScalarType<T[P], ProductImageGroupByOutputType[P]>
        }
      >
    >


  export type ProductImageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    imageHash?: boolean
    productUuid?: boolean
    product?: boolean | ProductImage$productArgs<ExtArgs>
    image?: boolean | ImageDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productImage"]>

  export type ProductImageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    imageHash?: boolean
    productUuid?: boolean
    product?: boolean | ProductImage$productArgs<ExtArgs>
    image?: boolean | ImageDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productImage"]>

  export type ProductImageSelectScalar = {
    imageHash?: boolean
    productUuid?: boolean
  }

  export type ProductImageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductImage$productArgs<ExtArgs>
    image?: boolean | ImageDefaultArgs<ExtArgs>
  }
  export type ProductImageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductImage$productArgs<ExtArgs>
    image?: boolean | ImageDefaultArgs<ExtArgs>
  }

  export type $ProductImagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductImage"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs> | null
      image: Prisma.$ImagePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      imageHash: string
      productUuid: string
    }, ExtArgs["result"]["productImage"]>
    composites: {}
  }

  type ProductImageGetPayload<S extends boolean | null | undefined | ProductImageDefaultArgs> = $Result.GetResult<Prisma.$ProductImagePayload, S>

  type ProductImageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductImageFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductImageCountAggregateInputType | true
    }

  export interface ProductImageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductImage'], meta: { name: 'ProductImage' } }
    /**
     * Find zero or one ProductImage that matches the filter.
     * @param {ProductImageFindUniqueArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductImageFindUniqueArgs>(args: SelectSubset<T, ProductImageFindUniqueArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProductImage that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductImageFindUniqueOrThrowArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductImageFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductImageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProductImage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageFindFirstArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductImageFindFirstArgs>(args?: SelectSubset<T, ProductImageFindFirstArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProductImage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageFindFirstOrThrowArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductImageFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductImageFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProductImages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductImages
     * const productImages = await prisma.productImage.findMany()
     * 
     * // Get first 10 ProductImages
     * const productImages = await prisma.productImage.findMany({ take: 10 })
     * 
     * // Only select the `imageHash`
     * const productImageWithImageHashOnly = await prisma.productImage.findMany({ select: { imageHash: true } })
     * 
     */
    findMany<T extends ProductImageFindManyArgs>(args?: SelectSubset<T, ProductImageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProductImage.
     * @param {ProductImageCreateArgs} args - Arguments to create a ProductImage.
     * @example
     * // Create one ProductImage
     * const ProductImage = await prisma.productImage.create({
     *   data: {
     *     // ... data to create a ProductImage
     *   }
     * })
     * 
     */
    create<T extends ProductImageCreateArgs>(args: SelectSubset<T, ProductImageCreateArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProductImages.
     * @param {ProductImageCreateManyArgs} args - Arguments to create many ProductImages.
     * @example
     * // Create many ProductImages
     * const productImage = await prisma.productImage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductImageCreateManyArgs>(args?: SelectSubset<T, ProductImageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductImages and returns the data saved in the database.
     * @param {ProductImageCreateManyAndReturnArgs} args - Arguments to create many ProductImages.
     * @example
     * // Create many ProductImages
     * const productImage = await prisma.productImage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductImages and only return the `imageHash`
     * const productImageWithImageHashOnly = await prisma.productImage.createManyAndReturn({ 
     *   select: { imageHash: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductImageCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductImageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ProductImage.
     * @param {ProductImageDeleteArgs} args - Arguments to delete one ProductImage.
     * @example
     * // Delete one ProductImage
     * const ProductImage = await prisma.productImage.delete({
     *   where: {
     *     // ... filter to delete one ProductImage
     *   }
     * })
     * 
     */
    delete<T extends ProductImageDeleteArgs>(args: SelectSubset<T, ProductImageDeleteArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProductImage.
     * @param {ProductImageUpdateArgs} args - Arguments to update one ProductImage.
     * @example
     * // Update one ProductImage
     * const productImage = await prisma.productImage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductImageUpdateArgs>(args: SelectSubset<T, ProductImageUpdateArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProductImages.
     * @param {ProductImageDeleteManyArgs} args - Arguments to filter ProductImages to delete.
     * @example
     * // Delete a few ProductImages
     * const { count } = await prisma.productImage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductImageDeleteManyArgs>(args?: SelectSubset<T, ProductImageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductImages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductImages
     * const productImage = await prisma.productImage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductImageUpdateManyArgs>(args: SelectSubset<T, ProductImageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductImage.
     * @param {ProductImageUpsertArgs} args - Arguments to update or create a ProductImage.
     * @example
     * // Update or create a ProductImage
     * const productImage = await prisma.productImage.upsert({
     *   create: {
     *     // ... data to create a ProductImage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductImage we want to update
     *   }
     * })
     */
    upsert<T extends ProductImageUpsertArgs>(args: SelectSubset<T, ProductImageUpsertArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProductImages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageCountArgs} args - Arguments to filter ProductImages to count.
     * @example
     * // Count the number of ProductImages
     * const count = await prisma.productImage.count({
     *   where: {
     *     // ... the filter for the ProductImages we want to count
     *   }
     * })
    **/
    count<T extends ProductImageCountArgs>(
      args?: Subset<T, ProductImageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductImageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductImage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductImageAggregateArgs>(args: Subset<T, ProductImageAggregateArgs>): Prisma.PrismaPromise<GetProductImageAggregateType<T>>

    /**
     * Group by ProductImage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductImageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductImageGroupByArgs['orderBy'] }
        : { orderBy?: ProductImageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductImageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductImageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductImage model
   */
  readonly fields: ProductImageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductImage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductImageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductImage$productArgs<ExtArgs> = {}>(args?: Subset<T, ProductImage$productArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    image<T extends ImageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ImageDefaultArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductImage model
   */ 
  interface ProductImageFieldRefs {
    readonly imageHash: FieldRef<"ProductImage", 'String'>
    readonly productUuid: FieldRef<"ProductImage", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProductImage findUnique
   */
  export type ProductImageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage findUniqueOrThrow
   */
  export type ProductImageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage findFirst
   */
  export type ProductImageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductImages.
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductImages.
     */
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * ProductImage findFirstOrThrow
   */
  export type ProductImageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductImages.
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductImages.
     */
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * ProductImage findMany
   */
  export type ProductImageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImages to fetch.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductImages.
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * ProductImage create
   */
  export type ProductImageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductImage.
     */
    data: XOR<ProductImageCreateInput, ProductImageUncheckedCreateInput>
  }

  /**
   * ProductImage createMany
   */
  export type ProductImageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductImages.
     */
    data: ProductImageCreateManyInput | ProductImageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductImage createManyAndReturn
   */
  export type ProductImageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ProductImages.
     */
    data: ProductImageCreateManyInput | ProductImageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductImage update
   */
  export type ProductImageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductImage.
     */
    data: XOR<ProductImageUpdateInput, ProductImageUncheckedUpdateInput>
    /**
     * Choose, which ProductImage to update.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage updateMany
   */
  export type ProductImageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductImages.
     */
    data: XOR<ProductImageUpdateManyMutationInput, ProductImageUncheckedUpdateManyInput>
    /**
     * Filter which ProductImages to update
     */
    where?: ProductImageWhereInput
  }

  /**
   * ProductImage upsert
   */
  export type ProductImageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductImage to update in case it exists.
     */
    where: ProductImageWhereUniqueInput
    /**
     * In case the ProductImage found by the `where` argument doesn't exist, create a new ProductImage with this data.
     */
    create: XOR<ProductImageCreateInput, ProductImageUncheckedCreateInput>
    /**
     * In case the ProductImage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductImageUpdateInput, ProductImageUncheckedUpdateInput>
  }

  /**
   * ProductImage delete
   */
  export type ProductImageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter which ProductImage to delete.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage deleteMany
   */
  export type ProductImageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductImages to delete
     */
    where?: ProductImageWhereInput
  }

  /**
   * ProductImage.product
   */
  export type ProductImage$productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
  }

  /**
   * ProductImage without action
   */
  export type ProductImageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryMinAggregateOutputType = {
    uuid: string | null
    name: string | null
    description: string | null
    parentUuid: string | null
    miniatureHash: string | null
    imageHash: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type CategoryMaxAggregateOutputType = {
    uuid: string | null
    name: string | null
    description: string | null
    parentUuid: string | null
    miniatureHash: string | null
    imageHash: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type CategoryCountAggregateOutputType = {
    uuid: number
    name: number
    description: number
    parentUuid: number
    miniatureHash: number
    imageHash: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type CategoryMinAggregateInputType = {
    uuid?: true
    name?: true
    description?: true
    parentUuid?: true
    miniatureHash?: true
    imageHash?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type CategoryMaxAggregateInputType = {
    uuid?: true
    name?: true
    description?: true
    parentUuid?: true
    miniatureHash?: true
    imageHash?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type CategoryCountAggregateInputType = {
    uuid?: true
    name?: true
    description?: true
    parentUuid?: true
    miniatureHash?: true
    imageHash?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    uuid: string
    name: string
    description: string | null
    parentUuid: string | null
    miniatureHash: string | null
    imageHash: string | null
    createdAt: Date
    createdBy: string
    updatedAt: Date
    updatedBy: string
    _count: CategoryCountAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    name?: boolean
    description?: boolean
    parentUuid?: boolean
    miniatureHash?: boolean
    imageHash?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    productCategory?: boolean | Category$productCategoryArgs<ExtArgs>
    parent?: boolean | Category$parentArgs<ExtArgs>
    children?: boolean | Category$childrenArgs<ExtArgs>
    image?: boolean | Category$imageArgs<ExtArgs>
    miniature?: boolean | Category$miniatureArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    name?: boolean
    description?: boolean
    parentUuid?: boolean
    miniatureHash?: boolean
    imageHash?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    parent?: boolean | Category$parentArgs<ExtArgs>
    image?: boolean | Category$imageArgs<ExtArgs>
    miniature?: boolean | Category$miniatureArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectScalar = {
    uuid?: boolean
    name?: boolean
    description?: boolean
    parentUuid?: boolean
    miniatureHash?: boolean
    imageHash?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productCategory?: boolean | Category$productCategoryArgs<ExtArgs>
    parent?: boolean | Category$parentArgs<ExtArgs>
    children?: boolean | Category$childrenArgs<ExtArgs>
    image?: boolean | Category$imageArgs<ExtArgs>
    miniature?: boolean | Category$miniatureArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Category$parentArgs<ExtArgs>
    image?: boolean | Category$imageArgs<ExtArgs>
    miniature?: boolean | Category$miniatureArgs<ExtArgs>
  }

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      productCategory: Prisma.$ProductCategoryPayload<ExtArgs>[]
      parent: Prisma.$CategoryPayload<ExtArgs> | null
      children: Prisma.$CategoryPayload<ExtArgs>[]
      image: Prisma.$ImagePayload<ExtArgs> | null
      miniature: Prisma.$ImagePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      name: string
      description: string | null
      parentUuid: string | null
      miniatureHash: string | null
      imageHash: string | null
      createdAt: Date
      createdBy: string
      updatedAt: Date
      updatedBy: string
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const categoryWithUuidOnly = await prisma.category.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categories and returns the data saved in the database.
     * @param {CategoryCreateManyAndReturnArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categories and only return the `uuid`
     * const categoryWithUuidOnly = await prisma.category.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productCategory<T extends Category$productCategoryArgs<ExtArgs> = {}>(args?: Subset<T, Category$productCategoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findMany"> | Null>
    parent<T extends Category$parentArgs<ExtArgs> = {}>(args?: Subset<T, Category$parentArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    children<T extends Category$childrenArgs<ExtArgs> = {}>(args?: Subset<T, Category$childrenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany"> | Null>
    image<T extends Category$imageArgs<ExtArgs> = {}>(args?: Subset<T, Category$imageArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    miniature<T extends Category$miniatureArgs<ExtArgs> = {}>(args?: Subset<T, Category$miniatureArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */ 
  interface CategoryFieldRefs {
    readonly uuid: FieldRef<"Category", 'String'>
    readonly name: FieldRef<"Category", 'String'>
    readonly description: FieldRef<"Category", 'String'>
    readonly parentUuid: FieldRef<"Category", 'String'>
    readonly miniatureHash: FieldRef<"Category", 'String'>
    readonly imageHash: FieldRef<"Category", 'String'>
    readonly createdAt: FieldRef<"Category", 'DateTime'>
    readonly createdBy: FieldRef<"Category", 'String'>
    readonly updatedAt: FieldRef<"Category", 'DateTime'>
    readonly updatedBy: FieldRef<"Category", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category createManyAndReturn
   */
  export type CategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
  }

  /**
   * Category.productCategory
   */
  export type Category$productCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    where?: ProductCategoryWhereInput
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    cursor?: ProductCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * Category.parent
   */
  export type Category$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * Category.children
   */
  export type Category$childrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category.image
   */
  export type Category$imageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    where?: ImageWhereInput
  }

  /**
   * Category.miniature
   */
  export type Category$miniatureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    where?: ImageWhereInput
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model Promotion
   */

  export type AggregatePromotion = {
    _count: PromotionCountAggregateOutputType | null
    _avg: PromotionAvgAggregateOutputType | null
    _sum: PromotionSumAggregateOutputType | null
    _min: PromotionMinAggregateOutputType | null
    _max: PromotionMaxAggregateOutputType | null
  }

  export type PromotionAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type PromotionSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type PromotionMinAggregateOutputType = {
    uuid: string | null
    amount: Decimal | null
    type: $Enums.ReductionType | null
    name: string | null
    startDate: Date | null
    endDate: Date | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type PromotionMaxAggregateOutputType = {
    uuid: string | null
    amount: Decimal | null
    type: $Enums.ReductionType | null
    name: string | null
    startDate: Date | null
    endDate: Date | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type PromotionCountAggregateOutputType = {
    uuid: number
    amount: number
    type: number
    name: number
    startDate: number
    endDate: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type PromotionAvgAggregateInputType = {
    amount?: true
  }

  export type PromotionSumAggregateInputType = {
    amount?: true
  }

  export type PromotionMinAggregateInputType = {
    uuid?: true
    amount?: true
    type?: true
    name?: true
    startDate?: true
    endDate?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type PromotionMaxAggregateInputType = {
    uuid?: true
    amount?: true
    type?: true
    name?: true
    startDate?: true
    endDate?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type PromotionCountAggregateInputType = {
    uuid?: true
    amount?: true
    type?: true
    name?: true
    startDate?: true
    endDate?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type PromotionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Promotion to aggregate.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Promotions
    **/
    _count?: true | PromotionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromotionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromotionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionMaxAggregateInputType
  }

  export type GetPromotionAggregateType<T extends PromotionAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotion[P]>
      : GetScalarType<T[P], AggregatePromotion[P]>
  }




  export type PromotionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithAggregationInput | PromotionOrderByWithAggregationInput[]
    by: PromotionScalarFieldEnum[] | PromotionScalarFieldEnum
    having?: PromotionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionCountAggregateInputType | true
    _avg?: PromotionAvgAggregateInputType
    _sum?: PromotionSumAggregateInputType
    _min?: PromotionMinAggregateInputType
    _max?: PromotionMaxAggregateInputType
  }

  export type PromotionGroupByOutputType = {
    uuid: string
    amount: Decimal
    type: $Enums.ReductionType
    name: string | null
    startDate: Date | null
    endDate: Date | null
    createdAt: Date
    createdBy: string
    updatedAt: Date
    updatedBy: string
    _count: PromotionCountAggregateOutputType | null
    _avg: PromotionAvgAggregateOutputType | null
    _sum: PromotionSumAggregateOutputType | null
    _min: PromotionMinAggregateOutputType | null
    _max: PromotionMaxAggregateOutputType | null
  }

  type GetPromotionGroupByPayload<T extends PromotionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionGroupByOutputType[P]>
        }
      >
    >


  export type PromotionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    amount?: boolean
    type?: boolean
    name?: boolean
    startDate?: boolean
    endDate?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    products?: boolean | Promotion$productsArgs<ExtArgs>
    orderLines?: boolean | Promotion$orderLinesArgs<ExtArgs>
    _count?: boolean | PromotionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotion"]>

  export type PromotionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    amount?: boolean
    type?: boolean
    name?: boolean
    startDate?: boolean
    endDate?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }, ExtArgs["result"]["promotion"]>

  export type PromotionSelectScalar = {
    uuid?: boolean
    amount?: boolean
    type?: boolean
    name?: boolean
    startDate?: boolean
    endDate?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type PromotionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | Promotion$productsArgs<ExtArgs>
    orderLines?: boolean | Promotion$orderLinesArgs<ExtArgs>
    _count?: boolean | PromotionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PromotionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PromotionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Promotion"
    objects: {
      products: Prisma.$ProductPromotionPayload<ExtArgs>[]
      orderLines: Prisma.$OrderLinePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      amount: Prisma.Decimal
      type: $Enums.ReductionType
      name: string | null
      startDate: Date | null
      endDate: Date | null
      createdAt: Date
      createdBy: string
      updatedAt: Date
      updatedBy: string
    }, ExtArgs["result"]["promotion"]>
    composites: {}
  }

  type PromotionGetPayload<S extends boolean | null | undefined | PromotionDefaultArgs> = $Result.GetResult<Prisma.$PromotionPayload, S>

  type PromotionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PromotionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PromotionCountAggregateInputType | true
    }

  export interface PromotionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Promotion'], meta: { name: 'Promotion' } }
    /**
     * Find zero or one Promotion that matches the filter.
     * @param {PromotionFindUniqueArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PromotionFindUniqueArgs>(args: SelectSubset<T, PromotionFindUniqueArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Promotion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PromotionFindUniqueOrThrowArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PromotionFindUniqueOrThrowArgs>(args: SelectSubset<T, PromotionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Promotion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindFirstArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PromotionFindFirstArgs>(args?: SelectSubset<T, PromotionFindFirstArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Promotion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindFirstOrThrowArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PromotionFindFirstOrThrowArgs>(args?: SelectSubset<T, PromotionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Promotions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Promotions
     * const promotions = await prisma.promotion.findMany()
     * 
     * // Get first 10 Promotions
     * const promotions = await prisma.promotion.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const promotionWithUuidOnly = await prisma.promotion.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends PromotionFindManyArgs>(args?: SelectSubset<T, PromotionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Promotion.
     * @param {PromotionCreateArgs} args - Arguments to create a Promotion.
     * @example
     * // Create one Promotion
     * const Promotion = await prisma.promotion.create({
     *   data: {
     *     // ... data to create a Promotion
     *   }
     * })
     * 
     */
    create<T extends PromotionCreateArgs>(args: SelectSubset<T, PromotionCreateArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Promotions.
     * @param {PromotionCreateManyArgs} args - Arguments to create many Promotions.
     * @example
     * // Create many Promotions
     * const promotion = await prisma.promotion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PromotionCreateManyArgs>(args?: SelectSubset<T, PromotionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Promotions and returns the data saved in the database.
     * @param {PromotionCreateManyAndReturnArgs} args - Arguments to create many Promotions.
     * @example
     * // Create many Promotions
     * const promotion = await prisma.promotion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Promotions and only return the `uuid`
     * const promotionWithUuidOnly = await prisma.promotion.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PromotionCreateManyAndReturnArgs>(args?: SelectSubset<T, PromotionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Promotion.
     * @param {PromotionDeleteArgs} args - Arguments to delete one Promotion.
     * @example
     * // Delete one Promotion
     * const Promotion = await prisma.promotion.delete({
     *   where: {
     *     // ... filter to delete one Promotion
     *   }
     * })
     * 
     */
    delete<T extends PromotionDeleteArgs>(args: SelectSubset<T, PromotionDeleteArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Promotion.
     * @param {PromotionUpdateArgs} args - Arguments to update one Promotion.
     * @example
     * // Update one Promotion
     * const promotion = await prisma.promotion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PromotionUpdateArgs>(args: SelectSubset<T, PromotionUpdateArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Promotions.
     * @param {PromotionDeleteManyArgs} args - Arguments to filter Promotions to delete.
     * @example
     * // Delete a few Promotions
     * const { count } = await prisma.promotion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PromotionDeleteManyArgs>(args?: SelectSubset<T, PromotionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Promotions
     * const promotion = await prisma.promotion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PromotionUpdateManyArgs>(args: SelectSubset<T, PromotionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Promotion.
     * @param {PromotionUpsertArgs} args - Arguments to update or create a Promotion.
     * @example
     * // Update or create a Promotion
     * const promotion = await prisma.promotion.upsert({
     *   create: {
     *     // ... data to create a Promotion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Promotion we want to update
     *   }
     * })
     */
    upsert<T extends PromotionUpsertArgs>(args: SelectSubset<T, PromotionUpsertArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionCountArgs} args - Arguments to filter Promotions to count.
     * @example
     * // Count the number of Promotions
     * const count = await prisma.promotion.count({
     *   where: {
     *     // ... the filter for the Promotions we want to count
     *   }
     * })
    **/
    count<T extends PromotionCountArgs>(
      args?: Subset<T, PromotionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Promotion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionAggregateArgs>(args: Subset<T, PromotionAggregateArgs>): Prisma.PrismaPromise<GetPromotionAggregateType<T>>

    /**
     * Group by Promotion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromotionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromotionGroupByArgs['orderBy'] }
        : { orderBy?: PromotionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromotionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Promotion model
   */
  readonly fields: PromotionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Promotion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromotionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends Promotion$productsArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPromotionPayload<ExtArgs>, T, "findMany"> | Null>
    orderLines<T extends Promotion$orderLinesArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$orderLinesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderLinePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Promotion model
   */ 
  interface PromotionFieldRefs {
    readonly uuid: FieldRef<"Promotion", 'String'>
    readonly amount: FieldRef<"Promotion", 'Decimal'>
    readonly type: FieldRef<"Promotion", 'ReductionType'>
    readonly name: FieldRef<"Promotion", 'String'>
    readonly startDate: FieldRef<"Promotion", 'DateTime'>
    readonly endDate: FieldRef<"Promotion", 'DateTime'>
    readonly createdAt: FieldRef<"Promotion", 'DateTime'>
    readonly createdBy: FieldRef<"Promotion", 'String'>
    readonly updatedAt: FieldRef<"Promotion", 'DateTime'>
    readonly updatedBy: FieldRef<"Promotion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Promotion findUnique
   */
  export type PromotionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion findUniqueOrThrow
   */
  export type PromotionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion findFirst
   */
  export type PromotionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Promotions.
     */
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion findFirstOrThrow
   */
  export type PromotionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Promotions.
     */
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion findMany
   */
  export type PromotionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotions to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion create
   */
  export type PromotionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The data needed to create a Promotion.
     */
    data: XOR<PromotionCreateInput, PromotionUncheckedCreateInput>
  }

  /**
   * Promotion createMany
   */
  export type PromotionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Promotions.
     */
    data: PromotionCreateManyInput | PromotionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Promotion createManyAndReturn
   */
  export type PromotionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Promotions.
     */
    data: PromotionCreateManyInput | PromotionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Promotion update
   */
  export type PromotionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The data needed to update a Promotion.
     */
    data: XOR<PromotionUpdateInput, PromotionUncheckedUpdateInput>
    /**
     * Choose, which Promotion to update.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion updateMany
   */
  export type PromotionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Promotions.
     */
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyInput>
    /**
     * Filter which Promotions to update
     */
    where?: PromotionWhereInput
  }

  /**
   * Promotion upsert
   */
  export type PromotionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The filter to search for the Promotion to update in case it exists.
     */
    where: PromotionWhereUniqueInput
    /**
     * In case the Promotion found by the `where` argument doesn't exist, create a new Promotion with this data.
     */
    create: XOR<PromotionCreateInput, PromotionUncheckedCreateInput>
    /**
     * In case the Promotion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromotionUpdateInput, PromotionUncheckedUpdateInput>
  }

  /**
   * Promotion delete
   */
  export type PromotionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter which Promotion to delete.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion deleteMany
   */
  export type PromotionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Promotions to delete
     */
    where?: PromotionWhereInput
  }

  /**
   * Promotion.products
   */
  export type Promotion$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPromotion
     */
    select?: ProductPromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductPromotionInclude<ExtArgs> | null
    where?: ProductPromotionWhereInput
    orderBy?: ProductPromotionOrderByWithRelationInput | ProductPromotionOrderByWithRelationInput[]
    cursor?: ProductPromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductPromotionScalarFieldEnum | ProductPromotionScalarFieldEnum[]
  }

  /**
   * Promotion.orderLines
   */
  export type Promotion$orderLinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineInclude<ExtArgs> | null
    where?: OrderLineWhereInput
    orderBy?: OrderLineOrderByWithRelationInput | OrderLineOrderByWithRelationInput[]
    cursor?: OrderLineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderLineScalarFieldEnum | OrderLineScalarFieldEnum[]
  }

  /**
   * Promotion without action
   */
  export type PromotionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
  }


  /**
   * Model ProductCategory
   */

  export type AggregateProductCategory = {
    _count: ProductCategoryCountAggregateOutputType | null
    _min: ProductCategoryMinAggregateOutputType | null
    _max: ProductCategoryMaxAggregateOutputType | null
  }

  export type ProductCategoryMinAggregateOutputType = {
    categoryUuid: string | null
    productUuid: string | null
  }

  export type ProductCategoryMaxAggregateOutputType = {
    categoryUuid: string | null
    productUuid: string | null
  }

  export type ProductCategoryCountAggregateOutputType = {
    categoryUuid: number
    productUuid: number
    _all: number
  }


  export type ProductCategoryMinAggregateInputType = {
    categoryUuid?: true
    productUuid?: true
  }

  export type ProductCategoryMaxAggregateInputType = {
    categoryUuid?: true
    productUuid?: true
  }

  export type ProductCategoryCountAggregateInputType = {
    categoryUuid?: true
    productUuid?: true
    _all?: true
  }

  export type ProductCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductCategory to aggregate.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductCategories
    **/
    _count?: true | ProductCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductCategoryMaxAggregateInputType
  }

  export type GetProductCategoryAggregateType<T extends ProductCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateProductCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductCategory[P]>
      : GetScalarType<T[P], AggregateProductCategory[P]>
  }




  export type ProductCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductCategoryWhereInput
    orderBy?: ProductCategoryOrderByWithAggregationInput | ProductCategoryOrderByWithAggregationInput[]
    by: ProductCategoryScalarFieldEnum[] | ProductCategoryScalarFieldEnum
    having?: ProductCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCategoryCountAggregateInputType | true
    _min?: ProductCategoryMinAggregateInputType
    _max?: ProductCategoryMaxAggregateInputType
  }

  export type ProductCategoryGroupByOutputType = {
    categoryUuid: string
    productUuid: string
    _count: ProductCategoryCountAggregateOutputType | null
    _min: ProductCategoryMinAggregateOutputType | null
    _max: ProductCategoryMaxAggregateOutputType | null
  }

  type GetProductCategoryGroupByPayload<T extends ProductCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], ProductCategoryGroupByOutputType[P]>
        }
      >
    >


  export type ProductCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    categoryUuid?: boolean
    productUuid?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productCategory"]>

  export type ProductCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    categoryUuid?: boolean
    productUuid?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productCategory"]>

  export type ProductCategorySelectScalar = {
    categoryUuid?: boolean
    productUuid?: boolean
  }

  export type ProductCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductCategory"
    objects: {
      category: Prisma.$CategoryPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      categoryUuid: string
      productUuid: string
    }, ExtArgs["result"]["productCategory"]>
    composites: {}
  }

  type ProductCategoryGetPayload<S extends boolean | null | undefined | ProductCategoryDefaultArgs> = $Result.GetResult<Prisma.$ProductCategoryPayload, S>

  type ProductCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductCategoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductCategoryCountAggregateInputType | true
    }

  export interface ProductCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductCategory'], meta: { name: 'ProductCategory' } }
    /**
     * Find zero or one ProductCategory that matches the filter.
     * @param {ProductCategoryFindUniqueArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductCategoryFindUniqueArgs>(args: SelectSubset<T, ProductCategoryFindUniqueArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProductCategory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductCategoryFindUniqueOrThrowArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProductCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryFindFirstArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductCategoryFindFirstArgs>(args?: SelectSubset<T, ProductCategoryFindFirstArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProductCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryFindFirstOrThrowArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProductCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductCategories
     * const productCategories = await prisma.productCategory.findMany()
     * 
     * // Get first 10 ProductCategories
     * const productCategories = await prisma.productCategory.findMany({ take: 10 })
     * 
     * // Only select the `categoryUuid`
     * const productCategoryWithCategoryUuidOnly = await prisma.productCategory.findMany({ select: { categoryUuid: true } })
     * 
     */
    findMany<T extends ProductCategoryFindManyArgs>(args?: SelectSubset<T, ProductCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProductCategory.
     * @param {ProductCategoryCreateArgs} args - Arguments to create a ProductCategory.
     * @example
     * // Create one ProductCategory
     * const ProductCategory = await prisma.productCategory.create({
     *   data: {
     *     // ... data to create a ProductCategory
     *   }
     * })
     * 
     */
    create<T extends ProductCategoryCreateArgs>(args: SelectSubset<T, ProductCategoryCreateArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProductCategories.
     * @param {ProductCategoryCreateManyArgs} args - Arguments to create many ProductCategories.
     * @example
     * // Create many ProductCategories
     * const productCategory = await prisma.productCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCategoryCreateManyArgs>(args?: SelectSubset<T, ProductCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductCategories and returns the data saved in the database.
     * @param {ProductCategoryCreateManyAndReturnArgs} args - Arguments to create many ProductCategories.
     * @example
     * // Create many ProductCategories
     * const productCategory = await prisma.productCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductCategories and only return the `categoryUuid`
     * const productCategoryWithCategoryUuidOnly = await prisma.productCategory.createManyAndReturn({ 
     *   select: { categoryUuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ProductCategory.
     * @param {ProductCategoryDeleteArgs} args - Arguments to delete one ProductCategory.
     * @example
     * // Delete one ProductCategory
     * const ProductCategory = await prisma.productCategory.delete({
     *   where: {
     *     // ... filter to delete one ProductCategory
     *   }
     * })
     * 
     */
    delete<T extends ProductCategoryDeleteArgs>(args: SelectSubset<T, ProductCategoryDeleteArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProductCategory.
     * @param {ProductCategoryUpdateArgs} args - Arguments to update one ProductCategory.
     * @example
     * // Update one ProductCategory
     * const productCategory = await prisma.productCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductCategoryUpdateArgs>(args: SelectSubset<T, ProductCategoryUpdateArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProductCategories.
     * @param {ProductCategoryDeleteManyArgs} args - Arguments to filter ProductCategories to delete.
     * @example
     * // Delete a few ProductCategories
     * const { count } = await prisma.productCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductCategoryDeleteManyArgs>(args?: SelectSubset<T, ProductCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductCategories
     * const productCategory = await prisma.productCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductCategoryUpdateManyArgs>(args: SelectSubset<T, ProductCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductCategory.
     * @param {ProductCategoryUpsertArgs} args - Arguments to update or create a ProductCategory.
     * @example
     * // Update or create a ProductCategory
     * const productCategory = await prisma.productCategory.upsert({
     *   create: {
     *     // ... data to create a ProductCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductCategory we want to update
     *   }
     * })
     */
    upsert<T extends ProductCategoryUpsertArgs>(args: SelectSubset<T, ProductCategoryUpsertArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProductCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryCountArgs} args - Arguments to filter ProductCategories to count.
     * @example
     * // Count the number of ProductCategories
     * const count = await prisma.productCategory.count({
     *   where: {
     *     // ... the filter for the ProductCategories we want to count
     *   }
     * })
    **/
    count<T extends ProductCategoryCountArgs>(
      args?: Subset<T, ProductCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductCategoryAggregateArgs>(args: Subset<T, ProductCategoryAggregateArgs>): Prisma.PrismaPromise<GetProductCategoryAggregateType<T>>

    /**
     * Group by ProductCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductCategoryGroupByArgs['orderBy'] }
        : { orderBy?: ProductCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductCategory model
   */
  readonly fields: ProductCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductCategory model
   */ 
  interface ProductCategoryFieldRefs {
    readonly categoryUuid: FieldRef<"ProductCategory", 'String'>
    readonly productUuid: FieldRef<"ProductCategory", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProductCategory findUnique
   */
  export type ProductCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory findUniqueOrThrow
   */
  export type ProductCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory findFirst
   */
  export type ProductCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductCategories.
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductCategories.
     */
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * ProductCategory findFirstOrThrow
   */
  export type ProductCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductCategories.
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductCategories.
     */
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * ProductCategory findMany
   */
  export type ProductCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategories to fetch.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductCategories.
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * ProductCategory create
   */
  export type ProductCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductCategory.
     */
    data: XOR<ProductCategoryCreateInput, ProductCategoryUncheckedCreateInput>
  }

  /**
   * ProductCategory createMany
   */
  export type ProductCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductCategories.
     */
    data: ProductCategoryCreateManyInput | ProductCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductCategory createManyAndReturn
   */
  export type ProductCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ProductCategories.
     */
    data: ProductCategoryCreateManyInput | ProductCategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductCategory update
   */
  export type ProductCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductCategory.
     */
    data: XOR<ProductCategoryUpdateInput, ProductCategoryUncheckedUpdateInput>
    /**
     * Choose, which ProductCategory to update.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory updateMany
   */
  export type ProductCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductCategories.
     */
    data: XOR<ProductCategoryUpdateManyMutationInput, ProductCategoryUncheckedUpdateManyInput>
    /**
     * Filter which ProductCategories to update
     */
    where?: ProductCategoryWhereInput
  }

  /**
   * ProductCategory upsert
   */
  export type ProductCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductCategory to update in case it exists.
     */
    where: ProductCategoryWhereUniqueInput
    /**
     * In case the ProductCategory found by the `where` argument doesn't exist, create a new ProductCategory with this data.
     */
    create: XOR<ProductCategoryCreateInput, ProductCategoryUncheckedCreateInput>
    /**
     * In case the ProductCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductCategoryUpdateInput, ProductCategoryUncheckedUpdateInput>
  }

  /**
   * ProductCategory delete
   */
  export type ProductCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter which ProductCategory to delete.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory deleteMany
   */
  export type ProductCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductCategories to delete
     */
    where?: ProductCategoryWhereInput
  }

  /**
   * ProductCategory without action
   */
  export type ProductCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
  }


  /**
   * Model ProductPromotion
   */

  export type AggregateProductPromotion = {
    _count: ProductPromotionCountAggregateOutputType | null
    _min: ProductPromotionMinAggregateOutputType | null
    _max: ProductPromotionMaxAggregateOutputType | null
  }

  export type ProductPromotionMinAggregateOutputType = {
    productUuid: string | null
    promotionUuid: string | null
  }

  export type ProductPromotionMaxAggregateOutputType = {
    productUuid: string | null
    promotionUuid: string | null
  }

  export type ProductPromotionCountAggregateOutputType = {
    productUuid: number
    promotionUuid: number
    _all: number
  }


  export type ProductPromotionMinAggregateInputType = {
    productUuid?: true
    promotionUuid?: true
  }

  export type ProductPromotionMaxAggregateInputType = {
    productUuid?: true
    promotionUuid?: true
  }

  export type ProductPromotionCountAggregateInputType = {
    productUuid?: true
    promotionUuid?: true
    _all?: true
  }

  export type ProductPromotionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductPromotion to aggregate.
     */
    where?: ProductPromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductPromotions to fetch.
     */
    orderBy?: ProductPromotionOrderByWithRelationInput | ProductPromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductPromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductPromotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductPromotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductPromotions
    **/
    _count?: true | ProductPromotionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductPromotionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductPromotionMaxAggregateInputType
  }

  export type GetProductPromotionAggregateType<T extends ProductPromotionAggregateArgs> = {
        [P in keyof T & keyof AggregateProductPromotion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductPromotion[P]>
      : GetScalarType<T[P], AggregateProductPromotion[P]>
  }




  export type ProductPromotionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductPromotionWhereInput
    orderBy?: ProductPromotionOrderByWithAggregationInput | ProductPromotionOrderByWithAggregationInput[]
    by: ProductPromotionScalarFieldEnum[] | ProductPromotionScalarFieldEnum
    having?: ProductPromotionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductPromotionCountAggregateInputType | true
    _min?: ProductPromotionMinAggregateInputType
    _max?: ProductPromotionMaxAggregateInputType
  }

  export type ProductPromotionGroupByOutputType = {
    productUuid: string
    promotionUuid: string
    _count: ProductPromotionCountAggregateOutputType | null
    _min: ProductPromotionMinAggregateOutputType | null
    _max: ProductPromotionMaxAggregateOutputType | null
  }

  type GetProductPromotionGroupByPayload<T extends ProductPromotionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductPromotionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductPromotionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductPromotionGroupByOutputType[P]>
            : GetScalarType<T[P], ProductPromotionGroupByOutputType[P]>
        }
      >
    >


  export type ProductPromotionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    productUuid?: boolean
    promotionUuid?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productPromotion"]>

  export type ProductPromotionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    productUuid?: boolean
    promotionUuid?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productPromotion"]>

  export type ProductPromotionSelectScalar = {
    productUuid?: boolean
    promotionUuid?: boolean
  }

  export type ProductPromotionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }
  export type ProductPromotionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }

  export type $ProductPromotionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductPromotion"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      promotion: Prisma.$PromotionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      productUuid: string
      promotionUuid: string
    }, ExtArgs["result"]["productPromotion"]>
    composites: {}
  }

  type ProductPromotionGetPayload<S extends boolean | null | undefined | ProductPromotionDefaultArgs> = $Result.GetResult<Prisma.$ProductPromotionPayload, S>

  type ProductPromotionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductPromotionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductPromotionCountAggregateInputType | true
    }

  export interface ProductPromotionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductPromotion'], meta: { name: 'ProductPromotion' } }
    /**
     * Find zero or one ProductPromotion that matches the filter.
     * @param {ProductPromotionFindUniqueArgs} args - Arguments to find a ProductPromotion
     * @example
     * // Get one ProductPromotion
     * const productPromotion = await prisma.productPromotion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductPromotionFindUniqueArgs>(args: SelectSubset<T, ProductPromotionFindUniqueArgs<ExtArgs>>): Prisma__ProductPromotionClient<$Result.GetResult<Prisma.$ProductPromotionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProductPromotion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductPromotionFindUniqueOrThrowArgs} args - Arguments to find a ProductPromotion
     * @example
     * // Get one ProductPromotion
     * const productPromotion = await prisma.productPromotion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductPromotionFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductPromotionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductPromotionClient<$Result.GetResult<Prisma.$ProductPromotionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProductPromotion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPromotionFindFirstArgs} args - Arguments to find a ProductPromotion
     * @example
     * // Get one ProductPromotion
     * const productPromotion = await prisma.productPromotion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductPromotionFindFirstArgs>(args?: SelectSubset<T, ProductPromotionFindFirstArgs<ExtArgs>>): Prisma__ProductPromotionClient<$Result.GetResult<Prisma.$ProductPromotionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProductPromotion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPromotionFindFirstOrThrowArgs} args - Arguments to find a ProductPromotion
     * @example
     * // Get one ProductPromotion
     * const productPromotion = await prisma.productPromotion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductPromotionFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductPromotionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductPromotionClient<$Result.GetResult<Prisma.$ProductPromotionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProductPromotions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPromotionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductPromotions
     * const productPromotions = await prisma.productPromotion.findMany()
     * 
     * // Get first 10 ProductPromotions
     * const productPromotions = await prisma.productPromotion.findMany({ take: 10 })
     * 
     * // Only select the `productUuid`
     * const productPromotionWithProductUuidOnly = await prisma.productPromotion.findMany({ select: { productUuid: true } })
     * 
     */
    findMany<T extends ProductPromotionFindManyArgs>(args?: SelectSubset<T, ProductPromotionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPromotionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProductPromotion.
     * @param {ProductPromotionCreateArgs} args - Arguments to create a ProductPromotion.
     * @example
     * // Create one ProductPromotion
     * const ProductPromotion = await prisma.productPromotion.create({
     *   data: {
     *     // ... data to create a ProductPromotion
     *   }
     * })
     * 
     */
    create<T extends ProductPromotionCreateArgs>(args: SelectSubset<T, ProductPromotionCreateArgs<ExtArgs>>): Prisma__ProductPromotionClient<$Result.GetResult<Prisma.$ProductPromotionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProductPromotions.
     * @param {ProductPromotionCreateManyArgs} args - Arguments to create many ProductPromotions.
     * @example
     * // Create many ProductPromotions
     * const productPromotion = await prisma.productPromotion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductPromotionCreateManyArgs>(args?: SelectSubset<T, ProductPromotionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductPromotions and returns the data saved in the database.
     * @param {ProductPromotionCreateManyAndReturnArgs} args - Arguments to create many ProductPromotions.
     * @example
     * // Create many ProductPromotions
     * const productPromotion = await prisma.productPromotion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductPromotions and only return the `productUuid`
     * const productPromotionWithProductUuidOnly = await prisma.productPromotion.createManyAndReturn({ 
     *   select: { productUuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductPromotionCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductPromotionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPromotionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ProductPromotion.
     * @param {ProductPromotionDeleteArgs} args - Arguments to delete one ProductPromotion.
     * @example
     * // Delete one ProductPromotion
     * const ProductPromotion = await prisma.productPromotion.delete({
     *   where: {
     *     // ... filter to delete one ProductPromotion
     *   }
     * })
     * 
     */
    delete<T extends ProductPromotionDeleteArgs>(args: SelectSubset<T, ProductPromotionDeleteArgs<ExtArgs>>): Prisma__ProductPromotionClient<$Result.GetResult<Prisma.$ProductPromotionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProductPromotion.
     * @param {ProductPromotionUpdateArgs} args - Arguments to update one ProductPromotion.
     * @example
     * // Update one ProductPromotion
     * const productPromotion = await prisma.productPromotion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductPromotionUpdateArgs>(args: SelectSubset<T, ProductPromotionUpdateArgs<ExtArgs>>): Prisma__ProductPromotionClient<$Result.GetResult<Prisma.$ProductPromotionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProductPromotions.
     * @param {ProductPromotionDeleteManyArgs} args - Arguments to filter ProductPromotions to delete.
     * @example
     * // Delete a few ProductPromotions
     * const { count } = await prisma.productPromotion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductPromotionDeleteManyArgs>(args?: SelectSubset<T, ProductPromotionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductPromotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPromotionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductPromotions
     * const productPromotion = await prisma.productPromotion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductPromotionUpdateManyArgs>(args: SelectSubset<T, ProductPromotionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductPromotion.
     * @param {ProductPromotionUpsertArgs} args - Arguments to update or create a ProductPromotion.
     * @example
     * // Update or create a ProductPromotion
     * const productPromotion = await prisma.productPromotion.upsert({
     *   create: {
     *     // ... data to create a ProductPromotion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductPromotion we want to update
     *   }
     * })
     */
    upsert<T extends ProductPromotionUpsertArgs>(args: SelectSubset<T, ProductPromotionUpsertArgs<ExtArgs>>): Prisma__ProductPromotionClient<$Result.GetResult<Prisma.$ProductPromotionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProductPromotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPromotionCountArgs} args - Arguments to filter ProductPromotions to count.
     * @example
     * // Count the number of ProductPromotions
     * const count = await prisma.productPromotion.count({
     *   where: {
     *     // ... the filter for the ProductPromotions we want to count
     *   }
     * })
    **/
    count<T extends ProductPromotionCountArgs>(
      args?: Subset<T, ProductPromotionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductPromotionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductPromotion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPromotionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductPromotionAggregateArgs>(args: Subset<T, ProductPromotionAggregateArgs>): Prisma.PrismaPromise<GetProductPromotionAggregateType<T>>

    /**
     * Group by ProductPromotion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductPromotionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductPromotionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductPromotionGroupByArgs['orderBy'] }
        : { orderBy?: ProductPromotionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductPromotionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductPromotionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductPromotion model
   */
  readonly fields: ProductPromotionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductPromotion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductPromotionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    promotion<T extends PromotionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PromotionDefaultArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductPromotion model
   */ 
  interface ProductPromotionFieldRefs {
    readonly productUuid: FieldRef<"ProductPromotion", 'String'>
    readonly promotionUuid: FieldRef<"ProductPromotion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProductPromotion findUnique
   */
  export type ProductPromotionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPromotion
     */
    select?: ProductPromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductPromotionInclude<ExtArgs> | null
    /**
     * Filter, which ProductPromotion to fetch.
     */
    where: ProductPromotionWhereUniqueInput
  }

  /**
   * ProductPromotion findUniqueOrThrow
   */
  export type ProductPromotionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPromotion
     */
    select?: ProductPromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductPromotionInclude<ExtArgs> | null
    /**
     * Filter, which ProductPromotion to fetch.
     */
    where: ProductPromotionWhereUniqueInput
  }

  /**
   * ProductPromotion findFirst
   */
  export type ProductPromotionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPromotion
     */
    select?: ProductPromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductPromotionInclude<ExtArgs> | null
    /**
     * Filter, which ProductPromotion to fetch.
     */
    where?: ProductPromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductPromotions to fetch.
     */
    orderBy?: ProductPromotionOrderByWithRelationInput | ProductPromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductPromotions.
     */
    cursor?: ProductPromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductPromotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductPromotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductPromotions.
     */
    distinct?: ProductPromotionScalarFieldEnum | ProductPromotionScalarFieldEnum[]
  }

  /**
   * ProductPromotion findFirstOrThrow
   */
  export type ProductPromotionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPromotion
     */
    select?: ProductPromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductPromotionInclude<ExtArgs> | null
    /**
     * Filter, which ProductPromotion to fetch.
     */
    where?: ProductPromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductPromotions to fetch.
     */
    orderBy?: ProductPromotionOrderByWithRelationInput | ProductPromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductPromotions.
     */
    cursor?: ProductPromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductPromotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductPromotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductPromotions.
     */
    distinct?: ProductPromotionScalarFieldEnum | ProductPromotionScalarFieldEnum[]
  }

  /**
   * ProductPromotion findMany
   */
  export type ProductPromotionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPromotion
     */
    select?: ProductPromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductPromotionInclude<ExtArgs> | null
    /**
     * Filter, which ProductPromotions to fetch.
     */
    where?: ProductPromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductPromotions to fetch.
     */
    orderBy?: ProductPromotionOrderByWithRelationInput | ProductPromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductPromotions.
     */
    cursor?: ProductPromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductPromotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductPromotions.
     */
    skip?: number
    distinct?: ProductPromotionScalarFieldEnum | ProductPromotionScalarFieldEnum[]
  }

  /**
   * ProductPromotion create
   */
  export type ProductPromotionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPromotion
     */
    select?: ProductPromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductPromotionInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductPromotion.
     */
    data: XOR<ProductPromotionCreateInput, ProductPromotionUncheckedCreateInput>
  }

  /**
   * ProductPromotion createMany
   */
  export type ProductPromotionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductPromotions.
     */
    data: ProductPromotionCreateManyInput | ProductPromotionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductPromotion createManyAndReturn
   */
  export type ProductPromotionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPromotion
     */
    select?: ProductPromotionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ProductPromotions.
     */
    data: ProductPromotionCreateManyInput | ProductPromotionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductPromotionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductPromotion update
   */
  export type ProductPromotionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPromotion
     */
    select?: ProductPromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductPromotionInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductPromotion.
     */
    data: XOR<ProductPromotionUpdateInput, ProductPromotionUncheckedUpdateInput>
    /**
     * Choose, which ProductPromotion to update.
     */
    where: ProductPromotionWhereUniqueInput
  }

  /**
   * ProductPromotion updateMany
   */
  export type ProductPromotionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductPromotions.
     */
    data: XOR<ProductPromotionUpdateManyMutationInput, ProductPromotionUncheckedUpdateManyInput>
    /**
     * Filter which ProductPromotions to update
     */
    where?: ProductPromotionWhereInput
  }

  /**
   * ProductPromotion upsert
   */
  export type ProductPromotionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPromotion
     */
    select?: ProductPromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductPromotionInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductPromotion to update in case it exists.
     */
    where: ProductPromotionWhereUniqueInput
    /**
     * In case the ProductPromotion found by the `where` argument doesn't exist, create a new ProductPromotion with this data.
     */
    create: XOR<ProductPromotionCreateInput, ProductPromotionUncheckedCreateInput>
    /**
     * In case the ProductPromotion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductPromotionUpdateInput, ProductPromotionUncheckedUpdateInput>
  }

  /**
   * ProductPromotion delete
   */
  export type ProductPromotionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPromotion
     */
    select?: ProductPromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductPromotionInclude<ExtArgs> | null
    /**
     * Filter which ProductPromotion to delete.
     */
    where: ProductPromotionWhereUniqueInput
  }

  /**
   * ProductPromotion deleteMany
   */
  export type ProductPromotionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductPromotions to delete
     */
    where?: ProductPromotionWhereInput
  }

  /**
   * ProductPromotion without action
   */
  export type ProductPromotionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductPromotion
     */
    select?: ProductPromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductPromotionInclude<ExtArgs> | null
  }


  /**
   * Model DeliveryMethod
   */

  export type AggregateDeliveryMethod = {
    _count: DeliveryMethodCountAggregateOutputType | null
    _min: DeliveryMethodMinAggregateOutputType | null
    _max: DeliveryMethodMaxAggregateOutputType | null
  }

  export type DeliveryMethodMinAggregateOutputType = {
    uuid: string | null
    name: string | null
    description: string | null
    type: $Enums.DeliveryMethodType | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type DeliveryMethodMaxAggregateOutputType = {
    uuid: string | null
    name: string | null
    description: string | null
    type: $Enums.DeliveryMethodType | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type DeliveryMethodCountAggregateOutputType = {
    uuid: number
    name: number
    description: number
    priceRanges: number
    type: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type DeliveryMethodMinAggregateInputType = {
    uuid?: true
    name?: true
    description?: true
    type?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type DeliveryMethodMaxAggregateInputType = {
    uuid?: true
    name?: true
    description?: true
    type?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type DeliveryMethodCountAggregateInputType = {
    uuid?: true
    name?: true
    description?: true
    priceRanges?: true
    type?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type DeliveryMethodAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DeliveryMethod to aggregate.
     */
    where?: DeliveryMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryMethods to fetch.
     */
    orderBy?: DeliveryMethodOrderByWithRelationInput | DeliveryMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DeliveryMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DeliveryMethods
    **/
    _count?: true | DeliveryMethodCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeliveryMethodMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeliveryMethodMaxAggregateInputType
  }

  export type GetDeliveryMethodAggregateType<T extends DeliveryMethodAggregateArgs> = {
        [P in keyof T & keyof AggregateDeliveryMethod]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDeliveryMethod[P]>
      : GetScalarType<T[P], AggregateDeliveryMethod[P]>
  }




  export type DeliveryMethodGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryMethodWhereInput
    orderBy?: DeliveryMethodOrderByWithAggregationInput | DeliveryMethodOrderByWithAggregationInput[]
    by: DeliveryMethodScalarFieldEnum[] | DeliveryMethodScalarFieldEnum
    having?: DeliveryMethodScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeliveryMethodCountAggregateInputType | true
    _min?: DeliveryMethodMinAggregateInputType
    _max?: DeliveryMethodMaxAggregateInputType
  }

  export type DeliveryMethodGroupByOutputType = {
    uuid: string
    name: string
    description: string
    priceRanges: JsonValue
    type: $Enums.DeliveryMethodType
    createdAt: Date
    createdBy: string
    updatedAt: Date
    updatedBy: string
    _count: DeliveryMethodCountAggregateOutputType | null
    _min: DeliveryMethodMinAggregateOutputType | null
    _max: DeliveryMethodMaxAggregateOutputType | null
  }

  type GetDeliveryMethodGroupByPayload<T extends DeliveryMethodGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeliveryMethodGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeliveryMethodGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeliveryMethodGroupByOutputType[P]>
            : GetScalarType<T[P], DeliveryMethodGroupByOutputType[P]>
        }
      >
    >


  export type DeliveryMethodSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    name?: boolean
    description?: boolean
    priceRanges?: boolean
    type?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deliveries?: boolean | DeliveryMethod$deliveriesArgs<ExtArgs>
    _count?: boolean | DeliveryMethodCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["deliveryMethod"]>

  export type DeliveryMethodSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    name?: boolean
    description?: boolean
    priceRanges?: boolean
    type?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }, ExtArgs["result"]["deliveryMethod"]>

  export type DeliveryMethodSelectScalar = {
    uuid?: boolean
    name?: boolean
    description?: boolean
    priceRanges?: boolean
    type?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type DeliveryMethodInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveries?: boolean | DeliveryMethod$deliveriesArgs<ExtArgs>
    _count?: boolean | DeliveryMethodCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DeliveryMethodIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DeliveryMethodPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DeliveryMethod"
    objects: {
      deliveries: Prisma.$DeliveryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      name: string
      description: string
      priceRanges: Prisma.JsonValue
      type: $Enums.DeliveryMethodType
      createdAt: Date
      createdBy: string
      updatedAt: Date
      updatedBy: string
    }, ExtArgs["result"]["deliveryMethod"]>
    composites: {}
  }

  type DeliveryMethodGetPayload<S extends boolean | null | undefined | DeliveryMethodDefaultArgs> = $Result.GetResult<Prisma.$DeliveryMethodPayload, S>

  type DeliveryMethodCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DeliveryMethodFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DeliveryMethodCountAggregateInputType | true
    }

  export interface DeliveryMethodDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DeliveryMethod'], meta: { name: 'DeliveryMethod' } }
    /**
     * Find zero or one DeliveryMethod that matches the filter.
     * @param {DeliveryMethodFindUniqueArgs} args - Arguments to find a DeliveryMethod
     * @example
     * // Get one DeliveryMethod
     * const deliveryMethod = await prisma.deliveryMethod.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DeliveryMethodFindUniqueArgs>(args: SelectSubset<T, DeliveryMethodFindUniqueArgs<ExtArgs>>): Prisma__DeliveryMethodClient<$Result.GetResult<Prisma.$DeliveryMethodPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DeliveryMethod that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DeliveryMethodFindUniqueOrThrowArgs} args - Arguments to find a DeliveryMethod
     * @example
     * // Get one DeliveryMethod
     * const deliveryMethod = await prisma.deliveryMethod.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DeliveryMethodFindUniqueOrThrowArgs>(args: SelectSubset<T, DeliveryMethodFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DeliveryMethodClient<$Result.GetResult<Prisma.$DeliveryMethodPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DeliveryMethod that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryMethodFindFirstArgs} args - Arguments to find a DeliveryMethod
     * @example
     * // Get one DeliveryMethod
     * const deliveryMethod = await prisma.deliveryMethod.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DeliveryMethodFindFirstArgs>(args?: SelectSubset<T, DeliveryMethodFindFirstArgs<ExtArgs>>): Prisma__DeliveryMethodClient<$Result.GetResult<Prisma.$DeliveryMethodPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DeliveryMethod that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryMethodFindFirstOrThrowArgs} args - Arguments to find a DeliveryMethod
     * @example
     * // Get one DeliveryMethod
     * const deliveryMethod = await prisma.deliveryMethod.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DeliveryMethodFindFirstOrThrowArgs>(args?: SelectSubset<T, DeliveryMethodFindFirstOrThrowArgs<ExtArgs>>): Prisma__DeliveryMethodClient<$Result.GetResult<Prisma.$DeliveryMethodPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DeliveryMethods that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryMethodFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DeliveryMethods
     * const deliveryMethods = await prisma.deliveryMethod.findMany()
     * 
     * // Get first 10 DeliveryMethods
     * const deliveryMethods = await prisma.deliveryMethod.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const deliveryMethodWithUuidOnly = await prisma.deliveryMethod.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends DeliveryMethodFindManyArgs>(args?: SelectSubset<T, DeliveryMethodFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryMethodPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DeliveryMethod.
     * @param {DeliveryMethodCreateArgs} args - Arguments to create a DeliveryMethod.
     * @example
     * // Create one DeliveryMethod
     * const DeliveryMethod = await prisma.deliveryMethod.create({
     *   data: {
     *     // ... data to create a DeliveryMethod
     *   }
     * })
     * 
     */
    create<T extends DeliveryMethodCreateArgs>(args: SelectSubset<T, DeliveryMethodCreateArgs<ExtArgs>>): Prisma__DeliveryMethodClient<$Result.GetResult<Prisma.$DeliveryMethodPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DeliveryMethods.
     * @param {DeliveryMethodCreateManyArgs} args - Arguments to create many DeliveryMethods.
     * @example
     * // Create many DeliveryMethods
     * const deliveryMethod = await prisma.deliveryMethod.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DeliveryMethodCreateManyArgs>(args?: SelectSubset<T, DeliveryMethodCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DeliveryMethods and returns the data saved in the database.
     * @param {DeliveryMethodCreateManyAndReturnArgs} args - Arguments to create many DeliveryMethods.
     * @example
     * // Create many DeliveryMethods
     * const deliveryMethod = await prisma.deliveryMethod.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DeliveryMethods and only return the `uuid`
     * const deliveryMethodWithUuidOnly = await prisma.deliveryMethod.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DeliveryMethodCreateManyAndReturnArgs>(args?: SelectSubset<T, DeliveryMethodCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryMethodPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DeliveryMethod.
     * @param {DeliveryMethodDeleteArgs} args - Arguments to delete one DeliveryMethod.
     * @example
     * // Delete one DeliveryMethod
     * const DeliveryMethod = await prisma.deliveryMethod.delete({
     *   where: {
     *     // ... filter to delete one DeliveryMethod
     *   }
     * })
     * 
     */
    delete<T extends DeliveryMethodDeleteArgs>(args: SelectSubset<T, DeliveryMethodDeleteArgs<ExtArgs>>): Prisma__DeliveryMethodClient<$Result.GetResult<Prisma.$DeliveryMethodPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DeliveryMethod.
     * @param {DeliveryMethodUpdateArgs} args - Arguments to update one DeliveryMethod.
     * @example
     * // Update one DeliveryMethod
     * const deliveryMethod = await prisma.deliveryMethod.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DeliveryMethodUpdateArgs>(args: SelectSubset<T, DeliveryMethodUpdateArgs<ExtArgs>>): Prisma__DeliveryMethodClient<$Result.GetResult<Prisma.$DeliveryMethodPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DeliveryMethods.
     * @param {DeliveryMethodDeleteManyArgs} args - Arguments to filter DeliveryMethods to delete.
     * @example
     * // Delete a few DeliveryMethods
     * const { count } = await prisma.deliveryMethod.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DeliveryMethodDeleteManyArgs>(args?: SelectSubset<T, DeliveryMethodDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DeliveryMethods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryMethodUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DeliveryMethods
     * const deliveryMethod = await prisma.deliveryMethod.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DeliveryMethodUpdateManyArgs>(args: SelectSubset<T, DeliveryMethodUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DeliveryMethod.
     * @param {DeliveryMethodUpsertArgs} args - Arguments to update or create a DeliveryMethod.
     * @example
     * // Update or create a DeliveryMethod
     * const deliveryMethod = await prisma.deliveryMethod.upsert({
     *   create: {
     *     // ... data to create a DeliveryMethod
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DeliveryMethod we want to update
     *   }
     * })
     */
    upsert<T extends DeliveryMethodUpsertArgs>(args: SelectSubset<T, DeliveryMethodUpsertArgs<ExtArgs>>): Prisma__DeliveryMethodClient<$Result.GetResult<Prisma.$DeliveryMethodPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DeliveryMethods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryMethodCountArgs} args - Arguments to filter DeliveryMethods to count.
     * @example
     * // Count the number of DeliveryMethods
     * const count = await prisma.deliveryMethod.count({
     *   where: {
     *     // ... the filter for the DeliveryMethods we want to count
     *   }
     * })
    **/
    count<T extends DeliveryMethodCountArgs>(
      args?: Subset<T, DeliveryMethodCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeliveryMethodCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DeliveryMethod.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryMethodAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeliveryMethodAggregateArgs>(args: Subset<T, DeliveryMethodAggregateArgs>): Prisma.PrismaPromise<GetDeliveryMethodAggregateType<T>>

    /**
     * Group by DeliveryMethod.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryMethodGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DeliveryMethodGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DeliveryMethodGroupByArgs['orderBy'] }
        : { orderBy?: DeliveryMethodGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DeliveryMethodGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeliveryMethodGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DeliveryMethod model
   */
  readonly fields: DeliveryMethodFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DeliveryMethod.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DeliveryMethodClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    deliveries<T extends DeliveryMethod$deliveriesArgs<ExtArgs> = {}>(args?: Subset<T, DeliveryMethod$deliveriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DeliveryMethod model
   */ 
  interface DeliveryMethodFieldRefs {
    readonly uuid: FieldRef<"DeliveryMethod", 'String'>
    readonly name: FieldRef<"DeliveryMethod", 'String'>
    readonly description: FieldRef<"DeliveryMethod", 'String'>
    readonly priceRanges: FieldRef<"DeliveryMethod", 'Json'>
    readonly type: FieldRef<"DeliveryMethod", 'DeliveryMethodType'>
    readonly createdAt: FieldRef<"DeliveryMethod", 'DateTime'>
    readonly createdBy: FieldRef<"DeliveryMethod", 'String'>
    readonly updatedAt: FieldRef<"DeliveryMethod", 'DateTime'>
    readonly updatedBy: FieldRef<"DeliveryMethod", 'String'>
  }
    

  // Custom InputTypes
  /**
   * DeliveryMethod findUnique
   */
  export type DeliveryMethodFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryMethod
     */
    select?: DeliveryMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryMethodInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryMethod to fetch.
     */
    where: DeliveryMethodWhereUniqueInput
  }

  /**
   * DeliveryMethod findUniqueOrThrow
   */
  export type DeliveryMethodFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryMethod
     */
    select?: DeliveryMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryMethodInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryMethod to fetch.
     */
    where: DeliveryMethodWhereUniqueInput
  }

  /**
   * DeliveryMethod findFirst
   */
  export type DeliveryMethodFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryMethod
     */
    select?: DeliveryMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryMethodInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryMethod to fetch.
     */
    where?: DeliveryMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryMethods to fetch.
     */
    orderBy?: DeliveryMethodOrderByWithRelationInput | DeliveryMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DeliveryMethods.
     */
    cursor?: DeliveryMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DeliveryMethods.
     */
    distinct?: DeliveryMethodScalarFieldEnum | DeliveryMethodScalarFieldEnum[]
  }

  /**
   * DeliveryMethod findFirstOrThrow
   */
  export type DeliveryMethodFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryMethod
     */
    select?: DeliveryMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryMethodInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryMethod to fetch.
     */
    where?: DeliveryMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryMethods to fetch.
     */
    orderBy?: DeliveryMethodOrderByWithRelationInput | DeliveryMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DeliveryMethods.
     */
    cursor?: DeliveryMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DeliveryMethods.
     */
    distinct?: DeliveryMethodScalarFieldEnum | DeliveryMethodScalarFieldEnum[]
  }

  /**
   * DeliveryMethod findMany
   */
  export type DeliveryMethodFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryMethod
     */
    select?: DeliveryMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryMethodInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryMethods to fetch.
     */
    where?: DeliveryMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryMethods to fetch.
     */
    orderBy?: DeliveryMethodOrderByWithRelationInput | DeliveryMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DeliveryMethods.
     */
    cursor?: DeliveryMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryMethods.
     */
    skip?: number
    distinct?: DeliveryMethodScalarFieldEnum | DeliveryMethodScalarFieldEnum[]
  }

  /**
   * DeliveryMethod create
   */
  export type DeliveryMethodCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryMethod
     */
    select?: DeliveryMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryMethodInclude<ExtArgs> | null
    /**
     * The data needed to create a DeliveryMethod.
     */
    data: XOR<DeliveryMethodCreateInput, DeliveryMethodUncheckedCreateInput>
  }

  /**
   * DeliveryMethod createMany
   */
  export type DeliveryMethodCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DeliveryMethods.
     */
    data: DeliveryMethodCreateManyInput | DeliveryMethodCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DeliveryMethod createManyAndReturn
   */
  export type DeliveryMethodCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryMethod
     */
    select?: DeliveryMethodSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DeliveryMethods.
     */
    data: DeliveryMethodCreateManyInput | DeliveryMethodCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DeliveryMethod update
   */
  export type DeliveryMethodUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryMethod
     */
    select?: DeliveryMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryMethodInclude<ExtArgs> | null
    /**
     * The data needed to update a DeliveryMethod.
     */
    data: XOR<DeliveryMethodUpdateInput, DeliveryMethodUncheckedUpdateInput>
    /**
     * Choose, which DeliveryMethod to update.
     */
    where: DeliveryMethodWhereUniqueInput
  }

  /**
   * DeliveryMethod updateMany
   */
  export type DeliveryMethodUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DeliveryMethods.
     */
    data: XOR<DeliveryMethodUpdateManyMutationInput, DeliveryMethodUncheckedUpdateManyInput>
    /**
     * Filter which DeliveryMethods to update
     */
    where?: DeliveryMethodWhereInput
  }

  /**
   * DeliveryMethod upsert
   */
  export type DeliveryMethodUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryMethod
     */
    select?: DeliveryMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryMethodInclude<ExtArgs> | null
    /**
     * The filter to search for the DeliveryMethod to update in case it exists.
     */
    where: DeliveryMethodWhereUniqueInput
    /**
     * In case the DeliveryMethod found by the `where` argument doesn't exist, create a new DeliveryMethod with this data.
     */
    create: XOR<DeliveryMethodCreateInput, DeliveryMethodUncheckedCreateInput>
    /**
     * In case the DeliveryMethod was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DeliveryMethodUpdateInput, DeliveryMethodUncheckedUpdateInput>
  }

  /**
   * DeliveryMethod delete
   */
  export type DeliveryMethodDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryMethod
     */
    select?: DeliveryMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryMethodInclude<ExtArgs> | null
    /**
     * Filter which DeliveryMethod to delete.
     */
    where: DeliveryMethodWhereUniqueInput
  }

  /**
   * DeliveryMethod deleteMany
   */
  export type DeliveryMethodDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DeliveryMethods to delete
     */
    where?: DeliveryMethodWhereInput
  }

  /**
   * DeliveryMethod.deliveries
   */
  export type DeliveryMethod$deliveriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    where?: DeliveryWhereInput
    orderBy?: DeliveryOrderByWithRelationInput | DeliveryOrderByWithRelationInput[]
    cursor?: DeliveryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryScalarFieldEnum | DeliveryScalarFieldEnum[]
  }

  /**
   * DeliveryMethod without action
   */
  export type DeliveryMethodDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryMethod
     */
    select?: DeliveryMethodSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryMethodInclude<ExtArgs> | null
  }


  /**
   * Model Delivery
   */

  export type AggregateDelivery = {
    _count: DeliveryCountAggregateOutputType | null
    _avg: DeliveryAvgAggregateOutputType | null
    _sum: DeliverySumAggregateOutputType | null
    _min: DeliveryMinAggregateOutputType | null
    _max: DeliveryMaxAggregateOutputType | null
  }

  export type DeliveryAvgAggregateOutputType = {
    price: Decimal | null
    weight: number | null
  }

  export type DeliverySumAggregateOutputType = {
    price: Decimal | null
    weight: number | null
  }

  export type DeliveryMinAggregateOutputType = {
    uuid: string | null
    orderUuid: string | null
    price: Decimal | null
    pickupId: string | null
    pickingDate: Date | null
    trackingNumber: string | null
    direction: $Enums.DeliveryDirection | null
    weight: number | null
    status: $Enums.DeliveryStatus | null
    methodUuid: string | null
    senderAddressUuid: string | null
    senderPhoneUuid: string | null
    senderEmailUuid: string | null
    receiverAddressUuid: string | null
    receiverPhoneUuid: string | null
    receiverEmailUuid: string | null
    data: Buffer | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type DeliveryMaxAggregateOutputType = {
    uuid: string | null
    orderUuid: string | null
    price: Decimal | null
    pickupId: string | null
    pickingDate: Date | null
    trackingNumber: string | null
    direction: $Enums.DeliveryDirection | null
    weight: number | null
    status: $Enums.DeliveryStatus | null
    methodUuid: string | null
    senderAddressUuid: string | null
    senderPhoneUuid: string | null
    senderEmailUuid: string | null
    receiverAddressUuid: string | null
    receiverPhoneUuid: string | null
    receiverEmailUuid: string | null
    data: Buffer | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type DeliveryCountAggregateOutputType = {
    uuid: number
    orderUuid: number
    price: number
    pickupId: number
    pickingDate: number
    trackingNumber: number
    direction: number
    weight: number
    status: number
    methodUuid: number
    senderAddressUuid: number
    senderPhoneUuid: number
    senderEmailUuid: number
    receiverAddressUuid: number
    receiverPhoneUuid: number
    receiverEmailUuid: number
    data: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type DeliveryAvgAggregateInputType = {
    price?: true
    weight?: true
  }

  export type DeliverySumAggregateInputType = {
    price?: true
    weight?: true
  }

  export type DeliveryMinAggregateInputType = {
    uuid?: true
    orderUuid?: true
    price?: true
    pickupId?: true
    pickingDate?: true
    trackingNumber?: true
    direction?: true
    weight?: true
    status?: true
    methodUuid?: true
    senderAddressUuid?: true
    senderPhoneUuid?: true
    senderEmailUuid?: true
    receiverAddressUuid?: true
    receiverPhoneUuid?: true
    receiverEmailUuid?: true
    data?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type DeliveryMaxAggregateInputType = {
    uuid?: true
    orderUuid?: true
    price?: true
    pickupId?: true
    pickingDate?: true
    trackingNumber?: true
    direction?: true
    weight?: true
    status?: true
    methodUuid?: true
    senderAddressUuid?: true
    senderPhoneUuid?: true
    senderEmailUuid?: true
    receiverAddressUuid?: true
    receiverPhoneUuid?: true
    receiverEmailUuid?: true
    data?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type DeliveryCountAggregateInputType = {
    uuid?: true
    orderUuid?: true
    price?: true
    pickupId?: true
    pickingDate?: true
    trackingNumber?: true
    direction?: true
    weight?: true
    status?: true
    methodUuid?: true
    senderAddressUuid?: true
    senderPhoneUuid?: true
    senderEmailUuid?: true
    receiverAddressUuid?: true
    receiverPhoneUuid?: true
    receiverEmailUuid?: true
    data?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type DeliveryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Delivery to aggregate.
     */
    where?: DeliveryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Deliveries to fetch.
     */
    orderBy?: DeliveryOrderByWithRelationInput | DeliveryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DeliveryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Deliveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Deliveries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Deliveries
    **/
    _count?: true | DeliveryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DeliveryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DeliverySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeliveryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeliveryMaxAggregateInputType
  }

  export type GetDeliveryAggregateType<T extends DeliveryAggregateArgs> = {
        [P in keyof T & keyof AggregateDelivery]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDelivery[P]>
      : GetScalarType<T[P], AggregateDelivery[P]>
  }




  export type DeliveryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryWhereInput
    orderBy?: DeliveryOrderByWithAggregationInput | DeliveryOrderByWithAggregationInput[]
    by: DeliveryScalarFieldEnum[] | DeliveryScalarFieldEnum
    having?: DeliveryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeliveryCountAggregateInputType | true
    _avg?: DeliveryAvgAggregateInputType
    _sum?: DeliverySumAggregateInputType
    _min?: DeliveryMinAggregateInputType
    _max?: DeliveryMaxAggregateInputType
  }

  export type DeliveryGroupByOutputType = {
    uuid: string
    orderUuid: string
    price: Decimal
    pickupId: string | null
    pickingDate: Date | null
    trackingNumber: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data: Buffer | null
    createdAt: Date
    createdBy: string
    updatedAt: Date
    updatedBy: string
    _count: DeliveryCountAggregateOutputType | null
    _avg: DeliveryAvgAggregateOutputType | null
    _sum: DeliverySumAggregateOutputType | null
    _min: DeliveryMinAggregateOutputType | null
    _max: DeliveryMaxAggregateOutputType | null
  }

  type GetDeliveryGroupByPayload<T extends DeliveryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeliveryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeliveryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeliveryGroupByOutputType[P]>
            : GetScalarType<T[P], DeliveryGroupByOutputType[P]>
        }
      >
    >


  export type DeliverySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    orderUuid?: boolean
    price?: boolean
    pickupId?: boolean
    pickingDate?: boolean
    trackingNumber?: boolean
    direction?: boolean
    weight?: boolean
    status?: boolean
    methodUuid?: boolean
    senderAddressUuid?: boolean
    senderPhoneUuid?: boolean
    senderEmailUuid?: boolean
    receiverAddressUuid?: boolean
    receiverPhoneUuid?: boolean
    receiverEmailUuid?: boolean
    data?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    method?: boolean | DeliveryMethodDefaultArgs<ExtArgs>
    senderAddress?: boolean | MediaDefaultArgs<ExtArgs>
    senderPhone?: boolean | MediaDefaultArgs<ExtArgs>
    senderEmail?: boolean | MediaDefaultArgs<ExtArgs>
    receiverAddress?: boolean | MediaDefaultArgs<ExtArgs>
    receiverPhone?: boolean | MediaDefaultArgs<ExtArgs>
    receiverEmail?: boolean | MediaDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["delivery"]>

  export type DeliverySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    orderUuid?: boolean
    price?: boolean
    pickupId?: boolean
    pickingDate?: boolean
    trackingNumber?: boolean
    direction?: boolean
    weight?: boolean
    status?: boolean
    methodUuid?: boolean
    senderAddressUuid?: boolean
    senderPhoneUuid?: boolean
    senderEmailUuid?: boolean
    receiverAddressUuid?: boolean
    receiverPhoneUuid?: boolean
    receiverEmailUuid?: boolean
    data?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    method?: boolean | DeliveryMethodDefaultArgs<ExtArgs>
    senderAddress?: boolean | MediaDefaultArgs<ExtArgs>
    senderPhone?: boolean | MediaDefaultArgs<ExtArgs>
    senderEmail?: boolean | MediaDefaultArgs<ExtArgs>
    receiverAddress?: boolean | MediaDefaultArgs<ExtArgs>
    receiverPhone?: boolean | MediaDefaultArgs<ExtArgs>
    receiverEmail?: boolean | MediaDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["delivery"]>

  export type DeliverySelectScalar = {
    uuid?: boolean
    orderUuid?: boolean
    price?: boolean
    pickupId?: boolean
    pickingDate?: boolean
    trackingNumber?: boolean
    direction?: boolean
    weight?: boolean
    status?: boolean
    methodUuid?: boolean
    senderAddressUuid?: boolean
    senderPhoneUuid?: boolean
    senderEmailUuid?: boolean
    receiverAddressUuid?: boolean
    receiverPhoneUuid?: boolean
    receiverEmailUuid?: boolean
    data?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type DeliveryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    method?: boolean | DeliveryMethodDefaultArgs<ExtArgs>
    senderAddress?: boolean | MediaDefaultArgs<ExtArgs>
    senderPhone?: boolean | MediaDefaultArgs<ExtArgs>
    senderEmail?: boolean | MediaDefaultArgs<ExtArgs>
    receiverAddress?: boolean | MediaDefaultArgs<ExtArgs>
    receiverPhone?: boolean | MediaDefaultArgs<ExtArgs>
    receiverEmail?: boolean | MediaDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type DeliveryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    method?: boolean | DeliveryMethodDefaultArgs<ExtArgs>
    senderAddress?: boolean | MediaDefaultArgs<ExtArgs>
    senderPhone?: boolean | MediaDefaultArgs<ExtArgs>
    senderEmail?: boolean | MediaDefaultArgs<ExtArgs>
    receiverAddress?: boolean | MediaDefaultArgs<ExtArgs>
    receiverPhone?: boolean | MediaDefaultArgs<ExtArgs>
    receiverEmail?: boolean | MediaDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }

  export type $DeliveryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Delivery"
    objects: {
      method: Prisma.$DeliveryMethodPayload<ExtArgs>
      senderAddress: Prisma.$MediaPayload<ExtArgs>
      senderPhone: Prisma.$MediaPayload<ExtArgs>
      senderEmail: Prisma.$MediaPayload<ExtArgs>
      receiverAddress: Prisma.$MediaPayload<ExtArgs>
      receiverPhone: Prisma.$MediaPayload<ExtArgs>
      receiverEmail: Prisma.$MediaPayload<ExtArgs>
      order: Prisma.$OrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      orderUuid: string
      price: Prisma.Decimal
      pickupId: string | null
      pickingDate: Date | null
      trackingNumber: string | null
      direction: $Enums.DeliveryDirection
      weight: number
      status: $Enums.DeliveryStatus
      methodUuid: string
      senderAddressUuid: string
      senderPhoneUuid: string
      senderEmailUuid: string
      receiverAddressUuid: string
      receiverPhoneUuid: string
      receiverEmailUuid: string
      data: Buffer | null
      createdAt: Date
      createdBy: string
      updatedAt: Date
      updatedBy: string
    }, ExtArgs["result"]["delivery"]>
    composites: {}
  }

  type DeliveryGetPayload<S extends boolean | null | undefined | DeliveryDefaultArgs> = $Result.GetResult<Prisma.$DeliveryPayload, S>

  type DeliveryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DeliveryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DeliveryCountAggregateInputType | true
    }

  export interface DeliveryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Delivery'], meta: { name: 'Delivery' } }
    /**
     * Find zero or one Delivery that matches the filter.
     * @param {DeliveryFindUniqueArgs} args - Arguments to find a Delivery
     * @example
     * // Get one Delivery
     * const delivery = await prisma.delivery.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DeliveryFindUniqueArgs>(args: SelectSubset<T, DeliveryFindUniqueArgs<ExtArgs>>): Prisma__DeliveryClient<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Delivery that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DeliveryFindUniqueOrThrowArgs} args - Arguments to find a Delivery
     * @example
     * // Get one Delivery
     * const delivery = await prisma.delivery.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DeliveryFindUniqueOrThrowArgs>(args: SelectSubset<T, DeliveryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DeliveryClient<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Delivery that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryFindFirstArgs} args - Arguments to find a Delivery
     * @example
     * // Get one Delivery
     * const delivery = await prisma.delivery.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DeliveryFindFirstArgs>(args?: SelectSubset<T, DeliveryFindFirstArgs<ExtArgs>>): Prisma__DeliveryClient<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Delivery that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryFindFirstOrThrowArgs} args - Arguments to find a Delivery
     * @example
     * // Get one Delivery
     * const delivery = await prisma.delivery.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DeliveryFindFirstOrThrowArgs>(args?: SelectSubset<T, DeliveryFindFirstOrThrowArgs<ExtArgs>>): Prisma__DeliveryClient<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Deliveries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Deliveries
     * const deliveries = await prisma.delivery.findMany()
     * 
     * // Get first 10 Deliveries
     * const deliveries = await prisma.delivery.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const deliveryWithUuidOnly = await prisma.delivery.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends DeliveryFindManyArgs>(args?: SelectSubset<T, DeliveryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Delivery.
     * @param {DeliveryCreateArgs} args - Arguments to create a Delivery.
     * @example
     * // Create one Delivery
     * const Delivery = await prisma.delivery.create({
     *   data: {
     *     // ... data to create a Delivery
     *   }
     * })
     * 
     */
    create<T extends DeliveryCreateArgs>(args: SelectSubset<T, DeliveryCreateArgs<ExtArgs>>): Prisma__DeliveryClient<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Deliveries.
     * @param {DeliveryCreateManyArgs} args - Arguments to create many Deliveries.
     * @example
     * // Create many Deliveries
     * const delivery = await prisma.delivery.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DeliveryCreateManyArgs>(args?: SelectSubset<T, DeliveryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Deliveries and returns the data saved in the database.
     * @param {DeliveryCreateManyAndReturnArgs} args - Arguments to create many Deliveries.
     * @example
     * // Create many Deliveries
     * const delivery = await prisma.delivery.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Deliveries and only return the `uuid`
     * const deliveryWithUuidOnly = await prisma.delivery.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DeliveryCreateManyAndReturnArgs>(args?: SelectSubset<T, DeliveryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Delivery.
     * @param {DeliveryDeleteArgs} args - Arguments to delete one Delivery.
     * @example
     * // Delete one Delivery
     * const Delivery = await prisma.delivery.delete({
     *   where: {
     *     // ... filter to delete one Delivery
     *   }
     * })
     * 
     */
    delete<T extends DeliveryDeleteArgs>(args: SelectSubset<T, DeliveryDeleteArgs<ExtArgs>>): Prisma__DeliveryClient<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Delivery.
     * @param {DeliveryUpdateArgs} args - Arguments to update one Delivery.
     * @example
     * // Update one Delivery
     * const delivery = await prisma.delivery.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DeliveryUpdateArgs>(args: SelectSubset<T, DeliveryUpdateArgs<ExtArgs>>): Prisma__DeliveryClient<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Deliveries.
     * @param {DeliveryDeleteManyArgs} args - Arguments to filter Deliveries to delete.
     * @example
     * // Delete a few Deliveries
     * const { count } = await prisma.delivery.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DeliveryDeleteManyArgs>(args?: SelectSubset<T, DeliveryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Deliveries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Deliveries
     * const delivery = await prisma.delivery.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DeliveryUpdateManyArgs>(args: SelectSubset<T, DeliveryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Delivery.
     * @param {DeliveryUpsertArgs} args - Arguments to update or create a Delivery.
     * @example
     * // Update or create a Delivery
     * const delivery = await prisma.delivery.upsert({
     *   create: {
     *     // ... data to create a Delivery
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Delivery we want to update
     *   }
     * })
     */
    upsert<T extends DeliveryUpsertArgs>(args: SelectSubset<T, DeliveryUpsertArgs<ExtArgs>>): Prisma__DeliveryClient<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Deliveries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryCountArgs} args - Arguments to filter Deliveries to count.
     * @example
     * // Count the number of Deliveries
     * const count = await prisma.delivery.count({
     *   where: {
     *     // ... the filter for the Deliveries we want to count
     *   }
     * })
    **/
    count<T extends DeliveryCountArgs>(
      args?: Subset<T, DeliveryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeliveryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Delivery.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeliveryAggregateArgs>(args: Subset<T, DeliveryAggregateArgs>): Prisma.PrismaPromise<GetDeliveryAggregateType<T>>

    /**
     * Group by Delivery.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DeliveryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DeliveryGroupByArgs['orderBy'] }
        : { orderBy?: DeliveryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DeliveryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeliveryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Delivery model
   */
  readonly fields: DeliveryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Delivery.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DeliveryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    method<T extends DeliveryMethodDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DeliveryMethodDefaultArgs<ExtArgs>>): Prisma__DeliveryMethodClient<$Result.GetResult<Prisma.$DeliveryMethodPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    senderAddress<T extends MediaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MediaDefaultArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    senderPhone<T extends MediaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MediaDefaultArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    senderEmail<T extends MediaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MediaDefaultArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    receiverAddress<T extends MediaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MediaDefaultArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    receiverPhone<T extends MediaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MediaDefaultArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    receiverEmail<T extends MediaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MediaDefaultArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Delivery model
   */ 
  interface DeliveryFieldRefs {
    readonly uuid: FieldRef<"Delivery", 'String'>
    readonly orderUuid: FieldRef<"Delivery", 'String'>
    readonly price: FieldRef<"Delivery", 'Decimal'>
    readonly pickupId: FieldRef<"Delivery", 'String'>
    readonly pickingDate: FieldRef<"Delivery", 'DateTime'>
    readonly trackingNumber: FieldRef<"Delivery", 'String'>
    readonly direction: FieldRef<"Delivery", 'DeliveryDirection'>
    readonly weight: FieldRef<"Delivery", 'Int'>
    readonly status: FieldRef<"Delivery", 'DeliveryStatus'>
    readonly methodUuid: FieldRef<"Delivery", 'String'>
    readonly senderAddressUuid: FieldRef<"Delivery", 'String'>
    readonly senderPhoneUuid: FieldRef<"Delivery", 'String'>
    readonly senderEmailUuid: FieldRef<"Delivery", 'String'>
    readonly receiverAddressUuid: FieldRef<"Delivery", 'String'>
    readonly receiverPhoneUuid: FieldRef<"Delivery", 'String'>
    readonly receiverEmailUuid: FieldRef<"Delivery", 'String'>
    readonly data: FieldRef<"Delivery", 'Bytes'>
    readonly createdAt: FieldRef<"Delivery", 'DateTime'>
    readonly createdBy: FieldRef<"Delivery", 'String'>
    readonly updatedAt: FieldRef<"Delivery", 'DateTime'>
    readonly updatedBy: FieldRef<"Delivery", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Delivery findUnique
   */
  export type DeliveryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    /**
     * Filter, which Delivery to fetch.
     */
    where: DeliveryWhereUniqueInput
  }

  /**
   * Delivery findUniqueOrThrow
   */
  export type DeliveryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    /**
     * Filter, which Delivery to fetch.
     */
    where: DeliveryWhereUniqueInput
  }

  /**
   * Delivery findFirst
   */
  export type DeliveryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    /**
     * Filter, which Delivery to fetch.
     */
    where?: DeliveryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Deliveries to fetch.
     */
    orderBy?: DeliveryOrderByWithRelationInput | DeliveryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Deliveries.
     */
    cursor?: DeliveryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Deliveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Deliveries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Deliveries.
     */
    distinct?: DeliveryScalarFieldEnum | DeliveryScalarFieldEnum[]
  }

  /**
   * Delivery findFirstOrThrow
   */
  export type DeliveryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    /**
     * Filter, which Delivery to fetch.
     */
    where?: DeliveryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Deliveries to fetch.
     */
    orderBy?: DeliveryOrderByWithRelationInput | DeliveryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Deliveries.
     */
    cursor?: DeliveryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Deliveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Deliveries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Deliveries.
     */
    distinct?: DeliveryScalarFieldEnum | DeliveryScalarFieldEnum[]
  }

  /**
   * Delivery findMany
   */
  export type DeliveryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    /**
     * Filter, which Deliveries to fetch.
     */
    where?: DeliveryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Deliveries to fetch.
     */
    orderBy?: DeliveryOrderByWithRelationInput | DeliveryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Deliveries.
     */
    cursor?: DeliveryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Deliveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Deliveries.
     */
    skip?: number
    distinct?: DeliveryScalarFieldEnum | DeliveryScalarFieldEnum[]
  }

  /**
   * Delivery create
   */
  export type DeliveryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    /**
     * The data needed to create a Delivery.
     */
    data: XOR<DeliveryCreateInput, DeliveryUncheckedCreateInput>
  }

  /**
   * Delivery createMany
   */
  export type DeliveryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Deliveries.
     */
    data: DeliveryCreateManyInput | DeliveryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Delivery createManyAndReturn
   */
  export type DeliveryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Deliveries.
     */
    data: DeliveryCreateManyInput | DeliveryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Delivery update
   */
  export type DeliveryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    /**
     * The data needed to update a Delivery.
     */
    data: XOR<DeliveryUpdateInput, DeliveryUncheckedUpdateInput>
    /**
     * Choose, which Delivery to update.
     */
    where: DeliveryWhereUniqueInput
  }

  /**
   * Delivery updateMany
   */
  export type DeliveryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Deliveries.
     */
    data: XOR<DeliveryUpdateManyMutationInput, DeliveryUncheckedUpdateManyInput>
    /**
     * Filter which Deliveries to update
     */
    where?: DeliveryWhereInput
  }

  /**
   * Delivery upsert
   */
  export type DeliveryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    /**
     * The filter to search for the Delivery to update in case it exists.
     */
    where: DeliveryWhereUniqueInput
    /**
     * In case the Delivery found by the `where` argument doesn't exist, create a new Delivery with this data.
     */
    create: XOR<DeliveryCreateInput, DeliveryUncheckedCreateInput>
    /**
     * In case the Delivery was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DeliveryUpdateInput, DeliveryUncheckedUpdateInput>
  }

  /**
   * Delivery delete
   */
  export type DeliveryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    /**
     * Filter which Delivery to delete.
     */
    where: DeliveryWhereUniqueInput
  }

  /**
   * Delivery deleteMany
   */
  export type DeliveryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Deliveries to delete
     */
    where?: DeliveryWhereInput
  }

  /**
   * Delivery without action
   */
  export type DeliveryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type PaymentSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type PaymentMinAggregateOutputType = {
    uuid: string | null
    orderUuid: string | null
    amount: Decimal | null
    status: $Enums.PaymentStatus | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type PaymentMaxAggregateOutputType = {
    uuid: string | null
    orderUuid: string | null
    amount: Decimal | null
    status: $Enums.PaymentStatus | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type PaymentCountAggregateOutputType = {
    uuid: number
    orderUuid: number
    amount: number
    status: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    amount?: true
  }

  export type PaymentSumAggregateInputType = {
    amount?: true
  }

  export type PaymentMinAggregateInputType = {
    uuid?: true
    orderUuid?: true
    amount?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type PaymentMaxAggregateInputType = {
    uuid?: true
    orderUuid?: true
    amount?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type PaymentCountAggregateInputType = {
    uuid?: true
    orderUuid?: true
    amount?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    uuid: string
    orderUuid: string
    amount: Decimal
    status: $Enums.PaymentStatus
    createdAt: Date
    createdBy: string
    updatedAt: Date
    updatedBy: string
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    orderUuid?: boolean
    amount?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    orderUuid?: boolean
    amount?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectScalar = {
    uuid?: boolean
    orderUuid?: boolean
    amount?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      orderUuid: string
      amount: Prisma.Decimal
      status: $Enums.PaymentStatus
      createdAt: Date
      createdBy: string
      updatedAt: Date
      updatedBy: string
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const paymentWithUuidOnly = await prisma.payment.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {PaymentCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `uuid`
     * const paymentWithUuidOnly = await prisma.payment.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */ 
  interface PaymentFieldRefs {
    readonly uuid: FieldRef<"Payment", 'String'>
    readonly orderUuid: FieldRef<"Payment", 'String'>
    readonly amount: FieldRef<"Payment", 'Decimal'>
    readonly status: FieldRef<"Payment", 'PaymentStatus'>
    readonly createdAt: FieldRef<"Payment", 'DateTime'>
    readonly createdBy: FieldRef<"Payment", 'String'>
    readonly updatedAt: FieldRef<"Payment", 'DateTime'>
    readonly updatedBy: FieldRef<"Payment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment createManyAndReturn
   */
  export type PaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model OrderLine
   */

  export type AggregateOrderLine = {
    _count: OrderLineCountAggregateOutputType | null
    _avg: OrderLineAvgAggregateOutputType | null
    _sum: OrderLineSumAggregateOutputType | null
    _min: OrderLineMinAggregateOutputType | null
    _max: OrderLineMaxAggregateOutputType | null
  }

  export type OrderLineAvgAggregateOutputType = {
    priceWithoutTax: Decimal | null
    percentTaxRate: Decimal | null
    expectedQuantity: number | null
    preparedQuantity: number | null
  }

  export type OrderLineSumAggregateOutputType = {
    priceWithoutTax: Decimal | null
    percentTaxRate: Decimal | null
    expectedQuantity: number | null
    preparedQuantity: number | null
  }

  export type OrderLineMinAggregateOutputType = {
    productUuid: string | null
    orderUuid: string | null
    priceWithoutTax: Decimal | null
    percentTaxRate: Decimal | null
    expectedQuantity: number | null
    preparedQuantity: number | null
    promotionUuid: string | null
    status: $Enums.OrderLineStatus | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type OrderLineMaxAggregateOutputType = {
    productUuid: string | null
    orderUuid: string | null
    priceWithoutTax: Decimal | null
    percentTaxRate: Decimal | null
    expectedQuantity: number | null
    preparedQuantity: number | null
    promotionUuid: string | null
    status: $Enums.OrderLineStatus | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type OrderLineCountAggregateOutputType = {
    productUuid: number
    orderUuid: number
    priceWithoutTax: number
    percentTaxRate: number
    expectedQuantity: number
    preparedQuantity: number
    promotionUuid: number
    status: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type OrderLineAvgAggregateInputType = {
    priceWithoutTax?: true
    percentTaxRate?: true
    expectedQuantity?: true
    preparedQuantity?: true
  }

  export type OrderLineSumAggregateInputType = {
    priceWithoutTax?: true
    percentTaxRate?: true
    expectedQuantity?: true
    preparedQuantity?: true
  }

  export type OrderLineMinAggregateInputType = {
    productUuid?: true
    orderUuid?: true
    priceWithoutTax?: true
    percentTaxRate?: true
    expectedQuantity?: true
    preparedQuantity?: true
    promotionUuid?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type OrderLineMaxAggregateInputType = {
    productUuid?: true
    orderUuid?: true
    priceWithoutTax?: true
    percentTaxRate?: true
    expectedQuantity?: true
    preparedQuantity?: true
    promotionUuid?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type OrderLineCountAggregateInputType = {
    productUuid?: true
    orderUuid?: true
    priceWithoutTax?: true
    percentTaxRate?: true
    expectedQuantity?: true
    preparedQuantity?: true
    promotionUuid?: true
    status?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type OrderLineAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderLine to aggregate.
     */
    where?: OrderLineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderLines to fetch.
     */
    orderBy?: OrderLineOrderByWithRelationInput | OrderLineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderLineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderLines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderLines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderLines
    **/
    _count?: true | OrderLineCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderLineAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderLineSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderLineMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderLineMaxAggregateInputType
  }

  export type GetOrderLineAggregateType<T extends OrderLineAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderLine]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderLine[P]>
      : GetScalarType<T[P], AggregateOrderLine[P]>
  }




  export type OrderLineGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderLineWhereInput
    orderBy?: OrderLineOrderByWithAggregationInput | OrderLineOrderByWithAggregationInput[]
    by: OrderLineScalarFieldEnum[] | OrderLineScalarFieldEnum
    having?: OrderLineScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderLineCountAggregateInputType | true
    _avg?: OrderLineAvgAggregateInputType
    _sum?: OrderLineSumAggregateInputType
    _min?: OrderLineMinAggregateInputType
    _max?: OrderLineMaxAggregateInputType
  }

  export type OrderLineGroupByOutputType = {
    productUuid: string
    orderUuid: string
    priceWithoutTax: Decimal
    percentTaxRate: Decimal
    expectedQuantity: number
    preparedQuantity: number
    promotionUuid: string | null
    status: $Enums.OrderLineStatus
    createdAt: Date
    createdBy: string
    updatedAt: Date
    updatedBy: string
    _count: OrderLineCountAggregateOutputType | null
    _avg: OrderLineAvgAggregateOutputType | null
    _sum: OrderLineSumAggregateOutputType | null
    _min: OrderLineMinAggregateOutputType | null
    _max: OrderLineMaxAggregateOutputType | null
  }

  type GetOrderLineGroupByPayload<T extends OrderLineGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderLineGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderLineGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderLineGroupByOutputType[P]>
            : GetScalarType<T[P], OrderLineGroupByOutputType[P]>
        }
      >
    >


  export type OrderLineSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    productUuid?: boolean
    orderUuid?: boolean
    priceWithoutTax?: boolean
    percentTaxRate?: boolean
    expectedQuantity?: boolean
    preparedQuantity?: boolean
    promotionUuid?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
    promotion?: boolean | OrderLine$promotionArgs<ExtArgs>
  }, ExtArgs["result"]["orderLine"]>

  export type OrderLineSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    productUuid?: boolean
    orderUuid?: boolean
    priceWithoutTax?: boolean
    percentTaxRate?: boolean
    expectedQuantity?: boolean
    preparedQuantity?: boolean
    promotionUuid?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
    promotion?: boolean | OrderLine$promotionArgs<ExtArgs>
  }, ExtArgs["result"]["orderLine"]>

  export type OrderLineSelectScalar = {
    productUuid?: boolean
    orderUuid?: boolean
    priceWithoutTax?: boolean
    percentTaxRate?: boolean
    expectedQuantity?: boolean
    preparedQuantity?: boolean
    promotionUuid?: boolean
    status?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type OrderLineInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
    promotion?: boolean | OrderLine$promotionArgs<ExtArgs>
  }
  export type OrderLineIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
    promotion?: boolean | OrderLine$promotionArgs<ExtArgs>
  }

  export type $OrderLinePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderLine"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      order: Prisma.$OrderPayload<ExtArgs>
      promotion: Prisma.$PromotionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      productUuid: string
      orderUuid: string
      priceWithoutTax: Prisma.Decimal
      percentTaxRate: Prisma.Decimal
      expectedQuantity: number
      preparedQuantity: number
      promotionUuid: string | null
      status: $Enums.OrderLineStatus
      createdAt: Date
      createdBy: string
      updatedAt: Date
      updatedBy: string
    }, ExtArgs["result"]["orderLine"]>
    composites: {}
  }

  type OrderLineGetPayload<S extends boolean | null | undefined | OrderLineDefaultArgs> = $Result.GetResult<Prisma.$OrderLinePayload, S>

  type OrderLineCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrderLineFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrderLineCountAggregateInputType | true
    }

  export interface OrderLineDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderLine'], meta: { name: 'OrderLine' } }
    /**
     * Find zero or one OrderLine that matches the filter.
     * @param {OrderLineFindUniqueArgs} args - Arguments to find a OrderLine
     * @example
     * // Get one OrderLine
     * const orderLine = await prisma.orderLine.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderLineFindUniqueArgs>(args: SelectSubset<T, OrderLineFindUniqueArgs<ExtArgs>>): Prisma__OrderLineClient<$Result.GetResult<Prisma.$OrderLinePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one OrderLine that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrderLineFindUniqueOrThrowArgs} args - Arguments to find a OrderLine
     * @example
     * // Get one OrderLine
     * const orderLine = await prisma.orderLine.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderLineFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderLineFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderLineClient<$Result.GetResult<Prisma.$OrderLinePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first OrderLine that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderLineFindFirstArgs} args - Arguments to find a OrderLine
     * @example
     * // Get one OrderLine
     * const orderLine = await prisma.orderLine.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderLineFindFirstArgs>(args?: SelectSubset<T, OrderLineFindFirstArgs<ExtArgs>>): Prisma__OrderLineClient<$Result.GetResult<Prisma.$OrderLinePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first OrderLine that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderLineFindFirstOrThrowArgs} args - Arguments to find a OrderLine
     * @example
     * // Get one OrderLine
     * const orderLine = await prisma.orderLine.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderLineFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderLineFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderLineClient<$Result.GetResult<Prisma.$OrderLinePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more OrderLines that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderLineFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderLines
     * const orderLines = await prisma.orderLine.findMany()
     * 
     * // Get first 10 OrderLines
     * const orderLines = await prisma.orderLine.findMany({ take: 10 })
     * 
     * // Only select the `productUuid`
     * const orderLineWithProductUuidOnly = await prisma.orderLine.findMany({ select: { productUuid: true } })
     * 
     */
    findMany<T extends OrderLineFindManyArgs>(args?: SelectSubset<T, OrderLineFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderLinePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a OrderLine.
     * @param {OrderLineCreateArgs} args - Arguments to create a OrderLine.
     * @example
     * // Create one OrderLine
     * const OrderLine = await prisma.orderLine.create({
     *   data: {
     *     // ... data to create a OrderLine
     *   }
     * })
     * 
     */
    create<T extends OrderLineCreateArgs>(args: SelectSubset<T, OrderLineCreateArgs<ExtArgs>>): Prisma__OrderLineClient<$Result.GetResult<Prisma.$OrderLinePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many OrderLines.
     * @param {OrderLineCreateManyArgs} args - Arguments to create many OrderLines.
     * @example
     * // Create many OrderLines
     * const orderLine = await prisma.orderLine.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderLineCreateManyArgs>(args?: SelectSubset<T, OrderLineCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderLines and returns the data saved in the database.
     * @param {OrderLineCreateManyAndReturnArgs} args - Arguments to create many OrderLines.
     * @example
     * // Create many OrderLines
     * const orderLine = await prisma.orderLine.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderLines and only return the `productUuid`
     * const orderLineWithProductUuidOnly = await prisma.orderLine.createManyAndReturn({ 
     *   select: { productUuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderLineCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderLineCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderLinePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a OrderLine.
     * @param {OrderLineDeleteArgs} args - Arguments to delete one OrderLine.
     * @example
     * // Delete one OrderLine
     * const OrderLine = await prisma.orderLine.delete({
     *   where: {
     *     // ... filter to delete one OrderLine
     *   }
     * })
     * 
     */
    delete<T extends OrderLineDeleteArgs>(args: SelectSubset<T, OrderLineDeleteArgs<ExtArgs>>): Prisma__OrderLineClient<$Result.GetResult<Prisma.$OrderLinePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one OrderLine.
     * @param {OrderLineUpdateArgs} args - Arguments to update one OrderLine.
     * @example
     * // Update one OrderLine
     * const orderLine = await prisma.orderLine.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderLineUpdateArgs>(args: SelectSubset<T, OrderLineUpdateArgs<ExtArgs>>): Prisma__OrderLineClient<$Result.GetResult<Prisma.$OrderLinePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more OrderLines.
     * @param {OrderLineDeleteManyArgs} args - Arguments to filter OrderLines to delete.
     * @example
     * // Delete a few OrderLines
     * const { count } = await prisma.orderLine.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderLineDeleteManyArgs>(args?: SelectSubset<T, OrderLineDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderLines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderLineUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderLines
     * const orderLine = await prisma.orderLine.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderLineUpdateManyArgs>(args: SelectSubset<T, OrderLineUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OrderLine.
     * @param {OrderLineUpsertArgs} args - Arguments to update or create a OrderLine.
     * @example
     * // Update or create a OrderLine
     * const orderLine = await prisma.orderLine.upsert({
     *   create: {
     *     // ... data to create a OrderLine
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderLine we want to update
     *   }
     * })
     */
    upsert<T extends OrderLineUpsertArgs>(args: SelectSubset<T, OrderLineUpsertArgs<ExtArgs>>): Prisma__OrderLineClient<$Result.GetResult<Prisma.$OrderLinePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of OrderLines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderLineCountArgs} args - Arguments to filter OrderLines to count.
     * @example
     * // Count the number of OrderLines
     * const count = await prisma.orderLine.count({
     *   where: {
     *     // ... the filter for the OrderLines we want to count
     *   }
     * })
    **/
    count<T extends OrderLineCountArgs>(
      args?: Subset<T, OrderLineCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderLineCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderLine.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderLineAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderLineAggregateArgs>(args: Subset<T, OrderLineAggregateArgs>): Prisma.PrismaPromise<GetOrderLineAggregateType<T>>

    /**
     * Group by OrderLine.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderLineGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderLineGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderLineGroupByArgs['orderBy'] }
        : { orderBy?: OrderLineGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderLineGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderLineGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderLine model
   */
  readonly fields: OrderLineFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderLine.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderLineClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    promotion<T extends OrderLine$promotionArgs<ExtArgs> = {}>(args?: Subset<T, OrderLine$promotionArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderLine model
   */ 
  interface OrderLineFieldRefs {
    readonly productUuid: FieldRef<"OrderLine", 'String'>
    readonly orderUuid: FieldRef<"OrderLine", 'String'>
    readonly priceWithoutTax: FieldRef<"OrderLine", 'Decimal'>
    readonly percentTaxRate: FieldRef<"OrderLine", 'Decimal'>
    readonly expectedQuantity: FieldRef<"OrderLine", 'Int'>
    readonly preparedQuantity: FieldRef<"OrderLine", 'Int'>
    readonly promotionUuid: FieldRef<"OrderLine", 'String'>
    readonly status: FieldRef<"OrderLine", 'OrderLineStatus'>
    readonly createdAt: FieldRef<"OrderLine", 'DateTime'>
    readonly createdBy: FieldRef<"OrderLine", 'String'>
    readonly updatedAt: FieldRef<"OrderLine", 'DateTime'>
    readonly updatedBy: FieldRef<"OrderLine", 'String'>
  }
    

  // Custom InputTypes
  /**
   * OrderLine findUnique
   */
  export type OrderLineFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineInclude<ExtArgs> | null
    /**
     * Filter, which OrderLine to fetch.
     */
    where: OrderLineWhereUniqueInput
  }

  /**
   * OrderLine findUniqueOrThrow
   */
  export type OrderLineFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineInclude<ExtArgs> | null
    /**
     * Filter, which OrderLine to fetch.
     */
    where: OrderLineWhereUniqueInput
  }

  /**
   * OrderLine findFirst
   */
  export type OrderLineFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineInclude<ExtArgs> | null
    /**
     * Filter, which OrderLine to fetch.
     */
    where?: OrderLineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderLines to fetch.
     */
    orderBy?: OrderLineOrderByWithRelationInput | OrderLineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderLines.
     */
    cursor?: OrderLineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderLines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderLines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderLines.
     */
    distinct?: OrderLineScalarFieldEnum | OrderLineScalarFieldEnum[]
  }

  /**
   * OrderLine findFirstOrThrow
   */
  export type OrderLineFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineInclude<ExtArgs> | null
    /**
     * Filter, which OrderLine to fetch.
     */
    where?: OrderLineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderLines to fetch.
     */
    orderBy?: OrderLineOrderByWithRelationInput | OrderLineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderLines.
     */
    cursor?: OrderLineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderLines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderLines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderLines.
     */
    distinct?: OrderLineScalarFieldEnum | OrderLineScalarFieldEnum[]
  }

  /**
   * OrderLine findMany
   */
  export type OrderLineFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineInclude<ExtArgs> | null
    /**
     * Filter, which OrderLines to fetch.
     */
    where?: OrderLineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderLines to fetch.
     */
    orderBy?: OrderLineOrderByWithRelationInput | OrderLineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderLines.
     */
    cursor?: OrderLineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderLines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderLines.
     */
    skip?: number
    distinct?: OrderLineScalarFieldEnum | OrderLineScalarFieldEnum[]
  }

  /**
   * OrderLine create
   */
  export type OrderLineCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderLine.
     */
    data: XOR<OrderLineCreateInput, OrderLineUncheckedCreateInput>
  }

  /**
   * OrderLine createMany
   */
  export type OrderLineCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderLines.
     */
    data: OrderLineCreateManyInput | OrderLineCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderLine createManyAndReturn
   */
  export type OrderLineCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many OrderLines.
     */
    data: OrderLineCreateManyInput | OrderLineCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderLine update
   */
  export type OrderLineUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderLine.
     */
    data: XOR<OrderLineUpdateInput, OrderLineUncheckedUpdateInput>
    /**
     * Choose, which OrderLine to update.
     */
    where: OrderLineWhereUniqueInput
  }

  /**
   * OrderLine updateMany
   */
  export type OrderLineUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderLines.
     */
    data: XOR<OrderLineUpdateManyMutationInput, OrderLineUncheckedUpdateManyInput>
    /**
     * Filter which OrderLines to update
     */
    where?: OrderLineWhereInput
  }

  /**
   * OrderLine upsert
   */
  export type OrderLineUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderLine to update in case it exists.
     */
    where: OrderLineWhereUniqueInput
    /**
     * In case the OrderLine found by the `where` argument doesn't exist, create a new OrderLine with this data.
     */
    create: XOR<OrderLineCreateInput, OrderLineUncheckedCreateInput>
    /**
     * In case the OrderLine was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderLineUpdateInput, OrderLineUncheckedUpdateInput>
  }

  /**
   * OrderLine delete
   */
  export type OrderLineDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineInclude<ExtArgs> | null
    /**
     * Filter which OrderLine to delete.
     */
    where: OrderLineWhereUniqueInput
  }

  /**
   * OrderLine deleteMany
   */
  export type OrderLineDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderLines to delete
     */
    where?: OrderLineWhereInput
  }

  /**
   * OrderLine.promotion
   */
  export type OrderLine$promotionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
  }

  /**
   * OrderLine without action
   */
  export type OrderLineDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineInclude<ExtArgs> | null
  }


  /**
   * Model Media
   */

  export type AggregateMedia = {
    _count: MediaCountAggregateOutputType | null
    _min: MediaMinAggregateOutputType | null
    _max: MediaMaxAggregateOutputType | null
  }

  export type MediaMinAggregateOutputType = {
    uuid: string | null
    type: $Enums.MediaType | null
    name: string | null
  }

  export type MediaMaxAggregateOutputType = {
    uuid: string | null
    type: $Enums.MediaType | null
    name: string | null
  }

  export type MediaCountAggregateOutputType = {
    uuid: number
    data: number
    type: number
    name: number
    _all: number
  }


  export type MediaMinAggregateInputType = {
    uuid?: true
    type?: true
    name?: true
  }

  export type MediaMaxAggregateInputType = {
    uuid?: true
    type?: true
    name?: true
  }

  export type MediaCountAggregateInputType = {
    uuid?: true
    data?: true
    type?: true
    name?: true
    _all?: true
  }

  export type MediaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Media to aggregate.
     */
    where?: MediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Media to fetch.
     */
    orderBy?: MediaOrderByWithRelationInput | MediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Media from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Media.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Media
    **/
    _count?: true | MediaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MediaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MediaMaxAggregateInputType
  }

  export type GetMediaAggregateType<T extends MediaAggregateArgs> = {
        [P in keyof T & keyof AggregateMedia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMedia[P]>
      : GetScalarType<T[P], AggregateMedia[P]>
  }




  export type MediaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MediaWhereInput
    orderBy?: MediaOrderByWithAggregationInput | MediaOrderByWithAggregationInput[]
    by: MediaScalarFieldEnum[] | MediaScalarFieldEnum
    having?: MediaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MediaCountAggregateInputType | true
    _min?: MediaMinAggregateInputType
    _max?: MediaMaxAggregateInputType
  }

  export type MediaGroupByOutputType = {
    uuid: string
    data: JsonValue
    type: $Enums.MediaType
    name: string | null
    _count: MediaCountAggregateOutputType | null
    _min: MediaMinAggregateOutputType | null
    _max: MediaMaxAggregateOutputType | null
  }

  type GetMediaGroupByPayload<T extends MediaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MediaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MediaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MediaGroupByOutputType[P]>
            : GetScalarType<T[P], MediaGroupByOutputType[P]>
        }
      >
    >


  export type MediaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    data?: boolean
    type?: boolean
    name?: boolean
    deliveryOrder?: boolean | Media$deliveryOrderArgs<ExtArgs>
    billingOrder?: boolean | Media$billingOrderArgs<ExtArgs>
    phoneOrder?: boolean | Media$phoneOrderArgs<ExtArgs>
    emailOrder?: boolean | Media$emailOrderArgs<ExtArgs>
    deliverySenderAddress?: boolean | Media$deliverySenderAddressArgs<ExtArgs>
    deliverySenderPhone?: boolean | Media$deliverySenderPhoneArgs<ExtArgs>
    deliverySenderEmail?: boolean | Media$deliverySenderEmailArgs<ExtArgs>
    deliveryReceiverAddress?: boolean | Media$deliveryReceiverAddressArgs<ExtArgs>
    deliveryReceiverPhone?: boolean | Media$deliveryReceiverPhoneArgs<ExtArgs>
    deliveryReceiverEmail?: boolean | Media$deliveryReceiverEmailArgs<ExtArgs>
    customerAddress?: boolean | Media$customerAddressArgs<ExtArgs>
    customerPhone?: boolean | Media$customerPhoneArgs<ExtArgs>
    _count?: boolean | MediaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["media"]>

  export type MediaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    data?: boolean
    type?: boolean
    name?: boolean
  }, ExtArgs["result"]["media"]>

  export type MediaSelectScalar = {
    uuid?: boolean
    data?: boolean
    type?: boolean
    name?: boolean
  }

  export type MediaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveryOrder?: boolean | Media$deliveryOrderArgs<ExtArgs>
    billingOrder?: boolean | Media$billingOrderArgs<ExtArgs>
    phoneOrder?: boolean | Media$phoneOrderArgs<ExtArgs>
    emailOrder?: boolean | Media$emailOrderArgs<ExtArgs>
    deliverySenderAddress?: boolean | Media$deliverySenderAddressArgs<ExtArgs>
    deliverySenderPhone?: boolean | Media$deliverySenderPhoneArgs<ExtArgs>
    deliverySenderEmail?: boolean | Media$deliverySenderEmailArgs<ExtArgs>
    deliveryReceiverAddress?: boolean | Media$deliveryReceiverAddressArgs<ExtArgs>
    deliveryReceiverPhone?: boolean | Media$deliveryReceiverPhoneArgs<ExtArgs>
    deliveryReceiverEmail?: boolean | Media$deliveryReceiverEmailArgs<ExtArgs>
    customerAddress?: boolean | Media$customerAddressArgs<ExtArgs>
    customerPhone?: boolean | Media$customerPhoneArgs<ExtArgs>
    _count?: boolean | MediaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MediaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $MediaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Media"
    objects: {
      deliveryOrder: Prisma.$OrderPayload<ExtArgs>[]
      billingOrder: Prisma.$OrderPayload<ExtArgs>[]
      phoneOrder: Prisma.$OrderPayload<ExtArgs>[]
      emailOrder: Prisma.$OrderPayload<ExtArgs>[]
      deliverySenderAddress: Prisma.$DeliveryPayload<ExtArgs>[]
      deliverySenderPhone: Prisma.$DeliveryPayload<ExtArgs>[]
      deliverySenderEmail: Prisma.$DeliveryPayload<ExtArgs>[]
      deliveryReceiverAddress: Prisma.$DeliveryPayload<ExtArgs>[]
      deliveryReceiverPhone: Prisma.$DeliveryPayload<ExtArgs>[]
      deliveryReceiverEmail: Prisma.$DeliveryPayload<ExtArgs>[]
      customerAddress: Prisma.$CustomerPayload<ExtArgs>[]
      customerPhone: Prisma.$CustomerPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      data: Prisma.JsonValue
      type: $Enums.MediaType
      name: string | null
    }, ExtArgs["result"]["media"]>
    composites: {}
  }

  type MediaGetPayload<S extends boolean | null | undefined | MediaDefaultArgs> = $Result.GetResult<Prisma.$MediaPayload, S>

  type MediaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MediaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MediaCountAggregateInputType | true
    }

  export interface MediaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Media'], meta: { name: 'Media' } }
    /**
     * Find zero or one Media that matches the filter.
     * @param {MediaFindUniqueArgs} args - Arguments to find a Media
     * @example
     * // Get one Media
     * const media = await prisma.media.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MediaFindUniqueArgs>(args: SelectSubset<T, MediaFindUniqueArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Media that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MediaFindUniqueOrThrowArgs} args - Arguments to find a Media
     * @example
     * // Get one Media
     * const media = await prisma.media.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MediaFindUniqueOrThrowArgs>(args: SelectSubset<T, MediaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Media that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MediaFindFirstArgs} args - Arguments to find a Media
     * @example
     * // Get one Media
     * const media = await prisma.media.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MediaFindFirstArgs>(args?: SelectSubset<T, MediaFindFirstArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Media that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MediaFindFirstOrThrowArgs} args - Arguments to find a Media
     * @example
     * // Get one Media
     * const media = await prisma.media.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MediaFindFirstOrThrowArgs>(args?: SelectSubset<T, MediaFindFirstOrThrowArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Media that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MediaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Media
     * const media = await prisma.media.findMany()
     * 
     * // Get first 10 Media
     * const media = await prisma.media.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const mediaWithUuidOnly = await prisma.media.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends MediaFindManyArgs>(args?: SelectSubset<T, MediaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Media.
     * @param {MediaCreateArgs} args - Arguments to create a Media.
     * @example
     * // Create one Media
     * const Media = await prisma.media.create({
     *   data: {
     *     // ... data to create a Media
     *   }
     * })
     * 
     */
    create<T extends MediaCreateArgs>(args: SelectSubset<T, MediaCreateArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Media.
     * @param {MediaCreateManyArgs} args - Arguments to create many Media.
     * @example
     * // Create many Media
     * const media = await prisma.media.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MediaCreateManyArgs>(args?: SelectSubset<T, MediaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Media and returns the data saved in the database.
     * @param {MediaCreateManyAndReturnArgs} args - Arguments to create many Media.
     * @example
     * // Create many Media
     * const media = await prisma.media.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Media and only return the `uuid`
     * const mediaWithUuidOnly = await prisma.media.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MediaCreateManyAndReturnArgs>(args?: SelectSubset<T, MediaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Media.
     * @param {MediaDeleteArgs} args - Arguments to delete one Media.
     * @example
     * // Delete one Media
     * const Media = await prisma.media.delete({
     *   where: {
     *     // ... filter to delete one Media
     *   }
     * })
     * 
     */
    delete<T extends MediaDeleteArgs>(args: SelectSubset<T, MediaDeleteArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Media.
     * @param {MediaUpdateArgs} args - Arguments to update one Media.
     * @example
     * // Update one Media
     * const media = await prisma.media.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MediaUpdateArgs>(args: SelectSubset<T, MediaUpdateArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Media.
     * @param {MediaDeleteManyArgs} args - Arguments to filter Media to delete.
     * @example
     * // Delete a few Media
     * const { count } = await prisma.media.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MediaDeleteManyArgs>(args?: SelectSubset<T, MediaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MediaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Media
     * const media = await prisma.media.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MediaUpdateManyArgs>(args: SelectSubset<T, MediaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Media.
     * @param {MediaUpsertArgs} args - Arguments to update or create a Media.
     * @example
     * // Update or create a Media
     * const media = await prisma.media.upsert({
     *   create: {
     *     // ... data to create a Media
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Media we want to update
     *   }
     * })
     */
    upsert<T extends MediaUpsertArgs>(args: SelectSubset<T, MediaUpsertArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MediaCountArgs} args - Arguments to filter Media to count.
     * @example
     * // Count the number of Media
     * const count = await prisma.media.count({
     *   where: {
     *     // ... the filter for the Media we want to count
     *   }
     * })
    **/
    count<T extends MediaCountArgs>(
      args?: Subset<T, MediaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MediaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MediaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MediaAggregateArgs>(args: Subset<T, MediaAggregateArgs>): Prisma.PrismaPromise<GetMediaAggregateType<T>>

    /**
     * Group by Media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MediaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MediaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MediaGroupByArgs['orderBy'] }
        : { orderBy?: MediaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MediaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMediaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Media model
   */
  readonly fields: MediaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Media.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MediaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    deliveryOrder<T extends Media$deliveryOrderArgs<ExtArgs> = {}>(args?: Subset<T, Media$deliveryOrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    billingOrder<T extends Media$billingOrderArgs<ExtArgs> = {}>(args?: Subset<T, Media$billingOrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    phoneOrder<T extends Media$phoneOrderArgs<ExtArgs> = {}>(args?: Subset<T, Media$phoneOrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    emailOrder<T extends Media$emailOrderArgs<ExtArgs> = {}>(args?: Subset<T, Media$emailOrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    deliverySenderAddress<T extends Media$deliverySenderAddressArgs<ExtArgs> = {}>(args?: Subset<T, Media$deliverySenderAddressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "findMany"> | Null>
    deliverySenderPhone<T extends Media$deliverySenderPhoneArgs<ExtArgs> = {}>(args?: Subset<T, Media$deliverySenderPhoneArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "findMany"> | Null>
    deliverySenderEmail<T extends Media$deliverySenderEmailArgs<ExtArgs> = {}>(args?: Subset<T, Media$deliverySenderEmailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "findMany"> | Null>
    deliveryReceiverAddress<T extends Media$deliveryReceiverAddressArgs<ExtArgs> = {}>(args?: Subset<T, Media$deliveryReceiverAddressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "findMany"> | Null>
    deliveryReceiverPhone<T extends Media$deliveryReceiverPhoneArgs<ExtArgs> = {}>(args?: Subset<T, Media$deliveryReceiverPhoneArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "findMany"> | Null>
    deliveryReceiverEmail<T extends Media$deliveryReceiverEmailArgs<ExtArgs> = {}>(args?: Subset<T, Media$deliveryReceiverEmailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "findMany"> | Null>
    customerAddress<T extends Media$customerAddressArgs<ExtArgs> = {}>(args?: Subset<T, Media$customerAddressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany"> | Null>
    customerPhone<T extends Media$customerPhoneArgs<ExtArgs> = {}>(args?: Subset<T, Media$customerPhoneArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Media model
   */ 
  interface MediaFieldRefs {
    readonly uuid: FieldRef<"Media", 'String'>
    readonly data: FieldRef<"Media", 'Json'>
    readonly type: FieldRef<"Media", 'MediaType'>
    readonly name: FieldRef<"Media", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Media findUnique
   */
  export type MediaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Media
     */
    select?: MediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MediaInclude<ExtArgs> | null
    /**
     * Filter, which Media to fetch.
     */
    where: MediaWhereUniqueInput
  }

  /**
   * Media findUniqueOrThrow
   */
  export type MediaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Media
     */
    select?: MediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MediaInclude<ExtArgs> | null
    /**
     * Filter, which Media to fetch.
     */
    where: MediaWhereUniqueInput
  }

  /**
   * Media findFirst
   */
  export type MediaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Media
     */
    select?: MediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MediaInclude<ExtArgs> | null
    /**
     * Filter, which Media to fetch.
     */
    where?: MediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Media to fetch.
     */
    orderBy?: MediaOrderByWithRelationInput | MediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Media.
     */
    cursor?: MediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Media from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Media.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Media.
     */
    distinct?: MediaScalarFieldEnum | MediaScalarFieldEnum[]
  }

  /**
   * Media findFirstOrThrow
   */
  export type MediaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Media
     */
    select?: MediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MediaInclude<ExtArgs> | null
    /**
     * Filter, which Media to fetch.
     */
    where?: MediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Media to fetch.
     */
    orderBy?: MediaOrderByWithRelationInput | MediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Media.
     */
    cursor?: MediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Media from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Media.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Media.
     */
    distinct?: MediaScalarFieldEnum | MediaScalarFieldEnum[]
  }

  /**
   * Media findMany
   */
  export type MediaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Media
     */
    select?: MediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MediaInclude<ExtArgs> | null
    /**
     * Filter, which Media to fetch.
     */
    where?: MediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Media to fetch.
     */
    orderBy?: MediaOrderByWithRelationInput | MediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Media.
     */
    cursor?: MediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Media from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Media.
     */
    skip?: number
    distinct?: MediaScalarFieldEnum | MediaScalarFieldEnum[]
  }

  /**
   * Media create
   */
  export type MediaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Media
     */
    select?: MediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MediaInclude<ExtArgs> | null
    /**
     * The data needed to create a Media.
     */
    data: XOR<MediaCreateInput, MediaUncheckedCreateInput>
  }

  /**
   * Media createMany
   */
  export type MediaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Media.
     */
    data: MediaCreateManyInput | MediaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Media createManyAndReturn
   */
  export type MediaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Media
     */
    select?: MediaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Media.
     */
    data: MediaCreateManyInput | MediaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Media update
   */
  export type MediaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Media
     */
    select?: MediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MediaInclude<ExtArgs> | null
    /**
     * The data needed to update a Media.
     */
    data: XOR<MediaUpdateInput, MediaUncheckedUpdateInput>
    /**
     * Choose, which Media to update.
     */
    where: MediaWhereUniqueInput
  }

  /**
   * Media updateMany
   */
  export type MediaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Media.
     */
    data: XOR<MediaUpdateManyMutationInput, MediaUncheckedUpdateManyInput>
    /**
     * Filter which Media to update
     */
    where?: MediaWhereInput
  }

  /**
   * Media upsert
   */
  export type MediaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Media
     */
    select?: MediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MediaInclude<ExtArgs> | null
    /**
     * The filter to search for the Media to update in case it exists.
     */
    where: MediaWhereUniqueInput
    /**
     * In case the Media found by the `where` argument doesn't exist, create a new Media with this data.
     */
    create: XOR<MediaCreateInput, MediaUncheckedCreateInput>
    /**
     * In case the Media was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MediaUpdateInput, MediaUncheckedUpdateInput>
  }

  /**
   * Media delete
   */
  export type MediaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Media
     */
    select?: MediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MediaInclude<ExtArgs> | null
    /**
     * Filter which Media to delete.
     */
    where: MediaWhereUniqueInput
  }

  /**
   * Media deleteMany
   */
  export type MediaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Media to delete
     */
    where?: MediaWhereInput
  }

  /**
   * Media.deliveryOrder
   */
  export type Media$deliveryOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Media.billingOrder
   */
  export type Media$billingOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Media.phoneOrder
   */
  export type Media$phoneOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Media.emailOrder
   */
  export type Media$emailOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Media.deliverySenderAddress
   */
  export type Media$deliverySenderAddressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    where?: DeliveryWhereInput
    orderBy?: DeliveryOrderByWithRelationInput | DeliveryOrderByWithRelationInput[]
    cursor?: DeliveryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryScalarFieldEnum | DeliveryScalarFieldEnum[]
  }

  /**
   * Media.deliverySenderPhone
   */
  export type Media$deliverySenderPhoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    where?: DeliveryWhereInput
    orderBy?: DeliveryOrderByWithRelationInput | DeliveryOrderByWithRelationInput[]
    cursor?: DeliveryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryScalarFieldEnum | DeliveryScalarFieldEnum[]
  }

  /**
   * Media.deliverySenderEmail
   */
  export type Media$deliverySenderEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    where?: DeliveryWhereInput
    orderBy?: DeliveryOrderByWithRelationInput | DeliveryOrderByWithRelationInput[]
    cursor?: DeliveryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryScalarFieldEnum | DeliveryScalarFieldEnum[]
  }

  /**
   * Media.deliveryReceiverAddress
   */
  export type Media$deliveryReceiverAddressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    where?: DeliveryWhereInput
    orderBy?: DeliveryOrderByWithRelationInput | DeliveryOrderByWithRelationInput[]
    cursor?: DeliveryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryScalarFieldEnum | DeliveryScalarFieldEnum[]
  }

  /**
   * Media.deliveryReceiverPhone
   */
  export type Media$deliveryReceiverPhoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    where?: DeliveryWhereInput
    orderBy?: DeliveryOrderByWithRelationInput | DeliveryOrderByWithRelationInput[]
    cursor?: DeliveryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryScalarFieldEnum | DeliveryScalarFieldEnum[]
  }

  /**
   * Media.deliveryReceiverEmail
   */
  export type Media$deliveryReceiverEmailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    where?: DeliveryWhereInput
    orderBy?: DeliveryOrderByWithRelationInput | DeliveryOrderByWithRelationInput[]
    cursor?: DeliveryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryScalarFieldEnum | DeliveryScalarFieldEnum[]
  }

  /**
   * Media.customerAddress
   */
  export type Media$customerAddressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    cursor?: CustomerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Media.customerPhone
   */
  export type Media$customerPhoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    cursor?: CustomerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Media without action
   */
  export type MediaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Media
     */
    select?: MediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MediaInclude<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderAvgAggregateOutputType = {
    idPasserelle: number | null
  }

  export type OrderSumAggregateOutputType = {
    idPasserelle: number | null
  }

  export type OrderMinAggregateOutputType = {
    uuid: string | null
    deliveryAddressUuid: string | null
    billingAddressUuid: string | null
    phoneUuid: string | null
    emailUuid: string | null
    idPasserelle: number | null
    customerUuid: string | null
    customerMessage: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type OrderMaxAggregateOutputType = {
    uuid: string | null
    deliveryAddressUuid: string | null
    billingAddressUuid: string | null
    phoneUuid: string | null
    emailUuid: string | null
    idPasserelle: number | null
    customerUuid: string | null
    customerMessage: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type OrderCountAggregateOutputType = {
    uuid: number
    deliveryAddressUuid: number
    billingAddressUuid: number
    phoneUuid: number
    emailUuid: number
    idPasserelle: number
    customerUuid: number
    customerMessage: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type OrderAvgAggregateInputType = {
    idPasserelle?: true
  }

  export type OrderSumAggregateInputType = {
    idPasserelle?: true
  }

  export type OrderMinAggregateInputType = {
    uuid?: true
    deliveryAddressUuid?: true
    billingAddressUuid?: true
    phoneUuid?: true
    emailUuid?: true
    idPasserelle?: true
    customerUuid?: true
    customerMessage?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type OrderMaxAggregateInputType = {
    uuid?: true
    deliveryAddressUuid?: true
    billingAddressUuid?: true
    phoneUuid?: true
    emailUuid?: true
    idPasserelle?: true
    customerUuid?: true
    customerMessage?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type OrderCountAggregateInputType = {
    uuid?: true
    deliveryAddressUuid?: true
    billingAddressUuid?: true
    phoneUuid?: true
    emailUuid?: true
    idPasserelle?: true
    customerUuid?: true
    customerMessage?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _avg?: OrderAvgAggregateInputType
    _sum?: OrderSumAggregateInputType
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle: number | null
    customerUuid: string | null
    customerMessage: string | null
    createdAt: Date
    createdBy: string
    updatedAt: Date
    updatedBy: string
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    deliveryAddressUuid?: boolean
    billingAddressUuid?: boolean
    phoneUuid?: boolean
    emailUuid?: boolean
    idPasserelle?: boolean
    customerUuid?: boolean
    customerMessage?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    lines?: boolean | Order$linesArgs<ExtArgs>
    deliveryAddress?: boolean | MediaDefaultArgs<ExtArgs>
    billingAddress?: boolean | MediaDefaultArgs<ExtArgs>
    phone?: boolean | MediaDefaultArgs<ExtArgs>
    email?: boolean | MediaDefaultArgs<ExtArgs>
    payment?: boolean | Order$paymentArgs<ExtArgs>
    messages?: boolean | Order$messagesArgs<ExtArgs>
    deliveries?: boolean | Order$deliveriesArgs<ExtArgs>
    customer?: boolean | Order$customerArgs<ExtArgs>
    invoice?: boolean | Order$invoiceArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    deliveryAddressUuid?: boolean
    billingAddressUuid?: boolean
    phoneUuid?: boolean
    emailUuid?: boolean
    idPasserelle?: boolean
    customerUuid?: boolean
    customerMessage?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deliveryAddress?: boolean | MediaDefaultArgs<ExtArgs>
    billingAddress?: boolean | MediaDefaultArgs<ExtArgs>
    phone?: boolean | MediaDefaultArgs<ExtArgs>
    email?: boolean | MediaDefaultArgs<ExtArgs>
    customer?: boolean | Order$customerArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectScalar = {
    uuid?: boolean
    deliveryAddressUuid?: boolean
    billingAddressUuid?: boolean
    phoneUuid?: boolean
    emailUuid?: boolean
    idPasserelle?: boolean
    customerUuid?: boolean
    customerMessage?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lines?: boolean | Order$linesArgs<ExtArgs>
    deliveryAddress?: boolean | MediaDefaultArgs<ExtArgs>
    billingAddress?: boolean | MediaDefaultArgs<ExtArgs>
    phone?: boolean | MediaDefaultArgs<ExtArgs>
    email?: boolean | MediaDefaultArgs<ExtArgs>
    payment?: boolean | Order$paymentArgs<ExtArgs>
    messages?: boolean | Order$messagesArgs<ExtArgs>
    deliveries?: boolean | Order$deliveriesArgs<ExtArgs>
    customer?: boolean | Order$customerArgs<ExtArgs>
    invoice?: boolean | Order$invoiceArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveryAddress?: boolean | MediaDefaultArgs<ExtArgs>
    billingAddress?: boolean | MediaDefaultArgs<ExtArgs>
    phone?: boolean | MediaDefaultArgs<ExtArgs>
    email?: boolean | MediaDefaultArgs<ExtArgs>
    customer?: boolean | Order$customerArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      lines: Prisma.$OrderLinePayload<ExtArgs>[]
      deliveryAddress: Prisma.$MediaPayload<ExtArgs>
      billingAddress: Prisma.$MediaPayload<ExtArgs>
      phone: Prisma.$MediaPayload<ExtArgs>
      email: Prisma.$MediaPayload<ExtArgs>
      payment: Prisma.$PaymentPayload<ExtArgs> | null
      messages: Prisma.$MessagePayload<ExtArgs>[]
      deliveries: Prisma.$DeliveryPayload<ExtArgs>[]
      customer: Prisma.$CustomerPayload<ExtArgs> | null
      invoice: Prisma.$InvoicePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      deliveryAddressUuid: string
      billingAddressUuid: string
      phoneUuid: string
      emailUuid: string
      idPasserelle: number | null
      customerUuid: string | null
      customerMessage: string | null
      createdAt: Date
      createdBy: string
      updatedAt: Date
      updatedBy: string
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const orderWithUuidOnly = await prisma.order.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {OrderCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `uuid`
     * const orderWithUuidOnly = await prisma.order.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    lines<T extends Order$linesArgs<ExtArgs> = {}>(args?: Subset<T, Order$linesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderLinePayload<ExtArgs>, T, "findMany"> | Null>
    deliveryAddress<T extends MediaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MediaDefaultArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    billingAddress<T extends MediaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MediaDefaultArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    phone<T extends MediaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MediaDefaultArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    email<T extends MediaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MediaDefaultArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    payment<T extends Order$paymentArgs<ExtArgs> = {}>(args?: Subset<T, Order$paymentArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    messages<T extends Order$messagesArgs<ExtArgs> = {}>(args?: Subset<T, Order$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany"> | Null>
    deliveries<T extends Order$deliveriesArgs<ExtArgs> = {}>(args?: Subset<T, Order$deliveriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryPayload<ExtArgs>, T, "findMany"> | Null>
    customer<T extends Order$customerArgs<ExtArgs> = {}>(args?: Subset<T, Order$customerArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    invoice<T extends Order$invoiceArgs<ExtArgs> = {}>(args?: Subset<T, Order$invoiceArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */ 
  interface OrderFieldRefs {
    readonly uuid: FieldRef<"Order", 'String'>
    readonly deliveryAddressUuid: FieldRef<"Order", 'String'>
    readonly billingAddressUuid: FieldRef<"Order", 'String'>
    readonly phoneUuid: FieldRef<"Order", 'String'>
    readonly emailUuid: FieldRef<"Order", 'String'>
    readonly idPasserelle: FieldRef<"Order", 'Int'>
    readonly customerUuid: FieldRef<"Order", 'String'>
    readonly customerMessage: FieldRef<"Order", 'String'>
    readonly createdAt: FieldRef<"Order", 'DateTime'>
    readonly createdBy: FieldRef<"Order", 'String'>
    readonly updatedAt: FieldRef<"Order", 'DateTime'>
    readonly updatedBy: FieldRef<"Order", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order createManyAndReturn
   */
  export type OrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
  }

  /**
   * Order.lines
   */
  export type Order$linesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderLine
     */
    select?: OrderLineSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderLineInclude<ExtArgs> | null
    where?: OrderLineWhereInput
    orderBy?: OrderLineOrderByWithRelationInput | OrderLineOrderByWithRelationInput[]
    cursor?: OrderLineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderLineScalarFieldEnum | OrderLineScalarFieldEnum[]
  }

  /**
   * Order.payment
   */
  export type Order$paymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
  }

  /**
   * Order.messages
   */
  export type Order$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Order.deliveries
   */
  export type Order$deliveriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Delivery
     */
    select?: DeliverySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryInclude<ExtArgs> | null
    where?: DeliveryWhereInput
    orderBy?: DeliveryOrderByWithRelationInput | DeliveryOrderByWithRelationInput[]
    cursor?: DeliveryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryScalarFieldEnum | DeliveryScalarFieldEnum[]
  }

  /**
   * Order.customer
   */
  export type Order$customerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
  }

  /**
   * Order.invoice
   */
  export type Order$invoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model Laboratory
   */

  export type AggregateLaboratory = {
    _count: LaboratoryCountAggregateOutputType | null
    _min: LaboratoryMinAggregateOutputType | null
    _max: LaboratoryMaxAggregateOutputType | null
  }

  export type LaboratoryMinAggregateOutputType = {
    uuid: string | null
    name: string | null
    description: string | null
    imageHash: string | null
    miniatureHash: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type LaboratoryMaxAggregateOutputType = {
    uuid: string | null
    name: string | null
    description: string | null
    imageHash: string | null
    miniatureHash: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type LaboratoryCountAggregateOutputType = {
    uuid: number
    name: number
    description: number
    imageHash: number
    miniatureHash: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type LaboratoryMinAggregateInputType = {
    uuid?: true
    name?: true
    description?: true
    imageHash?: true
    miniatureHash?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type LaboratoryMaxAggregateInputType = {
    uuid?: true
    name?: true
    description?: true
    imageHash?: true
    miniatureHash?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type LaboratoryCountAggregateInputType = {
    uuid?: true
    name?: true
    description?: true
    imageHash?: true
    miniatureHash?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type LaboratoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Laboratory to aggregate.
     */
    where?: LaboratoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Laboratories to fetch.
     */
    orderBy?: LaboratoryOrderByWithRelationInput | LaboratoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LaboratoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Laboratories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Laboratories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Laboratories
    **/
    _count?: true | LaboratoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LaboratoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LaboratoryMaxAggregateInputType
  }

  export type GetLaboratoryAggregateType<T extends LaboratoryAggregateArgs> = {
        [P in keyof T & keyof AggregateLaboratory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLaboratory[P]>
      : GetScalarType<T[P], AggregateLaboratory[P]>
  }




  export type LaboratoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LaboratoryWhereInput
    orderBy?: LaboratoryOrderByWithAggregationInput | LaboratoryOrderByWithAggregationInput[]
    by: LaboratoryScalarFieldEnum[] | LaboratoryScalarFieldEnum
    having?: LaboratoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LaboratoryCountAggregateInputType | true
    _min?: LaboratoryMinAggregateInputType
    _max?: LaboratoryMaxAggregateInputType
  }

  export type LaboratoryGroupByOutputType = {
    uuid: string
    name: string
    description: string | null
    imageHash: string | null
    miniatureHash: string | null
    createdAt: Date
    createdBy: string
    updatedAt: Date
    updatedBy: string
    _count: LaboratoryCountAggregateOutputType | null
    _min: LaboratoryMinAggregateOutputType | null
    _max: LaboratoryMaxAggregateOutputType | null
  }

  type GetLaboratoryGroupByPayload<T extends LaboratoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LaboratoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LaboratoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LaboratoryGroupByOutputType[P]>
            : GetScalarType<T[P], LaboratoryGroupByOutputType[P]>
        }
      >
    >


  export type LaboratorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    name?: boolean
    description?: boolean
    imageHash?: boolean
    miniatureHash?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    product?: boolean | Laboratory$productArgs<ExtArgs>
    image?: boolean | Laboratory$imageArgs<ExtArgs>
    miniature?: boolean | Laboratory$miniatureArgs<ExtArgs>
    _count?: boolean | LaboratoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["laboratory"]>

  export type LaboratorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    name?: boolean
    description?: boolean
    imageHash?: boolean
    miniatureHash?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    image?: boolean | Laboratory$imageArgs<ExtArgs>
    miniature?: boolean | Laboratory$miniatureArgs<ExtArgs>
  }, ExtArgs["result"]["laboratory"]>

  export type LaboratorySelectScalar = {
    uuid?: boolean
    name?: boolean
    description?: boolean
    imageHash?: boolean
    miniatureHash?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type LaboratoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | Laboratory$productArgs<ExtArgs>
    image?: boolean | Laboratory$imageArgs<ExtArgs>
    miniature?: boolean | Laboratory$miniatureArgs<ExtArgs>
    _count?: boolean | LaboratoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LaboratoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    image?: boolean | Laboratory$imageArgs<ExtArgs>
    miniature?: boolean | Laboratory$miniatureArgs<ExtArgs>
  }

  export type $LaboratoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Laboratory"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>[]
      image: Prisma.$ImagePayload<ExtArgs> | null
      miniature: Prisma.$ImagePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      name: string
      description: string | null
      imageHash: string | null
      miniatureHash: string | null
      createdAt: Date
      createdBy: string
      updatedAt: Date
      updatedBy: string
    }, ExtArgs["result"]["laboratory"]>
    composites: {}
  }

  type LaboratoryGetPayload<S extends boolean | null | undefined | LaboratoryDefaultArgs> = $Result.GetResult<Prisma.$LaboratoryPayload, S>

  type LaboratoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LaboratoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LaboratoryCountAggregateInputType | true
    }

  export interface LaboratoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Laboratory'], meta: { name: 'Laboratory' } }
    /**
     * Find zero or one Laboratory that matches the filter.
     * @param {LaboratoryFindUniqueArgs} args - Arguments to find a Laboratory
     * @example
     * // Get one Laboratory
     * const laboratory = await prisma.laboratory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LaboratoryFindUniqueArgs>(args: SelectSubset<T, LaboratoryFindUniqueArgs<ExtArgs>>): Prisma__LaboratoryClient<$Result.GetResult<Prisma.$LaboratoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Laboratory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LaboratoryFindUniqueOrThrowArgs} args - Arguments to find a Laboratory
     * @example
     * // Get one Laboratory
     * const laboratory = await prisma.laboratory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LaboratoryFindUniqueOrThrowArgs>(args: SelectSubset<T, LaboratoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LaboratoryClient<$Result.GetResult<Prisma.$LaboratoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Laboratory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratoryFindFirstArgs} args - Arguments to find a Laboratory
     * @example
     * // Get one Laboratory
     * const laboratory = await prisma.laboratory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LaboratoryFindFirstArgs>(args?: SelectSubset<T, LaboratoryFindFirstArgs<ExtArgs>>): Prisma__LaboratoryClient<$Result.GetResult<Prisma.$LaboratoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Laboratory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratoryFindFirstOrThrowArgs} args - Arguments to find a Laboratory
     * @example
     * // Get one Laboratory
     * const laboratory = await prisma.laboratory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LaboratoryFindFirstOrThrowArgs>(args?: SelectSubset<T, LaboratoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__LaboratoryClient<$Result.GetResult<Prisma.$LaboratoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Laboratories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Laboratories
     * const laboratories = await prisma.laboratory.findMany()
     * 
     * // Get first 10 Laboratories
     * const laboratories = await prisma.laboratory.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const laboratoryWithUuidOnly = await prisma.laboratory.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends LaboratoryFindManyArgs>(args?: SelectSubset<T, LaboratoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LaboratoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Laboratory.
     * @param {LaboratoryCreateArgs} args - Arguments to create a Laboratory.
     * @example
     * // Create one Laboratory
     * const Laboratory = await prisma.laboratory.create({
     *   data: {
     *     // ... data to create a Laboratory
     *   }
     * })
     * 
     */
    create<T extends LaboratoryCreateArgs>(args: SelectSubset<T, LaboratoryCreateArgs<ExtArgs>>): Prisma__LaboratoryClient<$Result.GetResult<Prisma.$LaboratoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Laboratories.
     * @param {LaboratoryCreateManyArgs} args - Arguments to create many Laboratories.
     * @example
     * // Create many Laboratories
     * const laboratory = await prisma.laboratory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LaboratoryCreateManyArgs>(args?: SelectSubset<T, LaboratoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Laboratories and returns the data saved in the database.
     * @param {LaboratoryCreateManyAndReturnArgs} args - Arguments to create many Laboratories.
     * @example
     * // Create many Laboratories
     * const laboratory = await prisma.laboratory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Laboratories and only return the `uuid`
     * const laboratoryWithUuidOnly = await prisma.laboratory.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LaboratoryCreateManyAndReturnArgs>(args?: SelectSubset<T, LaboratoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LaboratoryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Laboratory.
     * @param {LaboratoryDeleteArgs} args - Arguments to delete one Laboratory.
     * @example
     * // Delete one Laboratory
     * const Laboratory = await prisma.laboratory.delete({
     *   where: {
     *     // ... filter to delete one Laboratory
     *   }
     * })
     * 
     */
    delete<T extends LaboratoryDeleteArgs>(args: SelectSubset<T, LaboratoryDeleteArgs<ExtArgs>>): Prisma__LaboratoryClient<$Result.GetResult<Prisma.$LaboratoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Laboratory.
     * @param {LaboratoryUpdateArgs} args - Arguments to update one Laboratory.
     * @example
     * // Update one Laboratory
     * const laboratory = await prisma.laboratory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LaboratoryUpdateArgs>(args: SelectSubset<T, LaboratoryUpdateArgs<ExtArgs>>): Prisma__LaboratoryClient<$Result.GetResult<Prisma.$LaboratoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Laboratories.
     * @param {LaboratoryDeleteManyArgs} args - Arguments to filter Laboratories to delete.
     * @example
     * // Delete a few Laboratories
     * const { count } = await prisma.laboratory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LaboratoryDeleteManyArgs>(args?: SelectSubset<T, LaboratoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Laboratories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Laboratories
     * const laboratory = await prisma.laboratory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LaboratoryUpdateManyArgs>(args: SelectSubset<T, LaboratoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Laboratory.
     * @param {LaboratoryUpsertArgs} args - Arguments to update or create a Laboratory.
     * @example
     * // Update or create a Laboratory
     * const laboratory = await prisma.laboratory.upsert({
     *   create: {
     *     // ... data to create a Laboratory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Laboratory we want to update
     *   }
     * })
     */
    upsert<T extends LaboratoryUpsertArgs>(args: SelectSubset<T, LaboratoryUpsertArgs<ExtArgs>>): Prisma__LaboratoryClient<$Result.GetResult<Prisma.$LaboratoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Laboratories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratoryCountArgs} args - Arguments to filter Laboratories to count.
     * @example
     * // Count the number of Laboratories
     * const count = await prisma.laboratory.count({
     *   where: {
     *     // ... the filter for the Laboratories we want to count
     *   }
     * })
    **/
    count<T extends LaboratoryCountArgs>(
      args?: Subset<T, LaboratoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LaboratoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Laboratory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LaboratoryAggregateArgs>(args: Subset<T, LaboratoryAggregateArgs>): Prisma.PrismaPromise<GetLaboratoryAggregateType<T>>

    /**
     * Group by Laboratory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LaboratoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LaboratoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LaboratoryGroupByArgs['orderBy'] }
        : { orderBy?: LaboratoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LaboratoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLaboratoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Laboratory model
   */
  readonly fields: LaboratoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Laboratory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LaboratoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends Laboratory$productArgs<ExtArgs> = {}>(args?: Subset<T, Laboratory$productArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany"> | Null>
    image<T extends Laboratory$imageArgs<ExtArgs> = {}>(args?: Subset<T, Laboratory$imageArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    miniature<T extends Laboratory$miniatureArgs<ExtArgs> = {}>(args?: Subset<T, Laboratory$miniatureArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Laboratory model
   */ 
  interface LaboratoryFieldRefs {
    readonly uuid: FieldRef<"Laboratory", 'String'>
    readonly name: FieldRef<"Laboratory", 'String'>
    readonly description: FieldRef<"Laboratory", 'String'>
    readonly imageHash: FieldRef<"Laboratory", 'String'>
    readonly miniatureHash: FieldRef<"Laboratory", 'String'>
    readonly createdAt: FieldRef<"Laboratory", 'DateTime'>
    readonly createdBy: FieldRef<"Laboratory", 'String'>
    readonly updatedAt: FieldRef<"Laboratory", 'DateTime'>
    readonly updatedBy: FieldRef<"Laboratory", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Laboratory findUnique
   */
  export type LaboratoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryInclude<ExtArgs> | null
    /**
     * Filter, which Laboratory to fetch.
     */
    where: LaboratoryWhereUniqueInput
  }

  /**
   * Laboratory findUniqueOrThrow
   */
  export type LaboratoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryInclude<ExtArgs> | null
    /**
     * Filter, which Laboratory to fetch.
     */
    where: LaboratoryWhereUniqueInput
  }

  /**
   * Laboratory findFirst
   */
  export type LaboratoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryInclude<ExtArgs> | null
    /**
     * Filter, which Laboratory to fetch.
     */
    where?: LaboratoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Laboratories to fetch.
     */
    orderBy?: LaboratoryOrderByWithRelationInput | LaboratoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Laboratories.
     */
    cursor?: LaboratoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Laboratories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Laboratories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Laboratories.
     */
    distinct?: LaboratoryScalarFieldEnum | LaboratoryScalarFieldEnum[]
  }

  /**
   * Laboratory findFirstOrThrow
   */
  export type LaboratoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryInclude<ExtArgs> | null
    /**
     * Filter, which Laboratory to fetch.
     */
    where?: LaboratoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Laboratories to fetch.
     */
    orderBy?: LaboratoryOrderByWithRelationInput | LaboratoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Laboratories.
     */
    cursor?: LaboratoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Laboratories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Laboratories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Laboratories.
     */
    distinct?: LaboratoryScalarFieldEnum | LaboratoryScalarFieldEnum[]
  }

  /**
   * Laboratory findMany
   */
  export type LaboratoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryInclude<ExtArgs> | null
    /**
     * Filter, which Laboratories to fetch.
     */
    where?: LaboratoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Laboratories to fetch.
     */
    orderBy?: LaboratoryOrderByWithRelationInput | LaboratoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Laboratories.
     */
    cursor?: LaboratoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Laboratories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Laboratories.
     */
    skip?: number
    distinct?: LaboratoryScalarFieldEnum | LaboratoryScalarFieldEnum[]
  }

  /**
   * Laboratory create
   */
  export type LaboratoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Laboratory.
     */
    data: XOR<LaboratoryCreateInput, LaboratoryUncheckedCreateInput>
  }

  /**
   * Laboratory createMany
   */
  export type LaboratoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Laboratories.
     */
    data: LaboratoryCreateManyInput | LaboratoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Laboratory createManyAndReturn
   */
  export type LaboratoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Laboratories.
     */
    data: LaboratoryCreateManyInput | LaboratoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Laboratory update
   */
  export type LaboratoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Laboratory.
     */
    data: XOR<LaboratoryUpdateInput, LaboratoryUncheckedUpdateInput>
    /**
     * Choose, which Laboratory to update.
     */
    where: LaboratoryWhereUniqueInput
  }

  /**
   * Laboratory updateMany
   */
  export type LaboratoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Laboratories.
     */
    data: XOR<LaboratoryUpdateManyMutationInput, LaboratoryUncheckedUpdateManyInput>
    /**
     * Filter which Laboratories to update
     */
    where?: LaboratoryWhereInput
  }

  /**
   * Laboratory upsert
   */
  export type LaboratoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Laboratory to update in case it exists.
     */
    where: LaboratoryWhereUniqueInput
    /**
     * In case the Laboratory found by the `where` argument doesn't exist, create a new Laboratory with this data.
     */
    create: XOR<LaboratoryCreateInput, LaboratoryUncheckedCreateInput>
    /**
     * In case the Laboratory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LaboratoryUpdateInput, LaboratoryUncheckedUpdateInput>
  }

  /**
   * Laboratory delete
   */
  export type LaboratoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryInclude<ExtArgs> | null
    /**
     * Filter which Laboratory to delete.
     */
    where: LaboratoryWhereUniqueInput
  }

  /**
   * Laboratory deleteMany
   */
  export type LaboratoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Laboratories to delete
     */
    where?: LaboratoryWhereInput
  }

  /**
   * Laboratory.product
   */
  export type Laboratory$productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Laboratory.image
   */
  export type Laboratory$imageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    where?: ImageWhereInput
  }

  /**
   * Laboratory.miniature
   */
  export type Laboratory$miniatureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    where?: ImageWhereInput
  }

  /**
   * Laboratory without action
   */
  export type LaboratoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Laboratory
     */
    select?: LaboratorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LaboratoryInclude<ExtArgs> | null
  }


  /**
   * Model Message
   */

  export type AggregateMessage = {
    _count: MessageCountAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  export type MessageMinAggregateOutputType = {
    uuid: string | null
    type: $Enums.MessageType | null
    status: $Enums.MessageStatus | null
    orderUuid: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type MessageMaxAggregateOutputType = {
    uuid: string | null
    type: $Enums.MessageType | null
    status: $Enums.MessageStatus | null
    orderUuid: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type MessageCountAggregateOutputType = {
    uuid: number
    data: number
    type: number
    status: number
    orderUuid: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type MessageMinAggregateInputType = {
    uuid?: true
    type?: true
    status?: true
    orderUuid?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type MessageMaxAggregateInputType = {
    uuid?: true
    type?: true
    status?: true
    orderUuid?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type MessageCountAggregateInputType = {
    uuid?: true
    data?: true
    type?: true
    status?: true
    orderUuid?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type MessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Message to aggregate.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Messages
    **/
    _count?: true | MessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessageMaxAggregateInputType
  }

  export type GetMessageAggregateType<T extends MessageAggregateArgs> = {
        [P in keyof T & keyof AggregateMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessage[P]>
      : GetScalarType<T[P], AggregateMessage[P]>
  }




  export type MessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithAggregationInput | MessageOrderByWithAggregationInput[]
    by: MessageScalarFieldEnum[] | MessageScalarFieldEnum
    having?: MessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessageCountAggregateInputType | true
    _min?: MessageMinAggregateInputType
    _max?: MessageMaxAggregateInputType
  }

  export type MessageGroupByOutputType = {
    uuid: string
    data: JsonValue
    type: $Enums.MessageType
    status: $Enums.MessageStatus
    orderUuid: string | null
    createdAt: Date
    createdBy: string
    updatedAt: Date
    updatedBy: string
    _count: MessageCountAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  type GetMessageGroupByPayload<T extends MessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessageGroupByOutputType[P]>
            : GetScalarType<T[P], MessageGroupByOutputType[P]>
        }
      >
    >


  export type MessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    data?: boolean
    type?: boolean
    status?: boolean
    orderUuid?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    order?: boolean | Message$orderArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    data?: boolean
    type?: boolean
    status?: boolean
    orderUuid?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    order?: boolean | Message$orderArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectScalar = {
    uuid?: boolean
    data?: boolean
    type?: boolean
    status?: boolean
    orderUuid?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type MessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | Message$orderArgs<ExtArgs>
  }
  export type MessageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | Message$orderArgs<ExtArgs>
  }

  export type $MessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Message"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      data: Prisma.JsonValue
      type: $Enums.MessageType
      status: $Enums.MessageStatus
      orderUuid: string | null
      createdAt: Date
      createdBy: string
      updatedAt: Date
      updatedBy: string
    }, ExtArgs["result"]["message"]>
    composites: {}
  }

  type MessageGetPayload<S extends boolean | null | undefined | MessageDefaultArgs> = $Result.GetResult<Prisma.$MessagePayload, S>

  type MessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MessageFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MessageCountAggregateInputType | true
    }

  export interface MessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Message'], meta: { name: 'Message' } }
    /**
     * Find zero or one Message that matches the filter.
     * @param {MessageFindUniqueArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MessageFindUniqueArgs>(args: SelectSubset<T, MessageFindUniqueArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Message that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MessageFindUniqueOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MessageFindUniqueOrThrowArgs>(args: SelectSubset<T, MessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Message that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MessageFindFirstArgs>(args?: SelectSubset<T, MessageFindFirstArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Message that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MessageFindFirstOrThrowArgs>(args?: SelectSubset<T, MessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.message.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.message.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const messageWithUuidOnly = await prisma.message.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends MessageFindManyArgs>(args?: SelectSubset<T, MessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Message.
     * @param {MessageCreateArgs} args - Arguments to create a Message.
     * @example
     * // Create one Message
     * const Message = await prisma.message.create({
     *   data: {
     *     // ... data to create a Message
     *   }
     * })
     * 
     */
    create<T extends MessageCreateArgs>(args: SelectSubset<T, MessageCreateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Messages.
     * @param {MessageCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MessageCreateManyArgs>(args?: SelectSubset<T, MessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Messages and returns the data saved in the database.
     * @param {MessageCreateManyAndReturnArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Messages and only return the `uuid`
     * const messageWithUuidOnly = await prisma.message.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MessageCreateManyAndReturnArgs>(args?: SelectSubset<T, MessageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Message.
     * @param {MessageDeleteArgs} args - Arguments to delete one Message.
     * @example
     * // Delete one Message
     * const Message = await prisma.message.delete({
     *   where: {
     *     // ... filter to delete one Message
     *   }
     * })
     * 
     */
    delete<T extends MessageDeleteArgs>(args: SelectSubset<T, MessageDeleteArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Message.
     * @param {MessageUpdateArgs} args - Arguments to update one Message.
     * @example
     * // Update one Message
     * const message = await prisma.message.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MessageUpdateArgs>(args: SelectSubset<T, MessageUpdateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Messages.
     * @param {MessageDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.message.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MessageDeleteManyArgs>(args?: SelectSubset<T, MessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MessageUpdateManyArgs>(args: SelectSubset<T, MessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Message.
     * @param {MessageUpsertArgs} args - Arguments to update or create a Message.
     * @example
     * // Update or create a Message
     * const message = await prisma.message.upsert({
     *   create: {
     *     // ... data to create a Message
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Message we want to update
     *   }
     * })
     */
    upsert<T extends MessageUpsertArgs>(args: SelectSubset<T, MessageUpsertArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.message.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends MessageCountArgs>(
      args?: Subset<T, MessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessageAggregateArgs>(args: Subset<T, MessageAggregateArgs>): Prisma.PrismaPromise<GetMessageAggregateType<T>>

    /**
     * Group by Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MessageGroupByArgs['orderBy'] }
        : { orderBy?: MessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Message model
   */
  readonly fields: MessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Message.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends Message$orderArgs<ExtArgs> = {}>(args?: Subset<T, Message$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Message model
   */ 
  interface MessageFieldRefs {
    readonly uuid: FieldRef<"Message", 'String'>
    readonly data: FieldRef<"Message", 'Json'>
    readonly type: FieldRef<"Message", 'MessageType'>
    readonly status: FieldRef<"Message", 'MessageStatus'>
    readonly orderUuid: FieldRef<"Message", 'String'>
    readonly createdAt: FieldRef<"Message", 'DateTime'>
    readonly createdBy: FieldRef<"Message", 'String'>
    readonly updatedAt: FieldRef<"Message", 'DateTime'>
    readonly updatedBy: FieldRef<"Message", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Message findUnique
   */
  export type MessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findUniqueOrThrow
   */
  export type MessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findFirst
   */
  export type MessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findFirstOrThrow
   */
  export type MessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findMany
   */
  export type MessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Messages to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message create
   */
  export type MessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to create a Message.
     */
    data: XOR<MessageCreateInput, MessageUncheckedCreateInput>
  }

  /**
   * Message createMany
   */
  export type MessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Message createManyAndReturn
   */
  export type MessageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message update
   */
  export type MessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to update a Message.
     */
    data: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
    /**
     * Choose, which Message to update.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message updateMany
   */
  export type MessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
  }

  /**
   * Message upsert
   */
  export type MessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The filter to search for the Message to update in case it exists.
     */
    where: MessageWhereUniqueInput
    /**
     * In case the Message found by the `where` argument doesn't exist, create a new Message with this data.
     */
    create: XOR<MessageCreateInput, MessageUncheckedCreateInput>
    /**
     * In case the Message was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
  }

  /**
   * Message delete
   */
  export type MessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter which Message to delete.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message deleteMany
   */
  export type MessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Messages to delete
     */
    where?: MessageWhereInput
  }

  /**
   * Message.order
   */
  export type Message$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * Message without action
   */
  export type MessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
  }


  /**
   * Model Customer
   */

  export type AggregateCustomer = {
    _count: CustomerCountAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  export type CustomerMinAggregateOutputType = {
    uuid: string | null
    email: string | null
    phoneUuid: string | null
    firstname: string | null
    lastname: string | null
    addressUuid: string | null
  }

  export type CustomerMaxAggregateOutputType = {
    uuid: string | null
    email: string | null
    phoneUuid: string | null
    firstname: string | null
    lastname: string | null
    addressUuid: string | null
  }

  export type CustomerCountAggregateOutputType = {
    uuid: number
    email: number
    phoneUuid: number
    firstname: number
    lastname: number
    addressUuid: number
    _all: number
  }


  export type CustomerMinAggregateInputType = {
    uuid?: true
    email?: true
    phoneUuid?: true
    firstname?: true
    lastname?: true
    addressUuid?: true
  }

  export type CustomerMaxAggregateInputType = {
    uuid?: true
    email?: true
    phoneUuid?: true
    firstname?: true
    lastname?: true
    addressUuid?: true
  }

  export type CustomerCountAggregateInputType = {
    uuid?: true
    email?: true
    phoneUuid?: true
    firstname?: true
    lastname?: true
    addressUuid?: true
    _all?: true
  }

  export type CustomerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customer to aggregate.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Customers
    **/
    _count?: true | CustomerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomerMaxAggregateInputType
  }

  export type GetCustomerAggregateType<T extends CustomerAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomer[P]>
      : GetScalarType<T[P], AggregateCustomer[P]>
  }




  export type CustomerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerWhereInput
    orderBy?: CustomerOrderByWithAggregationInput | CustomerOrderByWithAggregationInput[]
    by: CustomerScalarFieldEnum[] | CustomerScalarFieldEnum
    having?: CustomerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomerCountAggregateInputType | true
    _min?: CustomerMinAggregateInputType
    _max?: CustomerMaxAggregateInputType
  }

  export type CustomerGroupByOutputType = {
    uuid: string
    email: string
    phoneUuid: string | null
    firstname: string | null
    lastname: string | null
    addressUuid: string | null
    _count: CustomerCountAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  type GetCustomerGroupByPayload<T extends CustomerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomerGroupByOutputType[P]>
            : GetScalarType<T[P], CustomerGroupByOutputType[P]>
        }
      >
    >


  export type CustomerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    email?: boolean
    phoneUuid?: boolean
    firstname?: boolean
    lastname?: boolean
    addressUuid?: boolean
    phone?: boolean | Customer$phoneArgs<ExtArgs>
    address?: boolean | Customer$addressArgs<ExtArgs>
    orders?: boolean | Customer$ordersArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer"]>

  export type CustomerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    email?: boolean
    phoneUuid?: boolean
    firstname?: boolean
    lastname?: boolean
    addressUuid?: boolean
    phone?: boolean | Customer$phoneArgs<ExtArgs>
    address?: boolean | Customer$addressArgs<ExtArgs>
  }, ExtArgs["result"]["customer"]>

  export type CustomerSelectScalar = {
    uuid?: boolean
    email?: boolean
    phoneUuid?: boolean
    firstname?: boolean
    lastname?: boolean
    addressUuid?: boolean
  }

  export type CustomerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    phone?: boolean | Customer$phoneArgs<ExtArgs>
    address?: boolean | Customer$addressArgs<ExtArgs>
    orders?: boolean | Customer$ordersArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CustomerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    phone?: boolean | Customer$phoneArgs<ExtArgs>
    address?: boolean | Customer$addressArgs<ExtArgs>
  }

  export type $CustomerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Customer"
    objects: {
      phone: Prisma.$MediaPayload<ExtArgs> | null
      address: Prisma.$MediaPayload<ExtArgs> | null
      orders: Prisma.$OrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      email: string
      phoneUuid: string | null
      firstname: string | null
      lastname: string | null
      addressUuid: string | null
    }, ExtArgs["result"]["customer"]>
    composites: {}
  }

  type CustomerGetPayload<S extends boolean | null | undefined | CustomerDefaultArgs> = $Result.GetResult<Prisma.$CustomerPayload, S>

  type CustomerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CustomerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CustomerCountAggregateInputType | true
    }

  export interface CustomerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Customer'], meta: { name: 'Customer' } }
    /**
     * Find zero or one Customer that matches the filter.
     * @param {CustomerFindUniqueArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomerFindUniqueArgs>(args: SelectSubset<T, CustomerFindUniqueArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Customer that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CustomerFindUniqueOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomerFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Customer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomerFindFirstArgs>(args?: SelectSubset<T, CustomerFindFirstArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Customer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomerFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomerFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Customers
     * const customers = await prisma.customer.findMany()
     * 
     * // Get first 10 Customers
     * const customers = await prisma.customer.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const customerWithUuidOnly = await prisma.customer.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends CustomerFindManyArgs>(args?: SelectSubset<T, CustomerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Customer.
     * @param {CustomerCreateArgs} args - Arguments to create a Customer.
     * @example
     * // Create one Customer
     * const Customer = await prisma.customer.create({
     *   data: {
     *     // ... data to create a Customer
     *   }
     * })
     * 
     */
    create<T extends CustomerCreateArgs>(args: SelectSubset<T, CustomerCreateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Customers.
     * @param {CustomerCreateManyArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customer = await prisma.customer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomerCreateManyArgs>(args?: SelectSubset<T, CustomerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Customers and returns the data saved in the database.
     * @param {CustomerCreateManyAndReturnArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customer = await prisma.customer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Customers and only return the `uuid`
     * const customerWithUuidOnly = await prisma.customer.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CustomerCreateManyAndReturnArgs>(args?: SelectSubset<T, CustomerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Customer.
     * @param {CustomerDeleteArgs} args - Arguments to delete one Customer.
     * @example
     * // Delete one Customer
     * const Customer = await prisma.customer.delete({
     *   where: {
     *     // ... filter to delete one Customer
     *   }
     * })
     * 
     */
    delete<T extends CustomerDeleteArgs>(args: SelectSubset<T, CustomerDeleteArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Customer.
     * @param {CustomerUpdateArgs} args - Arguments to update one Customer.
     * @example
     * // Update one Customer
     * const customer = await prisma.customer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomerUpdateArgs>(args: SelectSubset<T, CustomerUpdateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Customers.
     * @param {CustomerDeleteManyArgs} args - Arguments to filter Customers to delete.
     * @example
     * // Delete a few Customers
     * const { count } = await prisma.customer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomerDeleteManyArgs>(args?: SelectSubset<T, CustomerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Customers
     * const customer = await prisma.customer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomerUpdateManyArgs>(args: SelectSubset<T, CustomerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Customer.
     * @param {CustomerUpsertArgs} args - Arguments to update or create a Customer.
     * @example
     * // Update or create a Customer
     * const customer = await prisma.customer.upsert({
     *   create: {
     *     // ... data to create a Customer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Customer we want to update
     *   }
     * })
     */
    upsert<T extends CustomerUpsertArgs>(args: SelectSubset<T, CustomerUpsertArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerCountArgs} args - Arguments to filter Customers to count.
     * @example
     * // Count the number of Customers
     * const count = await prisma.customer.count({
     *   where: {
     *     // ... the filter for the Customers we want to count
     *   }
     * })
    **/
    count<T extends CustomerCountArgs>(
      args?: Subset<T, CustomerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomerAggregateArgs>(args: Subset<T, CustomerAggregateArgs>): Prisma.PrismaPromise<GetCustomerAggregateType<T>>

    /**
     * Group by Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomerGroupByArgs['orderBy'] }
        : { orderBy?: CustomerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Customer model
   */
  readonly fields: CustomerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Customer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    phone<T extends Customer$phoneArgs<ExtArgs> = {}>(args?: Subset<T, Customer$phoneArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    address<T extends Customer$addressArgs<ExtArgs> = {}>(args?: Subset<T, Customer$addressArgs<ExtArgs>>): Prisma__MediaClient<$Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    orders<T extends Customer$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Customer$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Customer model
   */ 
  interface CustomerFieldRefs {
    readonly uuid: FieldRef<"Customer", 'String'>
    readonly email: FieldRef<"Customer", 'String'>
    readonly phoneUuid: FieldRef<"Customer", 'String'>
    readonly firstname: FieldRef<"Customer", 'String'>
    readonly lastname: FieldRef<"Customer", 'String'>
    readonly addressUuid: FieldRef<"Customer", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Customer findUnique
   */
  export type CustomerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findUniqueOrThrow
   */
  export type CustomerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findFirst
   */
  export type CustomerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findFirstOrThrow
   */
  export type CustomerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findMany
   */
  export type CustomerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customers to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer create
   */
  export type CustomerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to create a Customer.
     */
    data: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
  }

  /**
   * Customer createMany
   */
  export type CustomerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Customers.
     */
    data: CustomerCreateManyInput | CustomerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Customer createManyAndReturn
   */
  export type CustomerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Customers.
     */
    data: CustomerCreateManyInput | CustomerCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Customer update
   */
  export type CustomerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to update a Customer.
     */
    data: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
    /**
     * Choose, which Customer to update.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer updateMany
   */
  export type CustomerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Customers.
     */
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyInput>
    /**
     * Filter which Customers to update
     */
    where?: CustomerWhereInput
  }

  /**
   * Customer upsert
   */
  export type CustomerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The filter to search for the Customer to update in case it exists.
     */
    where: CustomerWhereUniqueInput
    /**
     * In case the Customer found by the `where` argument doesn't exist, create a new Customer with this data.
     */
    create: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
    /**
     * In case the Customer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
  }

  /**
   * Customer delete
   */
  export type CustomerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter which Customer to delete.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer deleteMany
   */
  export type CustomerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customers to delete
     */
    where?: CustomerWhereInput
  }

  /**
   * Customer.phone
   */
  export type Customer$phoneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Media
     */
    select?: MediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MediaInclude<ExtArgs> | null
    where?: MediaWhereInput
  }

  /**
   * Customer.address
   */
  export type Customer$addressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Media
     */
    select?: MediaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MediaInclude<ExtArgs> | null
    where?: MediaWhereInput
  }

  /**
   * Customer.orders
   */
  export type Customer$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Customer without action
   */
  export type CustomerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
  }


  /**
   * Model Invoice
   */

  export type AggregateInvoice = {
    _count: InvoiceCountAggregateOutputType | null
    _min: InvoiceMinAggregateOutputType | null
    _max: InvoiceMaxAggregateOutputType | null
  }

  export type InvoiceMinAggregateOutputType = {
    invoiceNumber: string | null
    orderUuid: string | null
    createdAt: Date | null
    createdBy: string | null
  }

  export type InvoiceMaxAggregateOutputType = {
    invoiceNumber: string | null
    orderUuid: string | null
    createdAt: Date | null
    createdBy: string | null
  }

  export type InvoiceCountAggregateOutputType = {
    invoiceNumber: number
    orderUuid: number
    data: number
    createdAt: number
    createdBy: number
    _all: number
  }


  export type InvoiceMinAggregateInputType = {
    invoiceNumber?: true
    orderUuid?: true
    createdAt?: true
    createdBy?: true
  }

  export type InvoiceMaxAggregateInputType = {
    invoiceNumber?: true
    orderUuid?: true
    createdAt?: true
    createdBy?: true
  }

  export type InvoiceCountAggregateInputType = {
    invoiceNumber?: true
    orderUuid?: true
    data?: true
    createdAt?: true
    createdBy?: true
    _all?: true
  }

  export type InvoiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invoice to aggregate.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Invoices
    **/
    _count?: true | InvoiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvoiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvoiceMaxAggregateInputType
  }

  export type GetInvoiceAggregateType<T extends InvoiceAggregateArgs> = {
        [P in keyof T & keyof AggregateInvoice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvoice[P]>
      : GetScalarType<T[P], AggregateInvoice[P]>
  }




  export type InvoiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithAggregationInput | InvoiceOrderByWithAggregationInput[]
    by: InvoiceScalarFieldEnum[] | InvoiceScalarFieldEnum
    having?: InvoiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvoiceCountAggregateInputType | true
    _min?: InvoiceMinAggregateInputType
    _max?: InvoiceMaxAggregateInputType
  }

  export type InvoiceGroupByOutputType = {
    invoiceNumber: string
    orderUuid: string
    data: JsonValue
    createdAt: Date
    createdBy: string
    _count: InvoiceCountAggregateOutputType | null
    _min: InvoiceMinAggregateOutputType | null
    _max: InvoiceMaxAggregateOutputType | null
  }

  type GetInvoiceGroupByPayload<T extends InvoiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvoiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvoiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvoiceGroupByOutputType[P]>
            : GetScalarType<T[P], InvoiceGroupByOutputType[P]>
        }
      >
    >


  export type InvoiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    invoiceNumber?: boolean
    orderUuid?: boolean
    data?: boolean
    createdAt?: boolean
    createdBy?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoice"]>

  export type InvoiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    invoiceNumber?: boolean
    orderUuid?: boolean
    data?: boolean
    createdAt?: boolean
    createdBy?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoice"]>

  export type InvoiceSelectScalar = {
    invoiceNumber?: boolean
    orderUuid?: boolean
    data?: boolean
    createdAt?: boolean
    createdBy?: boolean
  }

  export type InvoiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type InvoiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }

  export type $InvoicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Invoice"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      invoiceNumber: string
      orderUuid: string
      data: Prisma.JsonValue
      createdAt: Date
      createdBy: string
    }, ExtArgs["result"]["invoice"]>
    composites: {}
  }

  type InvoiceGetPayload<S extends boolean | null | undefined | InvoiceDefaultArgs> = $Result.GetResult<Prisma.$InvoicePayload, S>

  type InvoiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<InvoiceFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: InvoiceCountAggregateInputType | true
    }

  export interface InvoiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Invoice'], meta: { name: 'Invoice' } }
    /**
     * Find zero or one Invoice that matches the filter.
     * @param {InvoiceFindUniqueArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvoiceFindUniqueArgs>(args: SelectSubset<T, InvoiceFindUniqueArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Invoice that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {InvoiceFindUniqueOrThrowArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvoiceFindUniqueOrThrowArgs>(args: SelectSubset<T, InvoiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Invoice that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindFirstArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvoiceFindFirstArgs>(args?: SelectSubset<T, InvoiceFindFirstArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Invoice that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindFirstOrThrowArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvoiceFindFirstOrThrowArgs>(args?: SelectSubset<T, InvoiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Invoices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Invoices
     * const invoices = await prisma.invoice.findMany()
     * 
     * // Get first 10 Invoices
     * const invoices = await prisma.invoice.findMany({ take: 10 })
     * 
     * // Only select the `invoiceNumber`
     * const invoiceWithInvoiceNumberOnly = await prisma.invoice.findMany({ select: { invoiceNumber: true } })
     * 
     */
    findMany<T extends InvoiceFindManyArgs>(args?: SelectSubset<T, InvoiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Invoice.
     * @param {InvoiceCreateArgs} args - Arguments to create a Invoice.
     * @example
     * // Create one Invoice
     * const Invoice = await prisma.invoice.create({
     *   data: {
     *     // ... data to create a Invoice
     *   }
     * })
     * 
     */
    create<T extends InvoiceCreateArgs>(args: SelectSubset<T, InvoiceCreateArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Invoices.
     * @param {InvoiceCreateManyArgs} args - Arguments to create many Invoices.
     * @example
     * // Create many Invoices
     * const invoice = await prisma.invoice.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvoiceCreateManyArgs>(args?: SelectSubset<T, InvoiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Invoices and returns the data saved in the database.
     * @param {InvoiceCreateManyAndReturnArgs} args - Arguments to create many Invoices.
     * @example
     * // Create many Invoices
     * const invoice = await prisma.invoice.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Invoices and only return the `invoiceNumber`
     * const invoiceWithInvoiceNumberOnly = await prisma.invoice.createManyAndReturn({ 
     *   select: { invoiceNumber: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvoiceCreateManyAndReturnArgs>(args?: SelectSubset<T, InvoiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Invoice.
     * @param {InvoiceDeleteArgs} args - Arguments to delete one Invoice.
     * @example
     * // Delete one Invoice
     * const Invoice = await prisma.invoice.delete({
     *   where: {
     *     // ... filter to delete one Invoice
     *   }
     * })
     * 
     */
    delete<T extends InvoiceDeleteArgs>(args: SelectSubset<T, InvoiceDeleteArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Invoice.
     * @param {InvoiceUpdateArgs} args - Arguments to update one Invoice.
     * @example
     * // Update one Invoice
     * const invoice = await prisma.invoice.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvoiceUpdateArgs>(args: SelectSubset<T, InvoiceUpdateArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Invoices.
     * @param {InvoiceDeleteManyArgs} args - Arguments to filter Invoices to delete.
     * @example
     * // Delete a few Invoices
     * const { count } = await prisma.invoice.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvoiceDeleteManyArgs>(args?: SelectSubset<T, InvoiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Invoices
     * const invoice = await prisma.invoice.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvoiceUpdateManyArgs>(args: SelectSubset<T, InvoiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Invoice.
     * @param {InvoiceUpsertArgs} args - Arguments to update or create a Invoice.
     * @example
     * // Update or create a Invoice
     * const invoice = await prisma.invoice.upsert({
     *   create: {
     *     // ... data to create a Invoice
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Invoice we want to update
     *   }
     * })
     */
    upsert<T extends InvoiceUpsertArgs>(args: SelectSubset<T, InvoiceUpsertArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Invoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceCountArgs} args - Arguments to filter Invoices to count.
     * @example
     * // Count the number of Invoices
     * const count = await prisma.invoice.count({
     *   where: {
     *     // ... the filter for the Invoices we want to count
     *   }
     * })
    **/
    count<T extends InvoiceCountArgs>(
      args?: Subset<T, InvoiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvoiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Invoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvoiceAggregateArgs>(args: Subset<T, InvoiceAggregateArgs>): Prisma.PrismaPromise<GetInvoiceAggregateType<T>>

    /**
     * Group by Invoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvoiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvoiceGroupByArgs['orderBy'] }
        : { orderBy?: InvoiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvoiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvoiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Invoice model
   */
  readonly fields: InvoiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Invoice.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvoiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Invoice model
   */ 
  interface InvoiceFieldRefs {
    readonly invoiceNumber: FieldRef<"Invoice", 'String'>
    readonly orderUuid: FieldRef<"Invoice", 'String'>
    readonly data: FieldRef<"Invoice", 'Json'>
    readonly createdAt: FieldRef<"Invoice", 'DateTime'>
    readonly createdBy: FieldRef<"Invoice", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Invoice findUnique
   */
  export type InvoiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice findUniqueOrThrow
   */
  export type InvoiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice findFirst
   */
  export type InvoiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invoices.
     */
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice findFirstOrThrow
   */
  export type InvoiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invoices.
     */
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice findMany
   */
  export type InvoiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoices to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice create
   */
  export type InvoiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The data needed to create a Invoice.
     */
    data: XOR<InvoiceCreateInput, InvoiceUncheckedCreateInput>
  }

  /**
   * Invoice createMany
   */
  export type InvoiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Invoices.
     */
    data: InvoiceCreateManyInput | InvoiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Invoice createManyAndReturn
   */
  export type InvoiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Invoices.
     */
    data: InvoiceCreateManyInput | InvoiceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Invoice update
   */
  export type InvoiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The data needed to update a Invoice.
     */
    data: XOR<InvoiceUpdateInput, InvoiceUncheckedUpdateInput>
    /**
     * Choose, which Invoice to update.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice updateMany
   */
  export type InvoiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Invoices.
     */
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyInput>
    /**
     * Filter which Invoices to update
     */
    where?: InvoiceWhereInput
  }

  /**
   * Invoice upsert
   */
  export type InvoiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The filter to search for the Invoice to update in case it exists.
     */
    where: InvoiceWhereUniqueInput
    /**
     * In case the Invoice found by the `where` argument doesn't exist, create a new Invoice with this data.
     */
    create: XOR<InvoiceCreateInput, InvoiceUncheckedCreateInput>
    /**
     * In case the Invoice was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvoiceUpdateInput, InvoiceUncheckedUpdateInput>
  }

  /**
   * Invoice delete
   */
  export type InvoiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter which Invoice to delete.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice deleteMany
   */
  export type InvoiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invoices to delete
     */
    where?: InvoiceWhereInput
  }

  /**
   * Invoice without action
   */
  export type InvoiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
  }


  /**
   * Model Token
   */

  export type AggregateToken = {
    _count: TokenCountAggregateOutputType | null
    _avg: TokenAvgAggregateOutputType | null
    _sum: TokenSumAggregateOutputType | null
    _min: TokenMinAggregateOutputType | null
    _max: TokenMaxAggregateOutputType | null
  }

  export type TokenAvgAggregateOutputType = {
    value: number | null
    year: number | null
  }

  export type TokenSumAggregateOutputType = {
    value: number | null
    year: number | null
  }

  export type TokenMinAggregateOutputType = {
    name: string | null
    value: number | null
    year: number | null
    format: string | null
  }

  export type TokenMaxAggregateOutputType = {
    name: string | null
    value: number | null
    year: number | null
    format: string | null
  }

  export type TokenCountAggregateOutputType = {
    name: number
    value: number
    year: number
    format: number
    _all: number
  }


  export type TokenAvgAggregateInputType = {
    value?: true
    year?: true
  }

  export type TokenSumAggregateInputType = {
    value?: true
    year?: true
  }

  export type TokenMinAggregateInputType = {
    name?: true
    value?: true
    year?: true
    format?: true
  }

  export type TokenMaxAggregateInputType = {
    name?: true
    value?: true
    year?: true
    format?: true
  }

  export type TokenCountAggregateInputType = {
    name?: true
    value?: true
    year?: true
    format?: true
    _all?: true
  }

  export type TokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Token to aggregate.
     */
    where?: TokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tokens to fetch.
     */
    orderBy?: TokenOrderByWithRelationInput | TokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tokens
    **/
    _count?: true | TokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TokenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TokenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TokenMaxAggregateInputType
  }

  export type GetTokenAggregateType<T extends TokenAggregateArgs> = {
        [P in keyof T & keyof AggregateToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateToken[P]>
      : GetScalarType<T[P], AggregateToken[P]>
  }




  export type TokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TokenWhereInput
    orderBy?: TokenOrderByWithAggregationInput | TokenOrderByWithAggregationInput[]
    by: TokenScalarFieldEnum[] | TokenScalarFieldEnum
    having?: TokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TokenCountAggregateInputType | true
    _avg?: TokenAvgAggregateInputType
    _sum?: TokenSumAggregateInputType
    _min?: TokenMinAggregateInputType
    _max?: TokenMaxAggregateInputType
  }

  export type TokenGroupByOutputType = {
    name: string
    value: number
    year: number
    format: string
    _count: TokenCountAggregateOutputType | null
    _avg: TokenAvgAggregateOutputType | null
    _sum: TokenSumAggregateOutputType | null
    _min: TokenMinAggregateOutputType | null
    _max: TokenMaxAggregateOutputType | null
  }

  type GetTokenGroupByPayload<T extends TokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TokenGroupByOutputType[P]>
            : GetScalarType<T[P], TokenGroupByOutputType[P]>
        }
      >
    >


  export type TokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    name?: boolean
    value?: boolean
    year?: boolean
    format?: boolean
  }, ExtArgs["result"]["token"]>

  export type TokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    name?: boolean
    value?: boolean
    year?: boolean
    format?: boolean
  }, ExtArgs["result"]["token"]>

  export type TokenSelectScalar = {
    name?: boolean
    value?: boolean
    year?: boolean
    format?: boolean
  }


  export type $TokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Token"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      name: string
      value: number
      year: number
      format: string
    }, ExtArgs["result"]["token"]>
    composites: {}
  }

  type TokenGetPayload<S extends boolean | null | undefined | TokenDefaultArgs> = $Result.GetResult<Prisma.$TokenPayload, S>

  type TokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TokenFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TokenCountAggregateInputType | true
    }

  export interface TokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Token'], meta: { name: 'Token' } }
    /**
     * Find zero or one Token that matches the filter.
     * @param {TokenFindUniqueArgs} args - Arguments to find a Token
     * @example
     * // Get one Token
     * const token = await prisma.token.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TokenFindUniqueArgs>(args: SelectSubset<T, TokenFindUniqueArgs<ExtArgs>>): Prisma__TokenClient<$Result.GetResult<Prisma.$TokenPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Token that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TokenFindUniqueOrThrowArgs} args - Arguments to find a Token
     * @example
     * // Get one Token
     * const token = await prisma.token.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TokenFindUniqueOrThrowArgs>(args: SelectSubset<T, TokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TokenClient<$Result.GetResult<Prisma.$TokenPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Token that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TokenFindFirstArgs} args - Arguments to find a Token
     * @example
     * // Get one Token
     * const token = await prisma.token.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TokenFindFirstArgs>(args?: SelectSubset<T, TokenFindFirstArgs<ExtArgs>>): Prisma__TokenClient<$Result.GetResult<Prisma.$TokenPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Token that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TokenFindFirstOrThrowArgs} args - Arguments to find a Token
     * @example
     * // Get one Token
     * const token = await prisma.token.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TokenFindFirstOrThrowArgs>(args?: SelectSubset<T, TokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__TokenClient<$Result.GetResult<Prisma.$TokenPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tokens
     * const tokens = await prisma.token.findMany()
     * 
     * // Get first 10 Tokens
     * const tokens = await prisma.token.findMany({ take: 10 })
     * 
     * // Only select the `name`
     * const tokenWithNameOnly = await prisma.token.findMany({ select: { name: true } })
     * 
     */
    findMany<T extends TokenFindManyArgs>(args?: SelectSubset<T, TokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TokenPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Token.
     * @param {TokenCreateArgs} args - Arguments to create a Token.
     * @example
     * // Create one Token
     * const Token = await prisma.token.create({
     *   data: {
     *     // ... data to create a Token
     *   }
     * })
     * 
     */
    create<T extends TokenCreateArgs>(args: SelectSubset<T, TokenCreateArgs<ExtArgs>>): Prisma__TokenClient<$Result.GetResult<Prisma.$TokenPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tokens.
     * @param {TokenCreateManyArgs} args - Arguments to create many Tokens.
     * @example
     * // Create many Tokens
     * const token = await prisma.token.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TokenCreateManyArgs>(args?: SelectSubset<T, TokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tokens and returns the data saved in the database.
     * @param {TokenCreateManyAndReturnArgs} args - Arguments to create many Tokens.
     * @example
     * // Create many Tokens
     * const token = await prisma.token.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tokens and only return the `name`
     * const tokenWithNameOnly = await prisma.token.createManyAndReturn({ 
     *   select: { name: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TokenCreateManyAndReturnArgs>(args?: SelectSubset<T, TokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TokenPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Token.
     * @param {TokenDeleteArgs} args - Arguments to delete one Token.
     * @example
     * // Delete one Token
     * const Token = await prisma.token.delete({
     *   where: {
     *     // ... filter to delete one Token
     *   }
     * })
     * 
     */
    delete<T extends TokenDeleteArgs>(args: SelectSubset<T, TokenDeleteArgs<ExtArgs>>): Prisma__TokenClient<$Result.GetResult<Prisma.$TokenPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Token.
     * @param {TokenUpdateArgs} args - Arguments to update one Token.
     * @example
     * // Update one Token
     * const token = await prisma.token.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TokenUpdateArgs>(args: SelectSubset<T, TokenUpdateArgs<ExtArgs>>): Prisma__TokenClient<$Result.GetResult<Prisma.$TokenPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tokens.
     * @param {TokenDeleteManyArgs} args - Arguments to filter Tokens to delete.
     * @example
     * // Delete a few Tokens
     * const { count } = await prisma.token.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TokenDeleteManyArgs>(args?: SelectSubset<T, TokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tokens
     * const token = await prisma.token.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TokenUpdateManyArgs>(args: SelectSubset<T, TokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Token.
     * @param {TokenUpsertArgs} args - Arguments to update or create a Token.
     * @example
     * // Update or create a Token
     * const token = await prisma.token.upsert({
     *   create: {
     *     // ... data to create a Token
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Token we want to update
     *   }
     * })
     */
    upsert<T extends TokenUpsertArgs>(args: SelectSubset<T, TokenUpsertArgs<ExtArgs>>): Prisma__TokenClient<$Result.GetResult<Prisma.$TokenPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TokenCountArgs} args - Arguments to filter Tokens to count.
     * @example
     * // Count the number of Tokens
     * const count = await prisma.token.count({
     *   where: {
     *     // ... the filter for the Tokens we want to count
     *   }
     * })
    **/
    count<T extends TokenCountArgs>(
      args?: Subset<T, TokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Token.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TokenAggregateArgs>(args: Subset<T, TokenAggregateArgs>): Prisma.PrismaPromise<GetTokenAggregateType<T>>

    /**
     * Group by Token.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TokenGroupByArgs['orderBy'] }
        : { orderBy?: TokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Token model
   */
  readonly fields: TokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Token.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Token model
   */ 
  interface TokenFieldRefs {
    readonly name: FieldRef<"Token", 'String'>
    readonly value: FieldRef<"Token", 'Int'>
    readonly year: FieldRef<"Token", 'Int'>
    readonly format: FieldRef<"Token", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Token findUnique
   */
  export type TokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Token
     */
    select?: TokenSelect<ExtArgs> | null
    /**
     * Filter, which Token to fetch.
     */
    where: TokenWhereUniqueInput
  }

  /**
   * Token findUniqueOrThrow
   */
  export type TokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Token
     */
    select?: TokenSelect<ExtArgs> | null
    /**
     * Filter, which Token to fetch.
     */
    where: TokenWhereUniqueInput
  }

  /**
   * Token findFirst
   */
  export type TokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Token
     */
    select?: TokenSelect<ExtArgs> | null
    /**
     * Filter, which Token to fetch.
     */
    where?: TokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tokens to fetch.
     */
    orderBy?: TokenOrderByWithRelationInput | TokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tokens.
     */
    cursor?: TokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tokens.
     */
    distinct?: TokenScalarFieldEnum | TokenScalarFieldEnum[]
  }

  /**
   * Token findFirstOrThrow
   */
  export type TokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Token
     */
    select?: TokenSelect<ExtArgs> | null
    /**
     * Filter, which Token to fetch.
     */
    where?: TokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tokens to fetch.
     */
    orderBy?: TokenOrderByWithRelationInput | TokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tokens.
     */
    cursor?: TokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tokens.
     */
    distinct?: TokenScalarFieldEnum | TokenScalarFieldEnum[]
  }

  /**
   * Token findMany
   */
  export type TokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Token
     */
    select?: TokenSelect<ExtArgs> | null
    /**
     * Filter, which Tokens to fetch.
     */
    where?: TokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tokens to fetch.
     */
    orderBy?: TokenOrderByWithRelationInput | TokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tokens.
     */
    cursor?: TokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tokens.
     */
    skip?: number
    distinct?: TokenScalarFieldEnum | TokenScalarFieldEnum[]
  }

  /**
   * Token create
   */
  export type TokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Token
     */
    select?: TokenSelect<ExtArgs> | null
    /**
     * The data needed to create a Token.
     */
    data: XOR<TokenCreateInput, TokenUncheckedCreateInput>
  }

  /**
   * Token createMany
   */
  export type TokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tokens.
     */
    data: TokenCreateManyInput | TokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Token createManyAndReturn
   */
  export type TokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Token
     */
    select?: TokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Tokens.
     */
    data: TokenCreateManyInput | TokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Token update
   */
  export type TokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Token
     */
    select?: TokenSelect<ExtArgs> | null
    /**
     * The data needed to update a Token.
     */
    data: XOR<TokenUpdateInput, TokenUncheckedUpdateInput>
    /**
     * Choose, which Token to update.
     */
    where: TokenWhereUniqueInput
  }

  /**
   * Token updateMany
   */
  export type TokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tokens.
     */
    data: XOR<TokenUpdateManyMutationInput, TokenUncheckedUpdateManyInput>
    /**
     * Filter which Tokens to update
     */
    where?: TokenWhereInput
  }

  /**
   * Token upsert
   */
  export type TokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Token
     */
    select?: TokenSelect<ExtArgs> | null
    /**
     * The filter to search for the Token to update in case it exists.
     */
    where: TokenWhereUniqueInput
    /**
     * In case the Token found by the `where` argument doesn't exist, create a new Token with this data.
     */
    create: XOR<TokenCreateInput, TokenUncheckedCreateInput>
    /**
     * In case the Token was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TokenUpdateInput, TokenUncheckedUpdateInput>
  }

  /**
   * Token delete
   */
  export type TokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Token
     */
    select?: TokenSelect<ExtArgs> | null
    /**
     * Filter which Token to delete.
     */
    where: TokenWhereUniqueInput
  }

  /**
   * Token deleteMany
   */
  export type TokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tokens to delete
     */
    where?: TokenWhereInput
  }

  /**
   * Token without action
   */
  export type TokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Token
     */
    select?: TokenSelect<ExtArgs> | null
  }


  /**
   * Model Banner
   */

  export type AggregateBanner = {
    _count: BannerCountAggregateOutputType | null
    _avg: BannerAvgAggregateOutputType | null
    _sum: BannerSumAggregateOutputType | null
    _min: BannerMinAggregateOutputType | null
    _max: BannerMaxAggregateOutputType | null
  }

  export type BannerAvgAggregateOutputType = {
    order: number | null
  }

  export type BannerSumAggregateOutputType = {
    order: number | null
  }

  export type BannerMinAggregateOutputType = {
    uuid: string | null
    imageHash: string | null
    order: number | null
    isActive: boolean | null
    href: string | null
    startDate: Date | null
    endDate: Date | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type BannerMaxAggregateOutputType = {
    uuid: string | null
    imageHash: string | null
    order: number | null
    isActive: boolean | null
    href: string | null
    startDate: Date | null
    endDate: Date | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type BannerCountAggregateOutputType = {
    uuid: number
    imageHash: number
    order: number
    isActive: number
    href: number
    startDate: number
    endDate: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type BannerAvgAggregateInputType = {
    order?: true
  }

  export type BannerSumAggregateInputType = {
    order?: true
  }

  export type BannerMinAggregateInputType = {
    uuid?: true
    imageHash?: true
    order?: true
    isActive?: true
    href?: true
    startDate?: true
    endDate?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type BannerMaxAggregateInputType = {
    uuid?: true
    imageHash?: true
    order?: true
    isActive?: true
    href?: true
    startDate?: true
    endDate?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type BannerCountAggregateInputType = {
    uuid?: true
    imageHash?: true
    order?: true
    isActive?: true
    href?: true
    startDate?: true
    endDate?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type BannerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Banner to aggregate.
     */
    where?: BannerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Banners to fetch.
     */
    orderBy?: BannerOrderByWithRelationInput | BannerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BannerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Banners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Banners.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Banners
    **/
    _count?: true | BannerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BannerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BannerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BannerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BannerMaxAggregateInputType
  }

  export type GetBannerAggregateType<T extends BannerAggregateArgs> = {
        [P in keyof T & keyof AggregateBanner]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBanner[P]>
      : GetScalarType<T[P], AggregateBanner[P]>
  }




  export type BannerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BannerWhereInput
    orderBy?: BannerOrderByWithAggregationInput | BannerOrderByWithAggregationInput[]
    by: BannerScalarFieldEnum[] | BannerScalarFieldEnum
    having?: BannerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BannerCountAggregateInputType | true
    _avg?: BannerAvgAggregateInputType
    _sum?: BannerSumAggregateInputType
    _min?: BannerMinAggregateInputType
    _max?: BannerMaxAggregateInputType
  }

  export type BannerGroupByOutputType = {
    uuid: string
    imageHash: string
    order: number
    isActive: boolean
    href: string | null
    startDate: Date | null
    endDate: Date | null
    createdAt: Date
    createdBy: string
    updatedAt: Date
    updatedBy: string
    _count: BannerCountAggregateOutputType | null
    _avg: BannerAvgAggregateOutputType | null
    _sum: BannerSumAggregateOutputType | null
    _min: BannerMinAggregateOutputType | null
    _max: BannerMaxAggregateOutputType | null
  }

  type GetBannerGroupByPayload<T extends BannerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BannerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BannerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BannerGroupByOutputType[P]>
            : GetScalarType<T[P], BannerGroupByOutputType[P]>
        }
      >
    >


  export type BannerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    imageHash?: boolean
    order?: boolean
    isActive?: boolean
    href?: boolean
    startDate?: boolean
    endDate?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    image?: boolean | ImageDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["banner"]>

  export type BannerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    uuid?: boolean
    imageHash?: boolean
    order?: boolean
    isActive?: boolean
    href?: boolean
    startDate?: boolean
    endDate?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    image?: boolean | ImageDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["banner"]>

  export type BannerSelectScalar = {
    uuid?: boolean
    imageHash?: boolean
    order?: boolean
    isActive?: boolean
    href?: boolean
    startDate?: boolean
    endDate?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type BannerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    image?: boolean | ImageDefaultArgs<ExtArgs>
  }
  export type BannerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    image?: boolean | ImageDefaultArgs<ExtArgs>
  }

  export type $BannerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Banner"
    objects: {
      image: Prisma.$ImagePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      uuid: string
      imageHash: string
      order: number
      isActive: boolean
      href: string | null
      startDate: Date | null
      endDate: Date | null
      createdAt: Date
      createdBy: string
      updatedAt: Date
      updatedBy: string
    }, ExtArgs["result"]["banner"]>
    composites: {}
  }

  type BannerGetPayload<S extends boolean | null | undefined | BannerDefaultArgs> = $Result.GetResult<Prisma.$BannerPayload, S>

  type BannerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BannerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BannerCountAggregateInputType | true
    }

  export interface BannerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Banner'], meta: { name: 'Banner' } }
    /**
     * Find zero or one Banner that matches the filter.
     * @param {BannerFindUniqueArgs} args - Arguments to find a Banner
     * @example
     * // Get one Banner
     * const banner = await prisma.banner.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BannerFindUniqueArgs>(args: SelectSubset<T, BannerFindUniqueArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Banner that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BannerFindUniqueOrThrowArgs} args - Arguments to find a Banner
     * @example
     * // Get one Banner
     * const banner = await prisma.banner.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BannerFindUniqueOrThrowArgs>(args: SelectSubset<T, BannerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Banner that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerFindFirstArgs} args - Arguments to find a Banner
     * @example
     * // Get one Banner
     * const banner = await prisma.banner.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BannerFindFirstArgs>(args?: SelectSubset<T, BannerFindFirstArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Banner that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerFindFirstOrThrowArgs} args - Arguments to find a Banner
     * @example
     * // Get one Banner
     * const banner = await prisma.banner.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BannerFindFirstOrThrowArgs>(args?: SelectSubset<T, BannerFindFirstOrThrowArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Banners that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Banners
     * const banners = await prisma.banner.findMany()
     * 
     * // Get first 10 Banners
     * const banners = await prisma.banner.findMany({ take: 10 })
     * 
     * // Only select the `uuid`
     * const bannerWithUuidOnly = await prisma.banner.findMany({ select: { uuid: true } })
     * 
     */
    findMany<T extends BannerFindManyArgs>(args?: SelectSubset<T, BannerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Banner.
     * @param {BannerCreateArgs} args - Arguments to create a Banner.
     * @example
     * // Create one Banner
     * const Banner = await prisma.banner.create({
     *   data: {
     *     // ... data to create a Banner
     *   }
     * })
     * 
     */
    create<T extends BannerCreateArgs>(args: SelectSubset<T, BannerCreateArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Banners.
     * @param {BannerCreateManyArgs} args - Arguments to create many Banners.
     * @example
     * // Create many Banners
     * const banner = await prisma.banner.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BannerCreateManyArgs>(args?: SelectSubset<T, BannerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Banners and returns the data saved in the database.
     * @param {BannerCreateManyAndReturnArgs} args - Arguments to create many Banners.
     * @example
     * // Create many Banners
     * const banner = await prisma.banner.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Banners and only return the `uuid`
     * const bannerWithUuidOnly = await prisma.banner.createManyAndReturn({ 
     *   select: { uuid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BannerCreateManyAndReturnArgs>(args?: SelectSubset<T, BannerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Banner.
     * @param {BannerDeleteArgs} args - Arguments to delete one Banner.
     * @example
     * // Delete one Banner
     * const Banner = await prisma.banner.delete({
     *   where: {
     *     // ... filter to delete one Banner
     *   }
     * })
     * 
     */
    delete<T extends BannerDeleteArgs>(args: SelectSubset<T, BannerDeleteArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Banner.
     * @param {BannerUpdateArgs} args - Arguments to update one Banner.
     * @example
     * // Update one Banner
     * const banner = await prisma.banner.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BannerUpdateArgs>(args: SelectSubset<T, BannerUpdateArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Banners.
     * @param {BannerDeleteManyArgs} args - Arguments to filter Banners to delete.
     * @example
     * // Delete a few Banners
     * const { count } = await prisma.banner.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BannerDeleteManyArgs>(args?: SelectSubset<T, BannerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Banners.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Banners
     * const banner = await prisma.banner.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BannerUpdateManyArgs>(args: SelectSubset<T, BannerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Banner.
     * @param {BannerUpsertArgs} args - Arguments to update or create a Banner.
     * @example
     * // Update or create a Banner
     * const banner = await prisma.banner.upsert({
     *   create: {
     *     // ... data to create a Banner
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Banner we want to update
     *   }
     * })
     */
    upsert<T extends BannerUpsertArgs>(args: SelectSubset<T, BannerUpsertArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Banners.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerCountArgs} args - Arguments to filter Banners to count.
     * @example
     * // Count the number of Banners
     * const count = await prisma.banner.count({
     *   where: {
     *     // ... the filter for the Banners we want to count
     *   }
     * })
    **/
    count<T extends BannerCountArgs>(
      args?: Subset<T, BannerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BannerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Banner.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BannerAggregateArgs>(args: Subset<T, BannerAggregateArgs>): Prisma.PrismaPromise<GetBannerAggregateType<T>>

    /**
     * Group by Banner.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BannerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BannerGroupByArgs['orderBy'] }
        : { orderBy?: BannerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BannerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBannerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Banner model
   */
  readonly fields: BannerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Banner.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BannerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    image<T extends ImageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ImageDefaultArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Banner model
   */ 
  interface BannerFieldRefs {
    readonly uuid: FieldRef<"Banner", 'String'>
    readonly imageHash: FieldRef<"Banner", 'String'>
    readonly order: FieldRef<"Banner", 'Int'>
    readonly isActive: FieldRef<"Banner", 'Boolean'>
    readonly href: FieldRef<"Banner", 'String'>
    readonly startDate: FieldRef<"Banner", 'DateTime'>
    readonly endDate: FieldRef<"Banner", 'DateTime'>
    readonly createdAt: FieldRef<"Banner", 'DateTime'>
    readonly createdBy: FieldRef<"Banner", 'String'>
    readonly updatedAt: FieldRef<"Banner", 'DateTime'>
    readonly updatedBy: FieldRef<"Banner", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Banner findUnique
   */
  export type BannerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BannerInclude<ExtArgs> | null
    /**
     * Filter, which Banner to fetch.
     */
    where: BannerWhereUniqueInput
  }

  /**
   * Banner findUniqueOrThrow
   */
  export type BannerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BannerInclude<ExtArgs> | null
    /**
     * Filter, which Banner to fetch.
     */
    where: BannerWhereUniqueInput
  }

  /**
   * Banner findFirst
   */
  export type BannerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BannerInclude<ExtArgs> | null
    /**
     * Filter, which Banner to fetch.
     */
    where?: BannerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Banners to fetch.
     */
    orderBy?: BannerOrderByWithRelationInput | BannerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Banners.
     */
    cursor?: BannerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Banners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Banners.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Banners.
     */
    distinct?: BannerScalarFieldEnum | BannerScalarFieldEnum[]
  }

  /**
   * Banner findFirstOrThrow
   */
  export type BannerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BannerInclude<ExtArgs> | null
    /**
     * Filter, which Banner to fetch.
     */
    where?: BannerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Banners to fetch.
     */
    orderBy?: BannerOrderByWithRelationInput | BannerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Banners.
     */
    cursor?: BannerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Banners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Banners.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Banners.
     */
    distinct?: BannerScalarFieldEnum | BannerScalarFieldEnum[]
  }

  /**
   * Banner findMany
   */
  export type BannerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BannerInclude<ExtArgs> | null
    /**
     * Filter, which Banners to fetch.
     */
    where?: BannerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Banners to fetch.
     */
    orderBy?: BannerOrderByWithRelationInput | BannerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Banners.
     */
    cursor?: BannerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Banners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Banners.
     */
    skip?: number
    distinct?: BannerScalarFieldEnum | BannerScalarFieldEnum[]
  }

  /**
   * Banner create
   */
  export type BannerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BannerInclude<ExtArgs> | null
    /**
     * The data needed to create a Banner.
     */
    data: XOR<BannerCreateInput, BannerUncheckedCreateInput>
  }

  /**
   * Banner createMany
   */
  export type BannerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Banners.
     */
    data: BannerCreateManyInput | BannerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Banner createManyAndReturn
   */
  export type BannerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Banners.
     */
    data: BannerCreateManyInput | BannerCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BannerIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Banner update
   */
  export type BannerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BannerInclude<ExtArgs> | null
    /**
     * The data needed to update a Banner.
     */
    data: XOR<BannerUpdateInput, BannerUncheckedUpdateInput>
    /**
     * Choose, which Banner to update.
     */
    where: BannerWhereUniqueInput
  }

  /**
   * Banner updateMany
   */
  export type BannerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Banners.
     */
    data: XOR<BannerUpdateManyMutationInput, BannerUncheckedUpdateManyInput>
    /**
     * Filter which Banners to update
     */
    where?: BannerWhereInput
  }

  /**
   * Banner upsert
   */
  export type BannerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BannerInclude<ExtArgs> | null
    /**
     * The filter to search for the Banner to update in case it exists.
     */
    where: BannerWhereUniqueInput
    /**
     * In case the Banner found by the `where` argument doesn't exist, create a new Banner with this data.
     */
    create: XOR<BannerCreateInput, BannerUncheckedCreateInput>
    /**
     * In case the Banner was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BannerUpdateInput, BannerUncheckedUpdateInput>
  }

  /**
   * Banner delete
   */
  export type BannerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BannerInclude<ExtArgs> | null
    /**
     * Filter which Banner to delete.
     */
    where: BannerWhereUniqueInput
  }

  /**
   * Banner deleteMany
   */
  export type BannerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Banners to delete
     */
    where?: BannerWhereInput
  }

  /**
   * Banner without action
   */
  export type BannerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BannerInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const NoticeScalarFieldEnum: {
    productUuid: 'productUuid',
    url: 'url'
  };

  export type NoticeScalarFieldEnum = (typeof NoticeScalarFieldEnum)[keyof typeof NoticeScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    uuid: 'uuid',
    availableStock: 'availableStock',
    name: 'name',
    miniatureHash: 'miniatureHash',
    cip7: 'cip7',
    cip13: 'cip13',
    ean13: 'ean13',
    priceWithoutTax: 'priceWithoutTax',
    percentTaxRate: 'percentTaxRate',
    laboratoryUuid: 'laboratoryUuid',
    description: 'description',
    instructionsForUse: 'instructionsForUse',
    composition: 'composition',
    weight: 'weight',
    maxQuantityForOrder: 'maxQuantityForOrder',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const LocationScalarFieldEnum: {
    uuid: 'uuid',
    name: 'name',
    order: 'order'
  };

  export type LocationScalarFieldEnum = (typeof LocationScalarFieldEnum)[keyof typeof LocationScalarFieldEnum]


  export const ProductLocationScalarFieldEnum: {
    locationUuid: 'locationUuid',
    productUuid: 'productUuid',
    value: 'value'
  };

  export type ProductLocationScalarFieldEnum = (typeof ProductLocationScalarFieldEnum)[keyof typeof ProductLocationScalarFieldEnum]


  export const ImageScalarFieldEnum: {
    hash: 'hash',
    name: 'name',
    url: 'url',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type ImageScalarFieldEnum = (typeof ImageScalarFieldEnum)[keyof typeof ImageScalarFieldEnum]


  export const ProductImageScalarFieldEnum: {
    imageHash: 'imageHash',
    productUuid: 'productUuid'
  };

  export type ProductImageScalarFieldEnum = (typeof ProductImageScalarFieldEnum)[keyof typeof ProductImageScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    uuid: 'uuid',
    name: 'name',
    description: 'description',
    parentUuid: 'parentUuid',
    miniatureHash: 'miniatureHash',
    imageHash: 'imageHash',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const PromotionScalarFieldEnum: {
    uuid: 'uuid',
    amount: 'amount',
    type: 'type',
    name: 'name',
    startDate: 'startDate',
    endDate: 'endDate',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type PromotionScalarFieldEnum = (typeof PromotionScalarFieldEnum)[keyof typeof PromotionScalarFieldEnum]


  export const ProductCategoryScalarFieldEnum: {
    categoryUuid: 'categoryUuid',
    productUuid: 'productUuid'
  };

  export type ProductCategoryScalarFieldEnum = (typeof ProductCategoryScalarFieldEnum)[keyof typeof ProductCategoryScalarFieldEnum]


  export const ProductPromotionScalarFieldEnum: {
    productUuid: 'productUuid',
    promotionUuid: 'promotionUuid'
  };

  export type ProductPromotionScalarFieldEnum = (typeof ProductPromotionScalarFieldEnum)[keyof typeof ProductPromotionScalarFieldEnum]


  export const DeliveryMethodScalarFieldEnum: {
    uuid: 'uuid',
    name: 'name',
    description: 'description',
    priceRanges: 'priceRanges',
    type: 'type',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type DeliveryMethodScalarFieldEnum = (typeof DeliveryMethodScalarFieldEnum)[keyof typeof DeliveryMethodScalarFieldEnum]


  export const DeliveryScalarFieldEnum: {
    uuid: 'uuid',
    orderUuid: 'orderUuid',
    price: 'price',
    pickupId: 'pickupId',
    pickingDate: 'pickingDate',
    trackingNumber: 'trackingNumber',
    direction: 'direction',
    weight: 'weight',
    status: 'status',
    methodUuid: 'methodUuid',
    senderAddressUuid: 'senderAddressUuid',
    senderPhoneUuid: 'senderPhoneUuid',
    senderEmailUuid: 'senderEmailUuid',
    receiverAddressUuid: 'receiverAddressUuid',
    receiverPhoneUuid: 'receiverPhoneUuid',
    receiverEmailUuid: 'receiverEmailUuid',
    data: 'data',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type DeliveryScalarFieldEnum = (typeof DeliveryScalarFieldEnum)[keyof typeof DeliveryScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    uuid: 'uuid',
    orderUuid: 'orderUuid',
    amount: 'amount',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const OrderLineScalarFieldEnum: {
    productUuid: 'productUuid',
    orderUuid: 'orderUuid',
    priceWithoutTax: 'priceWithoutTax',
    percentTaxRate: 'percentTaxRate',
    expectedQuantity: 'expectedQuantity',
    preparedQuantity: 'preparedQuantity',
    promotionUuid: 'promotionUuid',
    status: 'status',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type OrderLineScalarFieldEnum = (typeof OrderLineScalarFieldEnum)[keyof typeof OrderLineScalarFieldEnum]


  export const MediaScalarFieldEnum: {
    uuid: 'uuid',
    data: 'data',
    type: 'type',
    name: 'name'
  };

  export type MediaScalarFieldEnum = (typeof MediaScalarFieldEnum)[keyof typeof MediaScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    uuid: 'uuid',
    deliveryAddressUuid: 'deliveryAddressUuid',
    billingAddressUuid: 'billingAddressUuid',
    phoneUuid: 'phoneUuid',
    emailUuid: 'emailUuid',
    idPasserelle: 'idPasserelle',
    customerUuid: 'customerUuid',
    customerMessage: 'customerMessage',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const LaboratoryScalarFieldEnum: {
    uuid: 'uuid',
    name: 'name',
    description: 'description',
    imageHash: 'imageHash',
    miniatureHash: 'miniatureHash',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type LaboratoryScalarFieldEnum = (typeof LaboratoryScalarFieldEnum)[keyof typeof LaboratoryScalarFieldEnum]


  export const MessageScalarFieldEnum: {
    uuid: 'uuid',
    data: 'data',
    type: 'type',
    status: 'status',
    orderUuid: 'orderUuid',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


  export const CustomerScalarFieldEnum: {
    uuid: 'uuid',
    email: 'email',
    phoneUuid: 'phoneUuid',
    firstname: 'firstname',
    lastname: 'lastname',
    addressUuid: 'addressUuid'
  };

  export type CustomerScalarFieldEnum = (typeof CustomerScalarFieldEnum)[keyof typeof CustomerScalarFieldEnum]


  export const InvoiceScalarFieldEnum: {
    invoiceNumber: 'invoiceNumber',
    orderUuid: 'orderUuid',
    data: 'data',
    createdAt: 'createdAt',
    createdBy: 'createdBy'
  };

  export type InvoiceScalarFieldEnum = (typeof InvoiceScalarFieldEnum)[keyof typeof InvoiceScalarFieldEnum]


  export const TokenScalarFieldEnum: {
    name: 'name',
    value: 'value',
    year: 'year',
    format: 'format'
  };

  export type TokenScalarFieldEnum = (typeof TokenScalarFieldEnum)[keyof typeof TokenScalarFieldEnum]


  export const BannerScalarFieldEnum: {
    uuid: 'uuid',
    imageHash: 'imageHash',
    order: 'order',
    isActive: 'isActive',
    href: 'href',
    startDate: 'startDate',
    endDate: 'endDate',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type BannerScalarFieldEnum = (typeof BannerScalarFieldEnum)[keyof typeof BannerScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'ProductStatus'
   */
  export type EnumProductStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductStatus'>
    


  /**
   * Reference to a field of type 'ProductStatus[]'
   */
  export type ListEnumProductStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductStatus[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'ReductionType'
   */
  export type EnumReductionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReductionType'>
    


  /**
   * Reference to a field of type 'ReductionType[]'
   */
  export type ListEnumReductionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReductionType[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'DeliveryMethodType'
   */
  export type EnumDeliveryMethodTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DeliveryMethodType'>
    


  /**
   * Reference to a field of type 'DeliveryMethodType[]'
   */
  export type ListEnumDeliveryMethodTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DeliveryMethodType[]'>
    


  /**
   * Reference to a field of type 'DeliveryDirection'
   */
  export type EnumDeliveryDirectionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DeliveryDirection'>
    


  /**
   * Reference to a field of type 'DeliveryDirection[]'
   */
  export type ListEnumDeliveryDirectionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DeliveryDirection[]'>
    


  /**
   * Reference to a field of type 'DeliveryStatus'
   */
  export type EnumDeliveryStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DeliveryStatus'>
    


  /**
   * Reference to a field of type 'DeliveryStatus[]'
   */
  export type ListEnumDeliveryStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DeliveryStatus[]'>
    


  /**
   * Reference to a field of type 'Bytes'
   */
  export type BytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes'>
    


  /**
   * Reference to a field of type 'Bytes[]'
   */
  export type ListBytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes[]'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus[]'
   */
  export type ListEnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus[]'>
    


  /**
   * Reference to a field of type 'OrderLineStatus'
   */
  export type EnumOrderLineStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderLineStatus'>
    


  /**
   * Reference to a field of type 'OrderLineStatus[]'
   */
  export type ListEnumOrderLineStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderLineStatus[]'>
    


  /**
   * Reference to a field of type 'MediaType'
   */
  export type EnumMediaTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MediaType'>
    


  /**
   * Reference to a field of type 'MediaType[]'
   */
  export type ListEnumMediaTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MediaType[]'>
    


  /**
   * Reference to a field of type 'MessageType'
   */
  export type EnumMessageTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MessageType'>
    


  /**
   * Reference to a field of type 'MessageType[]'
   */
  export type ListEnumMessageTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MessageType[]'>
    


  /**
   * Reference to a field of type 'MessageStatus'
   */
  export type EnumMessageStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MessageStatus'>
    


  /**
   * Reference to a field of type 'MessageStatus[]'
   */
  export type ListEnumMessageStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MessageStatus[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type NoticeWhereInput = {
    AND?: NoticeWhereInput | NoticeWhereInput[]
    OR?: NoticeWhereInput[]
    NOT?: NoticeWhereInput | NoticeWhereInput[]
    productUuid?: StringFilter<"Notice"> | string
    url?: StringFilter<"Notice"> | string
    product?: XOR<ProductNullableRelationFilter, ProductWhereInput> | null
  }

  export type NoticeOrderByWithRelationInput = {
    productUuid?: SortOrder
    url?: SortOrder
    product?: ProductOrderByWithRelationInput
  }

  export type NoticeWhereUniqueInput = Prisma.AtLeast<{
    productUuid?: string
    AND?: NoticeWhereInput | NoticeWhereInput[]
    OR?: NoticeWhereInput[]
    NOT?: NoticeWhereInput | NoticeWhereInput[]
    url?: StringFilter<"Notice"> | string
    product?: XOR<ProductNullableRelationFilter, ProductWhereInput> | null
  }, "productUuid">

  export type NoticeOrderByWithAggregationInput = {
    productUuid?: SortOrder
    url?: SortOrder
    _count?: NoticeCountOrderByAggregateInput
    _max?: NoticeMaxOrderByAggregateInput
    _min?: NoticeMinOrderByAggregateInput
  }

  export type NoticeScalarWhereWithAggregatesInput = {
    AND?: NoticeScalarWhereWithAggregatesInput | NoticeScalarWhereWithAggregatesInput[]
    OR?: NoticeScalarWhereWithAggregatesInput[]
    NOT?: NoticeScalarWhereWithAggregatesInput | NoticeScalarWhereWithAggregatesInput[]
    productUuid?: StringWithAggregatesFilter<"Notice"> | string
    url?: StringWithAggregatesFilter<"Notice"> | string
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    uuid?: StringFilter<"Product"> | string
    availableStock?: IntFilter<"Product"> | number
    name?: StringFilter<"Product"> | string
    miniatureHash?: StringNullableFilter<"Product"> | string | null
    cip7?: StringNullableFilter<"Product"> | string | null
    cip13?: StringNullableFilter<"Product"> | string | null
    ean13?: StringFilter<"Product"> | string
    priceWithoutTax?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: StringNullableFilter<"Product"> | string | null
    description?: StringNullableFilter<"Product"> | string | null
    instructionsForUse?: StringNullableFilter<"Product"> | string | null
    composition?: StringNullableFilter<"Product"> | string | null
    weight?: IntFilter<"Product"> | number
    maxQuantityForOrder?: IntNullableFilter<"Product"> | number | null
    status?: EnumProductStatusFilter<"Product"> | $Enums.ProductStatus
    createdAt?: DateTimeFilter<"Product"> | Date | string
    createdBy?: StringFilter<"Product"> | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    updatedBy?: StringFilter<"Product"> | string
    promotions?: ProductPromotionListRelationFilter
    orderLines?: OrderLineListRelationFilter
    images?: ProductImageListRelationFilter
    miniature?: XOR<ImageNullableRelationFilter, ImageWhereInput> | null
    categories?: ProductCategoryListRelationFilter
    laboratory?: XOR<LaboratoryNullableRelationFilter, LaboratoryWhereInput> | null
    locations?: ProductLocationListRelationFilter
    notice?: XOR<NoticeNullableRelationFilter, NoticeWhereInput> | null
  }

  export type ProductOrderByWithRelationInput = {
    uuid?: SortOrder
    availableStock?: SortOrder
    name?: SortOrder
    miniatureHash?: SortOrderInput | SortOrder
    cip7?: SortOrderInput | SortOrder
    cip13?: SortOrderInput | SortOrder
    ean13?: SortOrder
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    laboratoryUuid?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    instructionsForUse?: SortOrderInput | SortOrder
    composition?: SortOrderInput | SortOrder
    weight?: SortOrder
    maxQuantityForOrder?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    promotions?: ProductPromotionOrderByRelationAggregateInput
    orderLines?: OrderLineOrderByRelationAggregateInput
    images?: ProductImageOrderByRelationAggregateInput
    miniature?: ImageOrderByWithRelationInput
    categories?: ProductCategoryOrderByRelationAggregateInput
    laboratory?: LaboratoryOrderByWithRelationInput
    locations?: ProductLocationOrderByRelationAggregateInput
    notice?: NoticeOrderByWithRelationInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    cip7?: string
    cip13?: string
    ean13?: string
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    availableStock?: IntFilter<"Product"> | number
    name?: StringFilter<"Product"> | string
    miniatureHash?: StringNullableFilter<"Product"> | string | null
    priceWithoutTax?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: StringNullableFilter<"Product"> | string | null
    description?: StringNullableFilter<"Product"> | string | null
    instructionsForUse?: StringNullableFilter<"Product"> | string | null
    composition?: StringNullableFilter<"Product"> | string | null
    weight?: IntFilter<"Product"> | number
    maxQuantityForOrder?: IntNullableFilter<"Product"> | number | null
    status?: EnumProductStatusFilter<"Product"> | $Enums.ProductStatus
    createdAt?: DateTimeFilter<"Product"> | Date | string
    createdBy?: StringFilter<"Product"> | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    updatedBy?: StringFilter<"Product"> | string
    promotions?: ProductPromotionListRelationFilter
    orderLines?: OrderLineListRelationFilter
    images?: ProductImageListRelationFilter
    miniature?: XOR<ImageNullableRelationFilter, ImageWhereInput> | null
    categories?: ProductCategoryListRelationFilter
    laboratory?: XOR<LaboratoryNullableRelationFilter, LaboratoryWhereInput> | null
    locations?: ProductLocationListRelationFilter
    notice?: XOR<NoticeNullableRelationFilter, NoticeWhereInput> | null
  }, "uuid" | "cip7" | "cip13" | "ean13">

  export type ProductOrderByWithAggregationInput = {
    uuid?: SortOrder
    availableStock?: SortOrder
    name?: SortOrder
    miniatureHash?: SortOrderInput | SortOrder
    cip7?: SortOrderInput | SortOrder
    cip13?: SortOrderInput | SortOrder
    ean13?: SortOrder
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    laboratoryUuid?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    instructionsForUse?: SortOrderInput | SortOrder
    composition?: SortOrderInput | SortOrder
    weight?: SortOrder
    maxQuantityForOrder?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Product"> | string
    availableStock?: IntWithAggregatesFilter<"Product"> | number
    name?: StringWithAggregatesFilter<"Product"> | string
    miniatureHash?: StringNullableWithAggregatesFilter<"Product"> | string | null
    cip7?: StringNullableWithAggregatesFilter<"Product"> | string | null
    cip13?: StringNullableWithAggregatesFilter<"Product"> | string | null
    ean13?: StringWithAggregatesFilter<"Product"> | string
    priceWithoutTax?: DecimalWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: StringNullableWithAggregatesFilter<"Product"> | string | null
    description?: StringNullableWithAggregatesFilter<"Product"> | string | null
    instructionsForUse?: StringNullableWithAggregatesFilter<"Product"> | string | null
    composition?: StringNullableWithAggregatesFilter<"Product"> | string | null
    weight?: IntWithAggregatesFilter<"Product"> | number
    maxQuantityForOrder?: IntNullableWithAggregatesFilter<"Product"> | number | null
    status?: EnumProductStatusWithAggregatesFilter<"Product"> | $Enums.ProductStatus
    createdAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Product"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    updatedBy?: StringWithAggregatesFilter<"Product"> | string
  }

  export type LocationWhereInput = {
    AND?: LocationWhereInput | LocationWhereInput[]
    OR?: LocationWhereInput[]
    NOT?: LocationWhereInput | LocationWhereInput[]
    uuid?: StringFilter<"Location"> | string
    name?: StringFilter<"Location"> | string
    order?: IntFilter<"Location"> | number
    productLocation?: ProductLocationListRelationFilter
  }

  export type LocationOrderByWithRelationInput = {
    uuid?: SortOrder
    name?: SortOrder
    order?: SortOrder
    productLocation?: ProductLocationOrderByRelationAggregateInput
  }

  export type LocationWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: LocationWhereInput | LocationWhereInput[]
    OR?: LocationWhereInput[]
    NOT?: LocationWhereInput | LocationWhereInput[]
    name?: StringFilter<"Location"> | string
    order?: IntFilter<"Location"> | number
    productLocation?: ProductLocationListRelationFilter
  }, "uuid">

  export type LocationOrderByWithAggregationInput = {
    uuid?: SortOrder
    name?: SortOrder
    order?: SortOrder
    _count?: LocationCountOrderByAggregateInput
    _avg?: LocationAvgOrderByAggregateInput
    _max?: LocationMaxOrderByAggregateInput
    _min?: LocationMinOrderByAggregateInput
    _sum?: LocationSumOrderByAggregateInput
  }

  export type LocationScalarWhereWithAggregatesInput = {
    AND?: LocationScalarWhereWithAggregatesInput | LocationScalarWhereWithAggregatesInput[]
    OR?: LocationScalarWhereWithAggregatesInput[]
    NOT?: LocationScalarWhereWithAggregatesInput | LocationScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Location"> | string
    name?: StringWithAggregatesFilter<"Location"> | string
    order?: IntWithAggregatesFilter<"Location"> | number
  }

  export type ProductLocationWhereInput = {
    AND?: ProductLocationWhereInput | ProductLocationWhereInput[]
    OR?: ProductLocationWhereInput[]
    NOT?: ProductLocationWhereInput | ProductLocationWhereInput[]
    locationUuid?: StringFilter<"ProductLocation"> | string
    productUuid?: StringFilter<"ProductLocation"> | string
    value?: StringFilter<"ProductLocation"> | string
    location?: XOR<LocationRelationFilter, LocationWhereInput>
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }

  export type ProductLocationOrderByWithRelationInput = {
    locationUuid?: SortOrder
    productUuid?: SortOrder
    value?: SortOrder
    location?: LocationOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
  }

  export type ProductLocationWhereUniqueInput = Prisma.AtLeast<{
    locationUuid_productUuid?: ProductLocationLocationUuidProductUuidCompoundUniqueInput
    AND?: ProductLocationWhereInput | ProductLocationWhereInput[]
    OR?: ProductLocationWhereInput[]
    NOT?: ProductLocationWhereInput | ProductLocationWhereInput[]
    locationUuid?: StringFilter<"ProductLocation"> | string
    productUuid?: StringFilter<"ProductLocation"> | string
    value?: StringFilter<"ProductLocation"> | string
    location?: XOR<LocationRelationFilter, LocationWhereInput>
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }, "locationUuid_productUuid">

  export type ProductLocationOrderByWithAggregationInput = {
    locationUuid?: SortOrder
    productUuid?: SortOrder
    value?: SortOrder
    _count?: ProductLocationCountOrderByAggregateInput
    _max?: ProductLocationMaxOrderByAggregateInput
    _min?: ProductLocationMinOrderByAggregateInput
  }

  export type ProductLocationScalarWhereWithAggregatesInput = {
    AND?: ProductLocationScalarWhereWithAggregatesInput | ProductLocationScalarWhereWithAggregatesInput[]
    OR?: ProductLocationScalarWhereWithAggregatesInput[]
    NOT?: ProductLocationScalarWhereWithAggregatesInput | ProductLocationScalarWhereWithAggregatesInput[]
    locationUuid?: StringWithAggregatesFilter<"ProductLocation"> | string
    productUuid?: StringWithAggregatesFilter<"ProductLocation"> | string
    value?: StringWithAggregatesFilter<"ProductLocation"> | string
  }

  export type ImageWhereInput = {
    AND?: ImageWhereInput | ImageWhereInput[]
    OR?: ImageWhereInput[]
    NOT?: ImageWhereInput | ImageWhereInput[]
    hash?: StringFilter<"Image"> | string
    name?: StringFilter<"Image"> | string
    url?: StringFilter<"Image"> | string
    createdAt?: DateTimeFilter<"Image"> | Date | string
    createdBy?: StringFilter<"Image"> | string
    updatedAt?: DateTimeFilter<"Image"> | Date | string
    updatedBy?: StringFilter<"Image"> | string
    categoryImage?: CategoryListRelationFilter
    categoryMiniature?: CategoryListRelationFilter
    productImage?: ProductImageListRelationFilter
    productMiniature?: ProductListRelationFilter
    laboratoryImage?: LaboratoryListRelationFilter
    laboratoryMiniature?: LaboratoryListRelationFilter
    bannerImage?: BannerListRelationFilter
  }

  export type ImageOrderByWithRelationInput = {
    hash?: SortOrder
    name?: SortOrder
    url?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    categoryImage?: CategoryOrderByRelationAggregateInput
    categoryMiniature?: CategoryOrderByRelationAggregateInput
    productImage?: ProductImageOrderByRelationAggregateInput
    productMiniature?: ProductOrderByRelationAggregateInput
    laboratoryImage?: LaboratoryOrderByRelationAggregateInput
    laboratoryMiniature?: LaboratoryOrderByRelationAggregateInput
    bannerImage?: BannerOrderByRelationAggregateInput
  }

  export type ImageWhereUniqueInput = Prisma.AtLeast<{
    hash?: string
    url?: string
    AND?: ImageWhereInput | ImageWhereInput[]
    OR?: ImageWhereInput[]
    NOT?: ImageWhereInput | ImageWhereInput[]
    name?: StringFilter<"Image"> | string
    createdAt?: DateTimeFilter<"Image"> | Date | string
    createdBy?: StringFilter<"Image"> | string
    updatedAt?: DateTimeFilter<"Image"> | Date | string
    updatedBy?: StringFilter<"Image"> | string
    categoryImage?: CategoryListRelationFilter
    categoryMiniature?: CategoryListRelationFilter
    productImage?: ProductImageListRelationFilter
    productMiniature?: ProductListRelationFilter
    laboratoryImage?: LaboratoryListRelationFilter
    laboratoryMiniature?: LaboratoryListRelationFilter
    bannerImage?: BannerListRelationFilter
  }, "hash" | "url">

  export type ImageOrderByWithAggregationInput = {
    hash?: SortOrder
    name?: SortOrder
    url?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    _count?: ImageCountOrderByAggregateInput
    _max?: ImageMaxOrderByAggregateInput
    _min?: ImageMinOrderByAggregateInput
  }

  export type ImageScalarWhereWithAggregatesInput = {
    AND?: ImageScalarWhereWithAggregatesInput | ImageScalarWhereWithAggregatesInput[]
    OR?: ImageScalarWhereWithAggregatesInput[]
    NOT?: ImageScalarWhereWithAggregatesInput | ImageScalarWhereWithAggregatesInput[]
    hash?: StringWithAggregatesFilter<"Image"> | string
    name?: StringWithAggregatesFilter<"Image"> | string
    url?: StringWithAggregatesFilter<"Image"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Image"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Image"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"Image"> | Date | string
    updatedBy?: StringWithAggregatesFilter<"Image"> | string
  }

  export type ProductImageWhereInput = {
    AND?: ProductImageWhereInput | ProductImageWhereInput[]
    OR?: ProductImageWhereInput[]
    NOT?: ProductImageWhereInput | ProductImageWhereInput[]
    imageHash?: StringFilter<"ProductImage"> | string
    productUuid?: StringFilter<"ProductImage"> | string
    product?: XOR<ProductNullableRelationFilter, ProductWhereInput> | null
    image?: XOR<ImageRelationFilter, ImageWhereInput>
  }

  export type ProductImageOrderByWithRelationInput = {
    imageHash?: SortOrder
    productUuid?: SortOrder
    product?: ProductOrderByWithRelationInput
    image?: ImageOrderByWithRelationInput
  }

  export type ProductImageWhereUniqueInput = Prisma.AtLeast<{
    productUuid_imageHash?: ProductImageProductUuidImageHashCompoundUniqueInput
    AND?: ProductImageWhereInput | ProductImageWhereInput[]
    OR?: ProductImageWhereInput[]
    NOT?: ProductImageWhereInput | ProductImageWhereInput[]
    imageHash?: StringFilter<"ProductImage"> | string
    productUuid?: StringFilter<"ProductImage"> | string
    product?: XOR<ProductNullableRelationFilter, ProductWhereInput> | null
    image?: XOR<ImageRelationFilter, ImageWhereInput>
  }, "productUuid_imageHash">

  export type ProductImageOrderByWithAggregationInput = {
    imageHash?: SortOrder
    productUuid?: SortOrder
    _count?: ProductImageCountOrderByAggregateInput
    _max?: ProductImageMaxOrderByAggregateInput
    _min?: ProductImageMinOrderByAggregateInput
  }

  export type ProductImageScalarWhereWithAggregatesInput = {
    AND?: ProductImageScalarWhereWithAggregatesInput | ProductImageScalarWhereWithAggregatesInput[]
    OR?: ProductImageScalarWhereWithAggregatesInput[]
    NOT?: ProductImageScalarWhereWithAggregatesInput | ProductImageScalarWhereWithAggregatesInput[]
    imageHash?: StringWithAggregatesFilter<"ProductImage"> | string
    productUuid?: StringWithAggregatesFilter<"ProductImage"> | string
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    uuid?: StringFilter<"Category"> | string
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    parentUuid?: StringNullableFilter<"Category"> | string | null
    miniatureHash?: StringNullableFilter<"Category"> | string | null
    imageHash?: StringNullableFilter<"Category"> | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    createdBy?: StringFilter<"Category"> | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    updatedBy?: StringFilter<"Category"> | string
    productCategory?: ProductCategoryListRelationFilter
    parent?: XOR<CategoryNullableRelationFilter, CategoryWhereInput> | null
    children?: CategoryListRelationFilter
    image?: XOR<ImageNullableRelationFilter, ImageWhereInput> | null
    miniature?: XOR<ImageNullableRelationFilter, ImageWhereInput> | null
  }

  export type CategoryOrderByWithRelationInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    parentUuid?: SortOrderInput | SortOrder
    miniatureHash?: SortOrderInput | SortOrder
    imageHash?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    productCategory?: ProductCategoryOrderByRelationAggregateInput
    parent?: CategoryOrderByWithRelationInput
    children?: CategoryOrderByRelationAggregateInput
    image?: ImageOrderByWithRelationInput
    miniature?: ImageOrderByWithRelationInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    parentUuid?: StringNullableFilter<"Category"> | string | null
    miniatureHash?: StringNullableFilter<"Category"> | string | null
    imageHash?: StringNullableFilter<"Category"> | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    createdBy?: StringFilter<"Category"> | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    updatedBy?: StringFilter<"Category"> | string
    productCategory?: ProductCategoryListRelationFilter
    parent?: XOR<CategoryNullableRelationFilter, CategoryWhereInput> | null
    children?: CategoryListRelationFilter
    image?: XOR<ImageNullableRelationFilter, ImageWhereInput> | null
    miniature?: XOR<ImageNullableRelationFilter, ImageWhereInput> | null
  }, "uuid">

  export type CategoryOrderByWithAggregationInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    parentUuid?: SortOrderInput | SortOrder
    miniatureHash?: SortOrderInput | SortOrder
    imageHash?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Category"> | string
    name?: StringWithAggregatesFilter<"Category"> | string
    description?: StringNullableWithAggregatesFilter<"Category"> | string | null
    parentUuid?: StringNullableWithAggregatesFilter<"Category"> | string | null
    miniatureHash?: StringNullableWithAggregatesFilter<"Category"> | string | null
    imageHash?: StringNullableWithAggregatesFilter<"Category"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Category"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    updatedBy?: StringWithAggregatesFilter<"Category"> | string
  }

  export type PromotionWhereInput = {
    AND?: PromotionWhereInput | PromotionWhereInput[]
    OR?: PromotionWhereInput[]
    NOT?: PromotionWhereInput | PromotionWhereInput[]
    uuid?: StringFilter<"Promotion"> | string
    amount?: DecimalFilter<"Promotion"> | Decimal | DecimalJsLike | number | string
    type?: EnumReductionTypeFilter<"Promotion"> | $Enums.ReductionType
    name?: StringNullableFilter<"Promotion"> | string | null
    startDate?: DateTimeNullableFilter<"Promotion"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Promotion"> | Date | string | null
    createdAt?: DateTimeFilter<"Promotion"> | Date | string
    createdBy?: StringFilter<"Promotion"> | string
    updatedAt?: DateTimeFilter<"Promotion"> | Date | string
    updatedBy?: StringFilter<"Promotion"> | string
    products?: ProductPromotionListRelationFilter
    orderLines?: OrderLineListRelationFilter
  }

  export type PromotionOrderByWithRelationInput = {
    uuid?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    name?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    products?: ProductPromotionOrderByRelationAggregateInput
    orderLines?: OrderLineOrderByRelationAggregateInput
  }

  export type PromotionWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: PromotionWhereInput | PromotionWhereInput[]
    OR?: PromotionWhereInput[]
    NOT?: PromotionWhereInput | PromotionWhereInput[]
    amount?: DecimalFilter<"Promotion"> | Decimal | DecimalJsLike | number | string
    type?: EnumReductionTypeFilter<"Promotion"> | $Enums.ReductionType
    name?: StringNullableFilter<"Promotion"> | string | null
    startDate?: DateTimeNullableFilter<"Promotion"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Promotion"> | Date | string | null
    createdAt?: DateTimeFilter<"Promotion"> | Date | string
    createdBy?: StringFilter<"Promotion"> | string
    updatedAt?: DateTimeFilter<"Promotion"> | Date | string
    updatedBy?: StringFilter<"Promotion"> | string
    products?: ProductPromotionListRelationFilter
    orderLines?: OrderLineListRelationFilter
  }, "uuid">

  export type PromotionOrderByWithAggregationInput = {
    uuid?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    name?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    _count?: PromotionCountOrderByAggregateInput
    _avg?: PromotionAvgOrderByAggregateInput
    _max?: PromotionMaxOrderByAggregateInput
    _min?: PromotionMinOrderByAggregateInput
    _sum?: PromotionSumOrderByAggregateInput
  }

  export type PromotionScalarWhereWithAggregatesInput = {
    AND?: PromotionScalarWhereWithAggregatesInput | PromotionScalarWhereWithAggregatesInput[]
    OR?: PromotionScalarWhereWithAggregatesInput[]
    NOT?: PromotionScalarWhereWithAggregatesInput | PromotionScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Promotion"> | string
    amount?: DecimalWithAggregatesFilter<"Promotion"> | Decimal | DecimalJsLike | number | string
    type?: EnumReductionTypeWithAggregatesFilter<"Promotion"> | $Enums.ReductionType
    name?: StringNullableWithAggregatesFilter<"Promotion"> | string | null
    startDate?: DateTimeNullableWithAggregatesFilter<"Promotion"> | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter<"Promotion"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Promotion"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Promotion"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"Promotion"> | Date | string
    updatedBy?: StringWithAggregatesFilter<"Promotion"> | string
  }

  export type ProductCategoryWhereInput = {
    AND?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    OR?: ProductCategoryWhereInput[]
    NOT?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    categoryUuid?: StringFilter<"ProductCategory"> | string
    productUuid?: StringFilter<"ProductCategory"> | string
    category?: XOR<CategoryRelationFilter, CategoryWhereInput>
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }

  export type ProductCategoryOrderByWithRelationInput = {
    categoryUuid?: SortOrder
    productUuid?: SortOrder
    category?: CategoryOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
  }

  export type ProductCategoryWhereUniqueInput = Prisma.AtLeast<{
    productUuid_categoryUuid?: ProductCategoryProductUuidCategoryUuidCompoundUniqueInput
    AND?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    OR?: ProductCategoryWhereInput[]
    NOT?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    categoryUuid?: StringFilter<"ProductCategory"> | string
    productUuid?: StringFilter<"ProductCategory"> | string
    category?: XOR<CategoryRelationFilter, CategoryWhereInput>
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }, "productUuid_categoryUuid">

  export type ProductCategoryOrderByWithAggregationInput = {
    categoryUuid?: SortOrder
    productUuid?: SortOrder
    _count?: ProductCategoryCountOrderByAggregateInput
    _max?: ProductCategoryMaxOrderByAggregateInput
    _min?: ProductCategoryMinOrderByAggregateInput
  }

  export type ProductCategoryScalarWhereWithAggregatesInput = {
    AND?: ProductCategoryScalarWhereWithAggregatesInput | ProductCategoryScalarWhereWithAggregatesInput[]
    OR?: ProductCategoryScalarWhereWithAggregatesInput[]
    NOT?: ProductCategoryScalarWhereWithAggregatesInput | ProductCategoryScalarWhereWithAggregatesInput[]
    categoryUuid?: StringWithAggregatesFilter<"ProductCategory"> | string
    productUuid?: StringWithAggregatesFilter<"ProductCategory"> | string
  }

  export type ProductPromotionWhereInput = {
    AND?: ProductPromotionWhereInput | ProductPromotionWhereInput[]
    OR?: ProductPromotionWhereInput[]
    NOT?: ProductPromotionWhereInput | ProductPromotionWhereInput[]
    productUuid?: StringFilter<"ProductPromotion"> | string
    promotionUuid?: StringFilter<"ProductPromotion"> | string
    product?: XOR<ProductRelationFilter, ProductWhereInput>
    promotion?: XOR<PromotionRelationFilter, PromotionWhereInput>
  }

  export type ProductPromotionOrderByWithRelationInput = {
    productUuid?: SortOrder
    promotionUuid?: SortOrder
    product?: ProductOrderByWithRelationInput
    promotion?: PromotionOrderByWithRelationInput
  }

  export type ProductPromotionWhereUniqueInput = Prisma.AtLeast<{
    productUuid_promotionUuid?: ProductPromotionProductUuidPromotionUuidCompoundUniqueInput
    AND?: ProductPromotionWhereInput | ProductPromotionWhereInput[]
    OR?: ProductPromotionWhereInput[]
    NOT?: ProductPromotionWhereInput | ProductPromotionWhereInput[]
    productUuid?: StringFilter<"ProductPromotion"> | string
    promotionUuid?: StringFilter<"ProductPromotion"> | string
    product?: XOR<ProductRelationFilter, ProductWhereInput>
    promotion?: XOR<PromotionRelationFilter, PromotionWhereInput>
  }, "productUuid_promotionUuid">

  export type ProductPromotionOrderByWithAggregationInput = {
    productUuid?: SortOrder
    promotionUuid?: SortOrder
    _count?: ProductPromotionCountOrderByAggregateInput
    _max?: ProductPromotionMaxOrderByAggregateInput
    _min?: ProductPromotionMinOrderByAggregateInput
  }

  export type ProductPromotionScalarWhereWithAggregatesInput = {
    AND?: ProductPromotionScalarWhereWithAggregatesInput | ProductPromotionScalarWhereWithAggregatesInput[]
    OR?: ProductPromotionScalarWhereWithAggregatesInput[]
    NOT?: ProductPromotionScalarWhereWithAggregatesInput | ProductPromotionScalarWhereWithAggregatesInput[]
    productUuid?: StringWithAggregatesFilter<"ProductPromotion"> | string
    promotionUuid?: StringWithAggregatesFilter<"ProductPromotion"> | string
  }

  export type DeliveryMethodWhereInput = {
    AND?: DeliveryMethodWhereInput | DeliveryMethodWhereInput[]
    OR?: DeliveryMethodWhereInput[]
    NOT?: DeliveryMethodWhereInput | DeliveryMethodWhereInput[]
    uuid?: StringFilter<"DeliveryMethod"> | string
    name?: StringFilter<"DeliveryMethod"> | string
    description?: StringFilter<"DeliveryMethod"> | string
    priceRanges?: JsonFilter<"DeliveryMethod">
    type?: EnumDeliveryMethodTypeFilter<"DeliveryMethod"> | $Enums.DeliveryMethodType
    createdAt?: DateTimeFilter<"DeliveryMethod"> | Date | string
    createdBy?: StringFilter<"DeliveryMethod"> | string
    updatedAt?: DateTimeFilter<"DeliveryMethod"> | Date | string
    updatedBy?: StringFilter<"DeliveryMethod"> | string
    deliveries?: DeliveryListRelationFilter
  }

  export type DeliveryMethodOrderByWithRelationInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrder
    priceRanges?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deliveries?: DeliveryOrderByRelationAggregateInput
  }

  export type DeliveryMethodWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: DeliveryMethodWhereInput | DeliveryMethodWhereInput[]
    OR?: DeliveryMethodWhereInput[]
    NOT?: DeliveryMethodWhereInput | DeliveryMethodWhereInput[]
    name?: StringFilter<"DeliveryMethod"> | string
    description?: StringFilter<"DeliveryMethod"> | string
    priceRanges?: JsonFilter<"DeliveryMethod">
    type?: EnumDeliveryMethodTypeFilter<"DeliveryMethod"> | $Enums.DeliveryMethodType
    createdAt?: DateTimeFilter<"DeliveryMethod"> | Date | string
    createdBy?: StringFilter<"DeliveryMethod"> | string
    updatedAt?: DateTimeFilter<"DeliveryMethod"> | Date | string
    updatedBy?: StringFilter<"DeliveryMethod"> | string
    deliveries?: DeliveryListRelationFilter
  }, "uuid">

  export type DeliveryMethodOrderByWithAggregationInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrder
    priceRanges?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    _count?: DeliveryMethodCountOrderByAggregateInput
    _max?: DeliveryMethodMaxOrderByAggregateInput
    _min?: DeliveryMethodMinOrderByAggregateInput
  }

  export type DeliveryMethodScalarWhereWithAggregatesInput = {
    AND?: DeliveryMethodScalarWhereWithAggregatesInput | DeliveryMethodScalarWhereWithAggregatesInput[]
    OR?: DeliveryMethodScalarWhereWithAggregatesInput[]
    NOT?: DeliveryMethodScalarWhereWithAggregatesInput | DeliveryMethodScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"DeliveryMethod"> | string
    name?: StringWithAggregatesFilter<"DeliveryMethod"> | string
    description?: StringWithAggregatesFilter<"DeliveryMethod"> | string
    priceRanges?: JsonWithAggregatesFilter<"DeliveryMethod">
    type?: EnumDeliveryMethodTypeWithAggregatesFilter<"DeliveryMethod"> | $Enums.DeliveryMethodType
    createdAt?: DateTimeWithAggregatesFilter<"DeliveryMethod"> | Date | string
    createdBy?: StringWithAggregatesFilter<"DeliveryMethod"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"DeliveryMethod"> | Date | string
    updatedBy?: StringWithAggregatesFilter<"DeliveryMethod"> | string
  }

  export type DeliveryWhereInput = {
    AND?: DeliveryWhereInput | DeliveryWhereInput[]
    OR?: DeliveryWhereInput[]
    NOT?: DeliveryWhereInput | DeliveryWhereInput[]
    uuid?: StringFilter<"Delivery"> | string
    orderUuid?: StringFilter<"Delivery"> | string
    price?: DecimalFilter<"Delivery"> | Decimal | DecimalJsLike | number | string
    pickupId?: StringNullableFilter<"Delivery"> | string | null
    pickingDate?: DateTimeNullableFilter<"Delivery"> | Date | string | null
    trackingNumber?: StringNullableFilter<"Delivery"> | string | null
    direction?: EnumDeliveryDirectionFilter<"Delivery"> | $Enums.DeliveryDirection
    weight?: IntFilter<"Delivery"> | number
    status?: EnumDeliveryStatusFilter<"Delivery"> | $Enums.DeliveryStatus
    methodUuid?: StringFilter<"Delivery"> | string
    senderAddressUuid?: StringFilter<"Delivery"> | string
    senderPhoneUuid?: StringFilter<"Delivery"> | string
    senderEmailUuid?: StringFilter<"Delivery"> | string
    receiverAddressUuid?: StringFilter<"Delivery"> | string
    receiverPhoneUuid?: StringFilter<"Delivery"> | string
    receiverEmailUuid?: StringFilter<"Delivery"> | string
    data?: BytesNullableFilter<"Delivery"> | Buffer | null
    createdAt?: DateTimeFilter<"Delivery"> | Date | string
    createdBy?: StringFilter<"Delivery"> | string
    updatedAt?: DateTimeFilter<"Delivery"> | Date | string
    updatedBy?: StringFilter<"Delivery"> | string
    method?: XOR<DeliveryMethodRelationFilter, DeliveryMethodWhereInput>
    senderAddress?: XOR<MediaRelationFilter, MediaWhereInput>
    senderPhone?: XOR<MediaRelationFilter, MediaWhereInput>
    senderEmail?: XOR<MediaRelationFilter, MediaWhereInput>
    receiverAddress?: XOR<MediaRelationFilter, MediaWhereInput>
    receiverPhone?: XOR<MediaRelationFilter, MediaWhereInput>
    receiverEmail?: XOR<MediaRelationFilter, MediaWhereInput>
    order?: XOR<OrderRelationFilter, OrderWhereInput>
  }

  export type DeliveryOrderByWithRelationInput = {
    uuid?: SortOrder
    orderUuid?: SortOrder
    price?: SortOrder
    pickupId?: SortOrderInput | SortOrder
    pickingDate?: SortOrderInput | SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    direction?: SortOrder
    weight?: SortOrder
    status?: SortOrder
    methodUuid?: SortOrder
    senderAddressUuid?: SortOrder
    senderPhoneUuid?: SortOrder
    senderEmailUuid?: SortOrder
    receiverAddressUuid?: SortOrder
    receiverPhoneUuid?: SortOrder
    receiverEmailUuid?: SortOrder
    data?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    method?: DeliveryMethodOrderByWithRelationInput
    senderAddress?: MediaOrderByWithRelationInput
    senderPhone?: MediaOrderByWithRelationInput
    senderEmail?: MediaOrderByWithRelationInput
    receiverAddress?: MediaOrderByWithRelationInput
    receiverPhone?: MediaOrderByWithRelationInput
    receiverEmail?: MediaOrderByWithRelationInput
    order?: OrderOrderByWithRelationInput
  }

  export type DeliveryWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: DeliveryWhereInput | DeliveryWhereInput[]
    OR?: DeliveryWhereInput[]
    NOT?: DeliveryWhereInput | DeliveryWhereInput[]
    orderUuid?: StringFilter<"Delivery"> | string
    price?: DecimalFilter<"Delivery"> | Decimal | DecimalJsLike | number | string
    pickupId?: StringNullableFilter<"Delivery"> | string | null
    pickingDate?: DateTimeNullableFilter<"Delivery"> | Date | string | null
    trackingNumber?: StringNullableFilter<"Delivery"> | string | null
    direction?: EnumDeliveryDirectionFilter<"Delivery"> | $Enums.DeliveryDirection
    weight?: IntFilter<"Delivery"> | number
    status?: EnumDeliveryStatusFilter<"Delivery"> | $Enums.DeliveryStatus
    methodUuid?: StringFilter<"Delivery"> | string
    senderAddressUuid?: StringFilter<"Delivery"> | string
    senderPhoneUuid?: StringFilter<"Delivery"> | string
    senderEmailUuid?: StringFilter<"Delivery"> | string
    receiverAddressUuid?: StringFilter<"Delivery"> | string
    receiverPhoneUuid?: StringFilter<"Delivery"> | string
    receiverEmailUuid?: StringFilter<"Delivery"> | string
    data?: BytesNullableFilter<"Delivery"> | Buffer | null
    createdAt?: DateTimeFilter<"Delivery"> | Date | string
    createdBy?: StringFilter<"Delivery"> | string
    updatedAt?: DateTimeFilter<"Delivery"> | Date | string
    updatedBy?: StringFilter<"Delivery"> | string
    method?: XOR<DeliveryMethodRelationFilter, DeliveryMethodWhereInput>
    senderAddress?: XOR<MediaRelationFilter, MediaWhereInput>
    senderPhone?: XOR<MediaRelationFilter, MediaWhereInput>
    senderEmail?: XOR<MediaRelationFilter, MediaWhereInput>
    receiverAddress?: XOR<MediaRelationFilter, MediaWhereInput>
    receiverPhone?: XOR<MediaRelationFilter, MediaWhereInput>
    receiverEmail?: XOR<MediaRelationFilter, MediaWhereInput>
    order?: XOR<OrderRelationFilter, OrderWhereInput>
  }, "uuid">

  export type DeliveryOrderByWithAggregationInput = {
    uuid?: SortOrder
    orderUuid?: SortOrder
    price?: SortOrder
    pickupId?: SortOrderInput | SortOrder
    pickingDate?: SortOrderInput | SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    direction?: SortOrder
    weight?: SortOrder
    status?: SortOrder
    methodUuid?: SortOrder
    senderAddressUuid?: SortOrder
    senderPhoneUuid?: SortOrder
    senderEmailUuid?: SortOrder
    receiverAddressUuid?: SortOrder
    receiverPhoneUuid?: SortOrder
    receiverEmailUuid?: SortOrder
    data?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    _count?: DeliveryCountOrderByAggregateInput
    _avg?: DeliveryAvgOrderByAggregateInput
    _max?: DeliveryMaxOrderByAggregateInput
    _min?: DeliveryMinOrderByAggregateInput
    _sum?: DeliverySumOrderByAggregateInput
  }

  export type DeliveryScalarWhereWithAggregatesInput = {
    AND?: DeliveryScalarWhereWithAggregatesInput | DeliveryScalarWhereWithAggregatesInput[]
    OR?: DeliveryScalarWhereWithAggregatesInput[]
    NOT?: DeliveryScalarWhereWithAggregatesInput | DeliveryScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Delivery"> | string
    orderUuid?: StringWithAggregatesFilter<"Delivery"> | string
    price?: DecimalWithAggregatesFilter<"Delivery"> | Decimal | DecimalJsLike | number | string
    pickupId?: StringNullableWithAggregatesFilter<"Delivery"> | string | null
    pickingDate?: DateTimeNullableWithAggregatesFilter<"Delivery"> | Date | string | null
    trackingNumber?: StringNullableWithAggregatesFilter<"Delivery"> | string | null
    direction?: EnumDeliveryDirectionWithAggregatesFilter<"Delivery"> | $Enums.DeliveryDirection
    weight?: IntWithAggregatesFilter<"Delivery"> | number
    status?: EnumDeliveryStatusWithAggregatesFilter<"Delivery"> | $Enums.DeliveryStatus
    methodUuid?: StringWithAggregatesFilter<"Delivery"> | string
    senderAddressUuid?: StringWithAggregatesFilter<"Delivery"> | string
    senderPhoneUuid?: StringWithAggregatesFilter<"Delivery"> | string
    senderEmailUuid?: StringWithAggregatesFilter<"Delivery"> | string
    receiverAddressUuid?: StringWithAggregatesFilter<"Delivery"> | string
    receiverPhoneUuid?: StringWithAggregatesFilter<"Delivery"> | string
    receiverEmailUuid?: StringWithAggregatesFilter<"Delivery"> | string
    data?: BytesNullableWithAggregatesFilter<"Delivery"> | Buffer | null
    createdAt?: DateTimeWithAggregatesFilter<"Delivery"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Delivery"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"Delivery"> | Date | string
    updatedBy?: StringWithAggregatesFilter<"Delivery"> | string
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    uuid?: StringFilter<"Payment"> | string
    orderUuid?: StringFilter<"Payment"> | string
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    createdBy?: StringFilter<"Payment"> | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    updatedBy?: StringFilter<"Payment"> | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
  }

  export type PaymentOrderByWithRelationInput = {
    uuid?: SortOrder
    orderUuid?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    order?: OrderOrderByWithRelationInput
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    orderUuid?: string
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    amount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    createdBy?: StringFilter<"Payment"> | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    updatedBy?: StringFilter<"Payment"> | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
  }, "uuid" | "orderUuid">

  export type PaymentOrderByWithAggregationInput = {
    uuid?: SortOrder
    orderUuid?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Payment"> | string
    orderUuid?: StringWithAggregatesFilter<"Payment"> | string
    amount?: DecimalWithAggregatesFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    status?: EnumPaymentStatusWithAggregatesFilter<"Payment"> | $Enums.PaymentStatus
    createdAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Payment"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    updatedBy?: StringWithAggregatesFilter<"Payment"> | string
  }

  export type OrderLineWhereInput = {
    AND?: OrderLineWhereInput | OrderLineWhereInput[]
    OR?: OrderLineWhereInput[]
    NOT?: OrderLineWhereInput | OrderLineWhereInput[]
    productUuid?: StringFilter<"OrderLine"> | string
    orderUuid?: StringFilter<"OrderLine"> | string
    priceWithoutTax?: DecimalFilter<"OrderLine"> | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFilter<"OrderLine"> | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFilter<"OrderLine"> | number
    preparedQuantity?: IntFilter<"OrderLine"> | number
    promotionUuid?: StringNullableFilter<"OrderLine"> | string | null
    status?: EnumOrderLineStatusFilter<"OrderLine"> | $Enums.OrderLineStatus
    createdAt?: DateTimeFilter<"OrderLine"> | Date | string
    createdBy?: StringFilter<"OrderLine"> | string
    updatedAt?: DateTimeFilter<"OrderLine"> | Date | string
    updatedBy?: StringFilter<"OrderLine"> | string
    product?: XOR<ProductRelationFilter, ProductWhereInput>
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    promotion?: XOR<PromotionNullableRelationFilter, PromotionWhereInput> | null
  }

  export type OrderLineOrderByWithRelationInput = {
    productUuid?: SortOrder
    orderUuid?: SortOrder
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    expectedQuantity?: SortOrder
    preparedQuantity?: SortOrder
    promotionUuid?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    product?: ProductOrderByWithRelationInput
    order?: OrderOrderByWithRelationInput
    promotion?: PromotionOrderByWithRelationInput
  }

  export type OrderLineWhereUniqueInput = Prisma.AtLeast<{
    orderUuid_productUuid_createdAt?: OrderLineOrderUuidProductUuidCreatedAtCompoundUniqueInput
    AND?: OrderLineWhereInput | OrderLineWhereInput[]
    OR?: OrderLineWhereInput[]
    NOT?: OrderLineWhereInput | OrderLineWhereInput[]
    productUuid?: StringFilter<"OrderLine"> | string
    orderUuid?: StringFilter<"OrderLine"> | string
    priceWithoutTax?: DecimalFilter<"OrderLine"> | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFilter<"OrderLine"> | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFilter<"OrderLine"> | number
    preparedQuantity?: IntFilter<"OrderLine"> | number
    promotionUuid?: StringNullableFilter<"OrderLine"> | string | null
    status?: EnumOrderLineStatusFilter<"OrderLine"> | $Enums.OrderLineStatus
    createdAt?: DateTimeFilter<"OrderLine"> | Date | string
    createdBy?: StringFilter<"OrderLine"> | string
    updatedAt?: DateTimeFilter<"OrderLine"> | Date | string
    updatedBy?: StringFilter<"OrderLine"> | string
    product?: XOR<ProductRelationFilter, ProductWhereInput>
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    promotion?: XOR<PromotionNullableRelationFilter, PromotionWhereInput> | null
  }, "orderUuid_productUuid_createdAt">

  export type OrderLineOrderByWithAggregationInput = {
    productUuid?: SortOrder
    orderUuid?: SortOrder
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    expectedQuantity?: SortOrder
    preparedQuantity?: SortOrder
    promotionUuid?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    _count?: OrderLineCountOrderByAggregateInput
    _avg?: OrderLineAvgOrderByAggregateInput
    _max?: OrderLineMaxOrderByAggregateInput
    _min?: OrderLineMinOrderByAggregateInput
    _sum?: OrderLineSumOrderByAggregateInput
  }

  export type OrderLineScalarWhereWithAggregatesInput = {
    AND?: OrderLineScalarWhereWithAggregatesInput | OrderLineScalarWhereWithAggregatesInput[]
    OR?: OrderLineScalarWhereWithAggregatesInput[]
    NOT?: OrderLineScalarWhereWithAggregatesInput | OrderLineScalarWhereWithAggregatesInput[]
    productUuid?: StringWithAggregatesFilter<"OrderLine"> | string
    orderUuid?: StringWithAggregatesFilter<"OrderLine"> | string
    priceWithoutTax?: DecimalWithAggregatesFilter<"OrderLine"> | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalWithAggregatesFilter<"OrderLine"> | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntWithAggregatesFilter<"OrderLine"> | number
    preparedQuantity?: IntWithAggregatesFilter<"OrderLine"> | number
    promotionUuid?: StringNullableWithAggregatesFilter<"OrderLine"> | string | null
    status?: EnumOrderLineStatusWithAggregatesFilter<"OrderLine"> | $Enums.OrderLineStatus
    createdAt?: DateTimeWithAggregatesFilter<"OrderLine"> | Date | string
    createdBy?: StringWithAggregatesFilter<"OrderLine"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"OrderLine"> | Date | string
    updatedBy?: StringWithAggregatesFilter<"OrderLine"> | string
  }

  export type MediaWhereInput = {
    AND?: MediaWhereInput | MediaWhereInput[]
    OR?: MediaWhereInput[]
    NOT?: MediaWhereInput | MediaWhereInput[]
    uuid?: StringFilter<"Media"> | string
    data?: JsonFilter<"Media">
    type?: EnumMediaTypeFilter<"Media"> | $Enums.MediaType
    name?: StringNullableFilter<"Media"> | string | null
    deliveryOrder?: OrderListRelationFilter
    billingOrder?: OrderListRelationFilter
    phoneOrder?: OrderListRelationFilter
    emailOrder?: OrderListRelationFilter
    deliverySenderAddress?: DeliveryListRelationFilter
    deliverySenderPhone?: DeliveryListRelationFilter
    deliverySenderEmail?: DeliveryListRelationFilter
    deliveryReceiverAddress?: DeliveryListRelationFilter
    deliveryReceiverPhone?: DeliveryListRelationFilter
    deliveryReceiverEmail?: DeliveryListRelationFilter
    customerAddress?: CustomerListRelationFilter
    customerPhone?: CustomerListRelationFilter
  }

  export type MediaOrderByWithRelationInput = {
    uuid?: SortOrder
    data?: SortOrder
    type?: SortOrder
    name?: SortOrderInput | SortOrder
    deliveryOrder?: OrderOrderByRelationAggregateInput
    billingOrder?: OrderOrderByRelationAggregateInput
    phoneOrder?: OrderOrderByRelationAggregateInput
    emailOrder?: OrderOrderByRelationAggregateInput
    deliverySenderAddress?: DeliveryOrderByRelationAggregateInput
    deliverySenderPhone?: DeliveryOrderByRelationAggregateInput
    deliverySenderEmail?: DeliveryOrderByRelationAggregateInput
    deliveryReceiverAddress?: DeliveryOrderByRelationAggregateInput
    deliveryReceiverPhone?: DeliveryOrderByRelationAggregateInput
    deliveryReceiverEmail?: DeliveryOrderByRelationAggregateInput
    customerAddress?: CustomerOrderByRelationAggregateInput
    customerPhone?: CustomerOrderByRelationAggregateInput
  }

  export type MediaWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: MediaWhereInput | MediaWhereInput[]
    OR?: MediaWhereInput[]
    NOT?: MediaWhereInput | MediaWhereInput[]
    data?: JsonFilter<"Media">
    type?: EnumMediaTypeFilter<"Media"> | $Enums.MediaType
    name?: StringNullableFilter<"Media"> | string | null
    deliveryOrder?: OrderListRelationFilter
    billingOrder?: OrderListRelationFilter
    phoneOrder?: OrderListRelationFilter
    emailOrder?: OrderListRelationFilter
    deliverySenderAddress?: DeliveryListRelationFilter
    deliverySenderPhone?: DeliveryListRelationFilter
    deliverySenderEmail?: DeliveryListRelationFilter
    deliveryReceiverAddress?: DeliveryListRelationFilter
    deliveryReceiverPhone?: DeliveryListRelationFilter
    deliveryReceiverEmail?: DeliveryListRelationFilter
    customerAddress?: CustomerListRelationFilter
    customerPhone?: CustomerListRelationFilter
  }, "uuid">

  export type MediaOrderByWithAggregationInput = {
    uuid?: SortOrder
    data?: SortOrder
    type?: SortOrder
    name?: SortOrderInput | SortOrder
    _count?: MediaCountOrderByAggregateInput
    _max?: MediaMaxOrderByAggregateInput
    _min?: MediaMinOrderByAggregateInput
  }

  export type MediaScalarWhereWithAggregatesInput = {
    AND?: MediaScalarWhereWithAggregatesInput | MediaScalarWhereWithAggregatesInput[]
    OR?: MediaScalarWhereWithAggregatesInput[]
    NOT?: MediaScalarWhereWithAggregatesInput | MediaScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Media"> | string
    data?: JsonWithAggregatesFilter<"Media">
    type?: EnumMediaTypeWithAggregatesFilter<"Media"> | $Enums.MediaType
    name?: StringNullableWithAggregatesFilter<"Media"> | string | null
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    uuid?: StringFilter<"Order"> | string
    deliveryAddressUuid?: StringFilter<"Order"> | string
    billingAddressUuid?: StringFilter<"Order"> | string
    phoneUuid?: StringFilter<"Order"> | string
    emailUuid?: StringFilter<"Order"> | string
    idPasserelle?: IntNullableFilter<"Order"> | number | null
    customerUuid?: StringNullableFilter<"Order"> | string | null
    customerMessage?: StringNullableFilter<"Order"> | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    createdBy?: StringFilter<"Order"> | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    updatedBy?: StringFilter<"Order"> | string
    lines?: OrderLineListRelationFilter
    deliveryAddress?: XOR<MediaRelationFilter, MediaWhereInput>
    billingAddress?: XOR<MediaRelationFilter, MediaWhereInput>
    phone?: XOR<MediaRelationFilter, MediaWhereInput>
    email?: XOR<MediaRelationFilter, MediaWhereInput>
    payment?: XOR<PaymentNullableRelationFilter, PaymentWhereInput> | null
    messages?: MessageListRelationFilter
    deliveries?: DeliveryListRelationFilter
    customer?: XOR<CustomerNullableRelationFilter, CustomerWhereInput> | null
    invoice?: XOR<InvoiceNullableRelationFilter, InvoiceWhereInput> | null
  }

  export type OrderOrderByWithRelationInput = {
    uuid?: SortOrder
    deliveryAddressUuid?: SortOrder
    billingAddressUuid?: SortOrder
    phoneUuid?: SortOrder
    emailUuid?: SortOrder
    idPasserelle?: SortOrderInput | SortOrder
    customerUuid?: SortOrderInput | SortOrder
    customerMessage?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    lines?: OrderLineOrderByRelationAggregateInput
    deliveryAddress?: MediaOrderByWithRelationInput
    billingAddress?: MediaOrderByWithRelationInput
    phone?: MediaOrderByWithRelationInput
    email?: MediaOrderByWithRelationInput
    payment?: PaymentOrderByWithRelationInput
    messages?: MessageOrderByRelationAggregateInput
    deliveries?: DeliveryOrderByRelationAggregateInput
    customer?: CustomerOrderByWithRelationInput
    invoice?: InvoiceOrderByWithRelationInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    idPasserelle?: number
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    deliveryAddressUuid?: StringFilter<"Order"> | string
    billingAddressUuid?: StringFilter<"Order"> | string
    phoneUuid?: StringFilter<"Order"> | string
    emailUuid?: StringFilter<"Order"> | string
    customerUuid?: StringNullableFilter<"Order"> | string | null
    customerMessage?: StringNullableFilter<"Order"> | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    createdBy?: StringFilter<"Order"> | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    updatedBy?: StringFilter<"Order"> | string
    lines?: OrderLineListRelationFilter
    deliveryAddress?: XOR<MediaRelationFilter, MediaWhereInput>
    billingAddress?: XOR<MediaRelationFilter, MediaWhereInput>
    phone?: XOR<MediaRelationFilter, MediaWhereInput>
    email?: XOR<MediaRelationFilter, MediaWhereInput>
    payment?: XOR<PaymentNullableRelationFilter, PaymentWhereInput> | null
    messages?: MessageListRelationFilter
    deliveries?: DeliveryListRelationFilter
    customer?: XOR<CustomerNullableRelationFilter, CustomerWhereInput> | null
    invoice?: XOR<InvoiceNullableRelationFilter, InvoiceWhereInput> | null
  }, "uuid" | "idPasserelle">

  export type OrderOrderByWithAggregationInput = {
    uuid?: SortOrder
    deliveryAddressUuid?: SortOrder
    billingAddressUuid?: SortOrder
    phoneUuid?: SortOrder
    emailUuid?: SortOrder
    idPasserelle?: SortOrderInput | SortOrder
    customerUuid?: SortOrderInput | SortOrder
    customerMessage?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    _count?: OrderCountOrderByAggregateInput
    _avg?: OrderAvgOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
    _sum?: OrderSumOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Order"> | string
    deliveryAddressUuid?: StringWithAggregatesFilter<"Order"> | string
    billingAddressUuid?: StringWithAggregatesFilter<"Order"> | string
    phoneUuid?: StringWithAggregatesFilter<"Order"> | string
    emailUuid?: StringWithAggregatesFilter<"Order"> | string
    idPasserelle?: IntNullableWithAggregatesFilter<"Order"> | number | null
    customerUuid?: StringNullableWithAggregatesFilter<"Order"> | string | null
    customerMessage?: StringNullableWithAggregatesFilter<"Order"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Order"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    updatedBy?: StringWithAggregatesFilter<"Order"> | string
  }

  export type LaboratoryWhereInput = {
    AND?: LaboratoryWhereInput | LaboratoryWhereInput[]
    OR?: LaboratoryWhereInput[]
    NOT?: LaboratoryWhereInput | LaboratoryWhereInput[]
    uuid?: StringFilter<"Laboratory"> | string
    name?: StringFilter<"Laboratory"> | string
    description?: StringNullableFilter<"Laboratory"> | string | null
    imageHash?: StringNullableFilter<"Laboratory"> | string | null
    miniatureHash?: StringNullableFilter<"Laboratory"> | string | null
    createdAt?: DateTimeFilter<"Laboratory"> | Date | string
    createdBy?: StringFilter<"Laboratory"> | string
    updatedAt?: DateTimeFilter<"Laboratory"> | Date | string
    updatedBy?: StringFilter<"Laboratory"> | string
    product?: ProductListRelationFilter
    image?: XOR<ImageNullableRelationFilter, ImageWhereInput> | null
    miniature?: XOR<ImageNullableRelationFilter, ImageWhereInput> | null
  }

  export type LaboratoryOrderByWithRelationInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    imageHash?: SortOrderInput | SortOrder
    miniatureHash?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    product?: ProductOrderByRelationAggregateInput
    image?: ImageOrderByWithRelationInput
    miniature?: ImageOrderByWithRelationInput
  }

  export type LaboratoryWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: LaboratoryWhereInput | LaboratoryWhereInput[]
    OR?: LaboratoryWhereInput[]
    NOT?: LaboratoryWhereInput | LaboratoryWhereInput[]
    name?: StringFilter<"Laboratory"> | string
    description?: StringNullableFilter<"Laboratory"> | string | null
    imageHash?: StringNullableFilter<"Laboratory"> | string | null
    miniatureHash?: StringNullableFilter<"Laboratory"> | string | null
    createdAt?: DateTimeFilter<"Laboratory"> | Date | string
    createdBy?: StringFilter<"Laboratory"> | string
    updatedAt?: DateTimeFilter<"Laboratory"> | Date | string
    updatedBy?: StringFilter<"Laboratory"> | string
    product?: ProductListRelationFilter
    image?: XOR<ImageNullableRelationFilter, ImageWhereInput> | null
    miniature?: XOR<ImageNullableRelationFilter, ImageWhereInput> | null
  }, "uuid">

  export type LaboratoryOrderByWithAggregationInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    imageHash?: SortOrderInput | SortOrder
    miniatureHash?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    _count?: LaboratoryCountOrderByAggregateInput
    _max?: LaboratoryMaxOrderByAggregateInput
    _min?: LaboratoryMinOrderByAggregateInput
  }

  export type LaboratoryScalarWhereWithAggregatesInput = {
    AND?: LaboratoryScalarWhereWithAggregatesInput | LaboratoryScalarWhereWithAggregatesInput[]
    OR?: LaboratoryScalarWhereWithAggregatesInput[]
    NOT?: LaboratoryScalarWhereWithAggregatesInput | LaboratoryScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Laboratory"> | string
    name?: StringWithAggregatesFilter<"Laboratory"> | string
    description?: StringNullableWithAggregatesFilter<"Laboratory"> | string | null
    imageHash?: StringNullableWithAggregatesFilter<"Laboratory"> | string | null
    miniatureHash?: StringNullableWithAggregatesFilter<"Laboratory"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Laboratory"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Laboratory"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"Laboratory"> | Date | string
    updatedBy?: StringWithAggregatesFilter<"Laboratory"> | string
  }

  export type MessageWhereInput = {
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    uuid?: StringFilter<"Message"> | string
    data?: JsonFilter<"Message">
    type?: EnumMessageTypeFilter<"Message"> | $Enums.MessageType
    status?: EnumMessageStatusFilter<"Message"> | $Enums.MessageStatus
    orderUuid?: StringNullableFilter<"Message"> | string | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    createdBy?: StringFilter<"Message"> | string
    updatedAt?: DateTimeFilter<"Message"> | Date | string
    updatedBy?: StringFilter<"Message"> | string
    order?: XOR<OrderNullableRelationFilter, OrderWhereInput> | null
  }

  export type MessageOrderByWithRelationInput = {
    uuid?: SortOrder
    data?: SortOrder
    type?: SortOrder
    status?: SortOrder
    orderUuid?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    order?: OrderOrderByWithRelationInput
  }

  export type MessageWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    data?: JsonFilter<"Message">
    type?: EnumMessageTypeFilter<"Message"> | $Enums.MessageType
    status?: EnumMessageStatusFilter<"Message"> | $Enums.MessageStatus
    orderUuid?: StringNullableFilter<"Message"> | string | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    createdBy?: StringFilter<"Message"> | string
    updatedAt?: DateTimeFilter<"Message"> | Date | string
    updatedBy?: StringFilter<"Message"> | string
    order?: XOR<OrderNullableRelationFilter, OrderWhereInput> | null
  }, "uuid">

  export type MessageOrderByWithAggregationInput = {
    uuid?: SortOrder
    data?: SortOrder
    type?: SortOrder
    status?: SortOrder
    orderUuid?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    _count?: MessageCountOrderByAggregateInput
    _max?: MessageMaxOrderByAggregateInput
    _min?: MessageMinOrderByAggregateInput
  }

  export type MessageScalarWhereWithAggregatesInput = {
    AND?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    OR?: MessageScalarWhereWithAggregatesInput[]
    NOT?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Message"> | string
    data?: JsonWithAggregatesFilter<"Message">
    type?: EnumMessageTypeWithAggregatesFilter<"Message"> | $Enums.MessageType
    status?: EnumMessageStatusWithAggregatesFilter<"Message"> | $Enums.MessageStatus
    orderUuid?: StringNullableWithAggregatesFilter<"Message"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Message"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Message"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"Message"> | Date | string
    updatedBy?: StringWithAggregatesFilter<"Message"> | string
  }

  export type CustomerWhereInput = {
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    uuid?: StringFilter<"Customer"> | string
    email?: StringFilter<"Customer"> | string
    phoneUuid?: StringNullableFilter<"Customer"> | string | null
    firstname?: StringNullableFilter<"Customer"> | string | null
    lastname?: StringNullableFilter<"Customer"> | string | null
    addressUuid?: StringNullableFilter<"Customer"> | string | null
    phone?: XOR<MediaNullableRelationFilter, MediaWhereInput> | null
    address?: XOR<MediaNullableRelationFilter, MediaWhereInput> | null
    orders?: OrderListRelationFilter
  }

  export type CustomerOrderByWithRelationInput = {
    uuid?: SortOrder
    email?: SortOrder
    phoneUuid?: SortOrderInput | SortOrder
    firstname?: SortOrderInput | SortOrder
    lastname?: SortOrderInput | SortOrder
    addressUuid?: SortOrderInput | SortOrder
    phone?: MediaOrderByWithRelationInput
    address?: MediaOrderByWithRelationInput
    orders?: OrderOrderByRelationAggregateInput
  }

  export type CustomerWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    email?: string
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    phoneUuid?: StringNullableFilter<"Customer"> | string | null
    firstname?: StringNullableFilter<"Customer"> | string | null
    lastname?: StringNullableFilter<"Customer"> | string | null
    addressUuid?: StringNullableFilter<"Customer"> | string | null
    phone?: XOR<MediaNullableRelationFilter, MediaWhereInput> | null
    address?: XOR<MediaNullableRelationFilter, MediaWhereInput> | null
    orders?: OrderListRelationFilter
  }, "uuid" | "email">

  export type CustomerOrderByWithAggregationInput = {
    uuid?: SortOrder
    email?: SortOrder
    phoneUuid?: SortOrderInput | SortOrder
    firstname?: SortOrderInput | SortOrder
    lastname?: SortOrderInput | SortOrder
    addressUuid?: SortOrderInput | SortOrder
    _count?: CustomerCountOrderByAggregateInput
    _max?: CustomerMaxOrderByAggregateInput
    _min?: CustomerMinOrderByAggregateInput
  }

  export type CustomerScalarWhereWithAggregatesInput = {
    AND?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    OR?: CustomerScalarWhereWithAggregatesInput[]
    NOT?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Customer"> | string
    email?: StringWithAggregatesFilter<"Customer"> | string
    phoneUuid?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    firstname?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    lastname?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    addressUuid?: StringNullableWithAggregatesFilter<"Customer"> | string | null
  }

  export type InvoiceWhereInput = {
    AND?: InvoiceWhereInput | InvoiceWhereInput[]
    OR?: InvoiceWhereInput[]
    NOT?: InvoiceWhereInput | InvoiceWhereInput[]
    invoiceNumber?: StringFilter<"Invoice"> | string
    orderUuid?: StringFilter<"Invoice"> | string
    data?: JsonFilter<"Invoice">
    createdAt?: DateTimeFilter<"Invoice"> | Date | string
    createdBy?: StringFilter<"Invoice"> | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
  }

  export type InvoiceOrderByWithRelationInput = {
    invoiceNumber?: SortOrder
    orderUuid?: SortOrder
    data?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    order?: OrderOrderByWithRelationInput
  }

  export type InvoiceWhereUniqueInput = Prisma.AtLeast<{
    invoiceNumber?: string
    orderUuid?: string
    AND?: InvoiceWhereInput | InvoiceWhereInput[]
    OR?: InvoiceWhereInput[]
    NOT?: InvoiceWhereInput | InvoiceWhereInput[]
    data?: JsonFilter<"Invoice">
    createdAt?: DateTimeFilter<"Invoice"> | Date | string
    createdBy?: StringFilter<"Invoice"> | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
  }, "invoiceNumber" | "orderUuid">

  export type InvoiceOrderByWithAggregationInput = {
    invoiceNumber?: SortOrder
    orderUuid?: SortOrder
    data?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    _count?: InvoiceCountOrderByAggregateInput
    _max?: InvoiceMaxOrderByAggregateInput
    _min?: InvoiceMinOrderByAggregateInput
  }

  export type InvoiceScalarWhereWithAggregatesInput = {
    AND?: InvoiceScalarWhereWithAggregatesInput | InvoiceScalarWhereWithAggregatesInput[]
    OR?: InvoiceScalarWhereWithAggregatesInput[]
    NOT?: InvoiceScalarWhereWithAggregatesInput | InvoiceScalarWhereWithAggregatesInput[]
    invoiceNumber?: StringWithAggregatesFilter<"Invoice"> | string
    orderUuid?: StringWithAggregatesFilter<"Invoice"> | string
    data?: JsonWithAggregatesFilter<"Invoice">
    createdAt?: DateTimeWithAggregatesFilter<"Invoice"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Invoice"> | string
  }

  export type TokenWhereInput = {
    AND?: TokenWhereInput | TokenWhereInput[]
    OR?: TokenWhereInput[]
    NOT?: TokenWhereInput | TokenWhereInput[]
    name?: StringFilter<"Token"> | string
    value?: IntFilter<"Token"> | number
    year?: IntFilter<"Token"> | number
    format?: StringFilter<"Token"> | string
  }

  export type TokenOrderByWithRelationInput = {
    name?: SortOrder
    value?: SortOrder
    year?: SortOrder
    format?: SortOrder
  }

  export type TokenWhereUniqueInput = Prisma.AtLeast<{
    name_year?: TokenNameYearCompoundUniqueInput
    AND?: TokenWhereInput | TokenWhereInput[]
    OR?: TokenWhereInput[]
    NOT?: TokenWhereInput | TokenWhereInput[]
    name?: StringFilter<"Token"> | string
    value?: IntFilter<"Token"> | number
    year?: IntFilter<"Token"> | number
    format?: StringFilter<"Token"> | string
  }, "name_year">

  export type TokenOrderByWithAggregationInput = {
    name?: SortOrder
    value?: SortOrder
    year?: SortOrder
    format?: SortOrder
    _count?: TokenCountOrderByAggregateInput
    _avg?: TokenAvgOrderByAggregateInput
    _max?: TokenMaxOrderByAggregateInput
    _min?: TokenMinOrderByAggregateInput
    _sum?: TokenSumOrderByAggregateInput
  }

  export type TokenScalarWhereWithAggregatesInput = {
    AND?: TokenScalarWhereWithAggregatesInput | TokenScalarWhereWithAggregatesInput[]
    OR?: TokenScalarWhereWithAggregatesInput[]
    NOT?: TokenScalarWhereWithAggregatesInput | TokenScalarWhereWithAggregatesInput[]
    name?: StringWithAggregatesFilter<"Token"> | string
    value?: IntWithAggregatesFilter<"Token"> | number
    year?: IntWithAggregatesFilter<"Token"> | number
    format?: StringWithAggregatesFilter<"Token"> | string
  }

  export type BannerWhereInput = {
    AND?: BannerWhereInput | BannerWhereInput[]
    OR?: BannerWhereInput[]
    NOT?: BannerWhereInput | BannerWhereInput[]
    uuid?: StringFilter<"Banner"> | string
    imageHash?: StringFilter<"Banner"> | string
    order?: IntFilter<"Banner"> | number
    isActive?: BoolFilter<"Banner"> | boolean
    href?: StringNullableFilter<"Banner"> | string | null
    startDate?: DateTimeNullableFilter<"Banner"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Banner"> | Date | string | null
    createdAt?: DateTimeFilter<"Banner"> | Date | string
    createdBy?: StringFilter<"Banner"> | string
    updatedAt?: DateTimeFilter<"Banner"> | Date | string
    updatedBy?: StringFilter<"Banner"> | string
    image?: XOR<ImageRelationFilter, ImageWhereInput>
  }

  export type BannerOrderByWithRelationInput = {
    uuid?: SortOrder
    imageHash?: SortOrder
    order?: SortOrder
    isActive?: SortOrder
    href?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    image?: ImageOrderByWithRelationInput
  }

  export type BannerWhereUniqueInput = Prisma.AtLeast<{
    uuid?: string
    AND?: BannerWhereInput | BannerWhereInput[]
    OR?: BannerWhereInput[]
    NOT?: BannerWhereInput | BannerWhereInput[]
    imageHash?: StringFilter<"Banner"> | string
    order?: IntFilter<"Banner"> | number
    isActive?: BoolFilter<"Banner"> | boolean
    href?: StringNullableFilter<"Banner"> | string | null
    startDate?: DateTimeNullableFilter<"Banner"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Banner"> | Date | string | null
    createdAt?: DateTimeFilter<"Banner"> | Date | string
    createdBy?: StringFilter<"Banner"> | string
    updatedAt?: DateTimeFilter<"Banner"> | Date | string
    updatedBy?: StringFilter<"Banner"> | string
    image?: XOR<ImageRelationFilter, ImageWhereInput>
  }, "uuid">

  export type BannerOrderByWithAggregationInput = {
    uuid?: SortOrder
    imageHash?: SortOrder
    order?: SortOrder
    isActive?: SortOrder
    href?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    _count?: BannerCountOrderByAggregateInput
    _avg?: BannerAvgOrderByAggregateInput
    _max?: BannerMaxOrderByAggregateInput
    _min?: BannerMinOrderByAggregateInput
    _sum?: BannerSumOrderByAggregateInput
  }

  export type BannerScalarWhereWithAggregatesInput = {
    AND?: BannerScalarWhereWithAggregatesInput | BannerScalarWhereWithAggregatesInput[]
    OR?: BannerScalarWhereWithAggregatesInput[]
    NOT?: BannerScalarWhereWithAggregatesInput | BannerScalarWhereWithAggregatesInput[]
    uuid?: StringWithAggregatesFilter<"Banner"> | string
    imageHash?: StringWithAggregatesFilter<"Banner"> | string
    order?: IntWithAggregatesFilter<"Banner"> | number
    isActive?: BoolWithAggregatesFilter<"Banner"> | boolean
    href?: StringNullableWithAggregatesFilter<"Banner"> | string | null
    startDate?: DateTimeNullableWithAggregatesFilter<"Banner"> | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter<"Banner"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Banner"> | Date | string
    createdBy?: StringWithAggregatesFilter<"Banner"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"Banner"> | Date | string
    updatedBy?: StringWithAggregatesFilter<"Banner"> | string
  }

  export type NoticeCreateInput = {
    url: string
    product?: ProductCreateNestedOneWithoutNoticeInput
  }

  export type NoticeUncheckedCreateInput = {
    productUuid: string
    url: string
  }

  export type NoticeUpdateInput = {
    url?: StringFieldUpdateOperationsInput | string
    product?: ProductUpdateOneWithoutNoticeNestedInput
  }

  export type NoticeUncheckedUpdateInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type NoticeCreateManyInput = {
    productUuid: string
    url: string
  }

  export type NoticeUpdateManyMutationInput = {
    url?: StringFieldUpdateOperationsInput | string
  }

  export type NoticeUncheckedUpdateManyInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type ProductCreateInput = {
    uuid: string
    availableStock: number
    name: string
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionCreateNestedManyWithoutProductInput
    orderLines?: OrderLineCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    miniature?: ImageCreateNestedOneWithoutProductMiniatureInput
    categories?: ProductCategoryCreateNestedManyWithoutProductInput
    laboratory?: LaboratoryCreateNestedOneWithoutProductInput
    locations?: ProductLocationCreateNestedManyWithoutProductInput
    notice?: NoticeCreateNestedOneWithoutProductInput
  }

  export type ProductUncheckedCreateInput = {
    uuid: string
    availableStock: number
    name: string
    miniatureHash?: string | null
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    laboratoryUuid?: string | null
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionUncheckedCreateNestedManyWithoutProductInput
    orderLines?: OrderLineUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductInput
    locations?: ProductLocationUncheckedCreateNestedManyWithoutProductInput
    notice?: NoticeUncheckedCreateNestedOneWithoutProductInput
  }

  export type ProductUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    miniature?: ImageUpdateOneWithoutProductMiniatureNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductNestedInput
    laboratory?: LaboratoryUpdateOneWithoutProductNestedInput
    locations?: ProductLocationUpdateManyWithoutProductNestedInput
    notice?: NoticeUpdateOneWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUncheckedUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductNestedInput
    locations?: ProductLocationUncheckedUpdateManyWithoutProductNestedInput
    notice?: NoticeUncheckedUpdateOneWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    uuid: string
    availableStock: number
    name: string
    miniatureHash?: string | null
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    laboratoryUuid?: string | null
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type ProductUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type LocationCreateInput = {
    uuid: string
    name: string
    order: number
    productLocation?: ProductLocationCreateNestedManyWithoutLocationInput
  }

  export type LocationUncheckedCreateInput = {
    uuid: string
    name: string
    order: number
    productLocation?: ProductLocationUncheckedCreateNestedManyWithoutLocationInput
  }

  export type LocationUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    productLocation?: ProductLocationUpdateManyWithoutLocationNestedInput
  }

  export type LocationUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    productLocation?: ProductLocationUncheckedUpdateManyWithoutLocationNestedInput
  }

  export type LocationCreateManyInput = {
    uuid: string
    name: string
    order: number
  }

  export type LocationUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
  }

  export type LocationUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
  }

  export type ProductLocationCreateInput = {
    value: string
    location: LocationCreateNestedOneWithoutProductLocationInput
    product: ProductCreateNestedOneWithoutLocationsInput
  }

  export type ProductLocationUncheckedCreateInput = {
    locationUuid: string
    productUuid: string
    value: string
  }

  export type ProductLocationUpdateInput = {
    value?: StringFieldUpdateOperationsInput | string
    location?: LocationUpdateOneRequiredWithoutProductLocationNestedInput
    product?: ProductUpdateOneRequiredWithoutLocationsNestedInput
  }

  export type ProductLocationUncheckedUpdateInput = {
    locationUuid?: StringFieldUpdateOperationsInput | string
    productUuid?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type ProductLocationCreateManyInput = {
    locationUuid: string
    productUuid: string
    value: string
  }

  export type ProductLocationUpdateManyMutationInput = {
    value?: StringFieldUpdateOperationsInput | string
  }

  export type ProductLocationUncheckedUpdateManyInput = {
    locationUuid?: StringFieldUpdateOperationsInput | string
    productUuid?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type ImageCreateInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryCreateNestedManyWithoutImageInput
    categoryMiniature?: CategoryCreateNestedManyWithoutMiniatureInput
    productImage?: ProductImageCreateNestedManyWithoutImageInput
    productMiniature?: ProductCreateNestedManyWithoutMiniatureInput
    laboratoryImage?: LaboratoryCreateNestedManyWithoutImageInput
    laboratoryMiniature?: LaboratoryCreateNestedManyWithoutMiniatureInput
    bannerImage?: BannerCreateNestedManyWithoutImageInput
  }

  export type ImageUncheckedCreateInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryUncheckedCreateNestedManyWithoutImageInput
    categoryMiniature?: CategoryUncheckedCreateNestedManyWithoutMiniatureInput
    productImage?: ProductImageUncheckedCreateNestedManyWithoutImageInput
    productMiniature?: ProductUncheckedCreateNestedManyWithoutMiniatureInput
    laboratoryImage?: LaboratoryUncheckedCreateNestedManyWithoutImageInput
    laboratoryMiniature?: LaboratoryUncheckedCreateNestedManyWithoutMiniatureInput
    bannerImage?: BannerUncheckedCreateNestedManyWithoutImageInput
  }

  export type ImageUpdateInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUpdateManyWithoutImageNestedInput
    categoryMiniature?: CategoryUpdateManyWithoutMiniatureNestedInput
    productImage?: ProductImageUpdateManyWithoutImageNestedInput
    productMiniature?: ProductUpdateManyWithoutMiniatureNestedInput
    laboratoryImage?: LaboratoryUpdateManyWithoutImageNestedInput
    laboratoryMiniature?: LaboratoryUpdateManyWithoutMiniatureNestedInput
    bannerImage?: BannerUpdateManyWithoutImageNestedInput
  }

  export type ImageUncheckedUpdateInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUncheckedUpdateManyWithoutImageNestedInput
    categoryMiniature?: CategoryUncheckedUpdateManyWithoutMiniatureNestedInput
    productImage?: ProductImageUncheckedUpdateManyWithoutImageNestedInput
    productMiniature?: ProductUncheckedUpdateManyWithoutMiniatureNestedInput
    laboratoryImage?: LaboratoryUncheckedUpdateManyWithoutImageNestedInput
    laboratoryMiniature?: LaboratoryUncheckedUpdateManyWithoutMiniatureNestedInput
    bannerImage?: BannerUncheckedUpdateManyWithoutImageNestedInput
  }

  export type ImageCreateManyInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type ImageUpdateManyMutationInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type ImageUncheckedUpdateManyInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductImageCreateInput = {
    product?: ProductCreateNestedOneWithoutImagesInput
    image: ImageCreateNestedOneWithoutProductImageInput
  }

  export type ProductImageUncheckedCreateInput = {
    imageHash: string
    productUuid: string
  }

  export type ProductImageUpdateInput = {
    product?: ProductUpdateOneWithoutImagesNestedInput
    image?: ImageUpdateOneRequiredWithoutProductImageNestedInput
  }

  export type ProductImageUncheckedUpdateInput = {
    imageHash?: StringFieldUpdateOperationsInput | string
    productUuid?: StringFieldUpdateOperationsInput | string
  }

  export type ProductImageCreateManyInput = {
    imageHash: string
    productUuid: string
  }

  export type ProductImageUpdateManyMutationInput = {

  }

  export type ProductImageUncheckedUpdateManyInput = {
    imageHash?: StringFieldUpdateOperationsInput | string
    productUuid?: StringFieldUpdateOperationsInput | string
  }

  export type CategoryCreateInput = {
    uuid: string
    name: string
    description?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    productCategory?: ProductCategoryCreateNestedManyWithoutCategoryInput
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    image?: ImageCreateNestedOneWithoutCategoryImageInput
    miniature?: ImageCreateNestedOneWithoutCategoryMiniatureInput
  }

  export type CategoryUncheckedCreateInput = {
    uuid: string
    name: string
    description?: string | null
    parentUuid?: string | null
    miniatureHash?: string | null
    imageHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    productCategory?: ProductCategoryUncheckedCreateNestedManyWithoutCategoryInput
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
  }

  export type CategoryUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    productCategory?: ProductCategoryUpdateManyWithoutCategoryNestedInput
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    image?: ImageUpdateOneWithoutCategoryImageNestedInput
    miniature?: ImageUpdateOneWithoutCategoryMiniatureNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentUuid?: NullableStringFieldUpdateOperationsInput | string | null
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    imageHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    productCategory?: ProductCategoryUncheckedUpdateManyWithoutCategoryNestedInput
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
  }

  export type CategoryCreateManyInput = {
    uuid: string
    name: string
    description?: string | null
    parentUuid?: string | null
    miniatureHash?: string | null
    imageHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type CategoryUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type CategoryUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentUuid?: NullableStringFieldUpdateOperationsInput | string | null
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    imageHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type PromotionCreateInput = {
    uuid: string
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.ReductionType
    name?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    products?: ProductPromotionCreateNestedManyWithoutPromotionInput
    orderLines?: OrderLineCreateNestedManyWithoutPromotionInput
  }

  export type PromotionUncheckedCreateInput = {
    uuid: string
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.ReductionType
    name?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    products?: ProductPromotionUncheckedCreateNestedManyWithoutPromotionInput
    orderLines?: OrderLineUncheckedCreateNestedManyWithoutPromotionInput
  }

  export type PromotionUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: EnumReductionTypeFieldUpdateOperationsInput | $Enums.ReductionType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    products?: ProductPromotionUpdateManyWithoutPromotionNestedInput
    orderLines?: OrderLineUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: EnumReductionTypeFieldUpdateOperationsInput | $Enums.ReductionType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    products?: ProductPromotionUncheckedUpdateManyWithoutPromotionNestedInput
    orderLines?: OrderLineUncheckedUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionCreateManyInput = {
    uuid: string
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.ReductionType
    name?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type PromotionUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: EnumReductionTypeFieldUpdateOperationsInput | $Enums.ReductionType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type PromotionUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: EnumReductionTypeFieldUpdateOperationsInput | $Enums.ReductionType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductCategoryCreateInput = {
    category: CategoryCreateNestedOneWithoutProductCategoryInput
    product: ProductCreateNestedOneWithoutCategoriesInput
  }

  export type ProductCategoryUncheckedCreateInput = {
    categoryUuid: string
    productUuid: string
  }

  export type ProductCategoryUpdateInput = {
    category?: CategoryUpdateOneRequiredWithoutProductCategoryNestedInput
    product?: ProductUpdateOneRequiredWithoutCategoriesNestedInput
  }

  export type ProductCategoryUncheckedUpdateInput = {
    categoryUuid?: StringFieldUpdateOperationsInput | string
    productUuid?: StringFieldUpdateOperationsInput | string
  }

  export type ProductCategoryCreateManyInput = {
    categoryUuid: string
    productUuid: string
  }

  export type ProductCategoryUpdateManyMutationInput = {

  }

  export type ProductCategoryUncheckedUpdateManyInput = {
    categoryUuid?: StringFieldUpdateOperationsInput | string
    productUuid?: StringFieldUpdateOperationsInput | string
  }

  export type ProductPromotionCreateInput = {
    product: ProductCreateNestedOneWithoutPromotionsInput
    promotion: PromotionCreateNestedOneWithoutProductsInput
  }

  export type ProductPromotionUncheckedCreateInput = {
    productUuid: string
    promotionUuid: string
  }

  export type ProductPromotionUpdateInput = {
    product?: ProductUpdateOneRequiredWithoutPromotionsNestedInput
    promotion?: PromotionUpdateOneRequiredWithoutProductsNestedInput
  }

  export type ProductPromotionUncheckedUpdateInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
    promotionUuid?: StringFieldUpdateOperationsInput | string
  }

  export type ProductPromotionCreateManyInput = {
    productUuid: string
    promotionUuid: string
  }

  export type ProductPromotionUpdateManyMutationInput = {

  }

  export type ProductPromotionUncheckedUpdateManyInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
    promotionUuid?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryMethodCreateInput = {
    uuid: string
    name: string
    description: string
    priceRanges: JsonNullValueInput | InputJsonValue
    type: $Enums.DeliveryMethodType
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    deliveries?: DeliveryCreateNestedManyWithoutMethodInput
  }

  export type DeliveryMethodUncheckedCreateInput = {
    uuid: string
    name: string
    description: string
    priceRanges: JsonNullValueInput | InputJsonValue
    type: $Enums.DeliveryMethodType
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    deliveries?: DeliveryUncheckedCreateNestedManyWithoutMethodInput
  }

  export type DeliveryMethodUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    priceRanges?: JsonNullValueInput | InputJsonValue
    type?: EnumDeliveryMethodTypeFieldUpdateOperationsInput | $Enums.DeliveryMethodType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    deliveries?: DeliveryUpdateManyWithoutMethodNestedInput
  }

  export type DeliveryMethodUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    priceRanges?: JsonNullValueInput | InputJsonValue
    type?: EnumDeliveryMethodTypeFieldUpdateOperationsInput | $Enums.DeliveryMethodType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    deliveries?: DeliveryUncheckedUpdateManyWithoutMethodNestedInput
  }

  export type DeliveryMethodCreateManyInput = {
    uuid: string
    name: string
    description: string
    priceRanges: JsonNullValueInput | InputJsonValue
    type: $Enums.DeliveryMethodType
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryMethodUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    priceRanges?: JsonNullValueInput | InputJsonValue
    type?: EnumDeliveryMethodTypeFieldUpdateOperationsInput | $Enums.DeliveryMethodType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryMethodUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    priceRanges?: JsonNullValueInput | InputJsonValue
    type?: EnumDeliveryMethodTypeFieldUpdateOperationsInput | $Enums.DeliveryMethodType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryCreateInput = {
    uuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    method: DeliveryMethodCreateNestedOneWithoutDeliveriesInput
    senderAddress: MediaCreateNestedOneWithoutDeliverySenderAddressInput
    senderPhone: MediaCreateNestedOneWithoutDeliverySenderPhoneInput
    senderEmail: MediaCreateNestedOneWithoutDeliverySenderEmailInput
    receiverAddress: MediaCreateNestedOneWithoutDeliveryReceiverAddressInput
    receiverPhone: MediaCreateNestedOneWithoutDeliveryReceiverPhoneInput
    receiverEmail: MediaCreateNestedOneWithoutDeliveryReceiverEmailInput
    order: OrderCreateNestedOneWithoutDeliveriesInput
  }

  export type DeliveryUncheckedCreateInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    method?: DeliveryMethodUpdateOneRequiredWithoutDeliveriesNestedInput
    senderAddress?: MediaUpdateOneRequiredWithoutDeliverySenderAddressNestedInput
    senderPhone?: MediaUpdateOneRequiredWithoutDeliverySenderPhoneNestedInput
    senderEmail?: MediaUpdateOneRequiredWithoutDeliverySenderEmailNestedInput
    receiverAddress?: MediaUpdateOneRequiredWithoutDeliveryReceiverAddressNestedInput
    receiverPhone?: MediaUpdateOneRequiredWithoutDeliveryReceiverPhoneNestedInput
    receiverEmail?: MediaUpdateOneRequiredWithoutDeliveryReceiverEmailNestedInput
    order?: OrderUpdateOneRequiredWithoutDeliveriesNestedInput
  }

  export type DeliveryUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryCreateManyInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentCreateInput = {
    uuid: string
    amount: Decimal | DecimalJsLike | number | string
    status: $Enums.PaymentStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    order: OrderCreateNestedOneWithoutPaymentInput
  }

  export type PaymentUncheckedCreateInput = {
    uuid: string
    orderUuid: string
    amount: Decimal | DecimalJsLike | number | string
    status: $Enums.PaymentStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type PaymentUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    order?: OrderUpdateOneRequiredWithoutPaymentNestedInput
  }

  export type PaymentUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentCreateManyInput = {
    uuid: string
    orderUuid: string
    amount: Decimal | DecimalJsLike | number | string
    status: $Enums.PaymentStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type PaymentUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderLineCreateInput = {
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    expectedQuantity: number
    preparedQuantity: number
    status: $Enums.OrderLineStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    product: ProductCreateNestedOneWithoutOrderLinesInput
    order: OrderCreateNestedOneWithoutLinesInput
    promotion?: PromotionCreateNestedOneWithoutOrderLinesInput
  }

  export type OrderLineUncheckedCreateInput = {
    productUuid: string
    orderUuid: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    expectedQuantity: number
    preparedQuantity: number
    promotionUuid?: string | null
    status: $Enums.OrderLineStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type OrderLineUpdateInput = {
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFieldUpdateOperationsInput | number
    preparedQuantity?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderLineStatusFieldUpdateOperationsInput | $Enums.OrderLineStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    product?: ProductUpdateOneRequiredWithoutOrderLinesNestedInput
    order?: OrderUpdateOneRequiredWithoutLinesNestedInput
    promotion?: PromotionUpdateOneWithoutOrderLinesNestedInput
  }

  export type OrderLineUncheckedUpdateInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFieldUpdateOperationsInput | number
    preparedQuantity?: IntFieldUpdateOperationsInput | number
    promotionUuid?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderLineStatusFieldUpdateOperationsInput | $Enums.OrderLineStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderLineCreateManyInput = {
    productUuid: string
    orderUuid: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    expectedQuantity: number
    preparedQuantity: number
    promotionUuid?: string | null
    status: $Enums.OrderLineStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type OrderLineUpdateManyMutationInput = {
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFieldUpdateOperationsInput | number
    preparedQuantity?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderLineStatusFieldUpdateOperationsInput | $Enums.OrderLineStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderLineUncheckedUpdateManyInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFieldUpdateOperationsInput | number
    preparedQuantity?: IntFieldUpdateOperationsInput | number
    promotionUuid?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderLineStatusFieldUpdateOperationsInput | $Enums.OrderLineStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type MediaCreateInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerCreateNestedManyWithoutPhoneInput
  }

  export type MediaUncheckedCreateInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderUncheckedCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderUncheckedCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderUncheckedCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderUncheckedCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryUncheckedCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryUncheckedCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryUncheckedCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryUncheckedCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryUncheckedCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryUncheckedCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerUncheckedCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerUncheckedCreateNestedManyWithoutPhoneInput
  }

  export type MediaUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUncheckedUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUncheckedUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUncheckedUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUncheckedUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUncheckedUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUncheckedUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUncheckedUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUncheckedUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUncheckedUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUncheckedUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUncheckedUpdateManyWithoutPhoneNestedInput
  }

  export type MediaCreateManyInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
  }

  export type MediaUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MediaUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderCreateInput = {
    uuid: string
    idPasserelle?: number | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineCreateNestedManyWithoutOrderInput
    deliveryAddress: MediaCreateNestedOneWithoutDeliveryOrderInput
    billingAddress: MediaCreateNestedOneWithoutBillingOrderInput
    phone: MediaCreateNestedOneWithoutPhoneOrderInput
    email: MediaCreateNestedOneWithoutEmailOrderInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryCreateNestedManyWithoutOrderInput
    customer?: CustomerCreateNestedOneWithoutOrdersInput
    invoice?: InvoiceCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateInput = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineUncheckedCreateNestedManyWithoutOrderInput
    payment?: PaymentUncheckedCreateNestedOneWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryUncheckedCreateNestedManyWithoutOrderInput
    invoice?: InvoiceUncheckedCreateNestedOneWithoutOrderInput
  }

  export type OrderUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUpdateManyWithoutOrderNestedInput
    deliveryAddress?: MediaUpdateOneRequiredWithoutDeliveryOrderNestedInput
    billingAddress?: MediaUpdateOneRequiredWithoutBillingOrderNestedInput
    phone?: MediaUpdateOneRequiredWithoutPhoneOrderNestedInput
    email?: MediaUpdateOneRequiredWithoutEmailOrderNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUpdateManyWithoutOrderNestedInput
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
    invoice?: InvoiceUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUncheckedUpdateManyWithoutOrderNestedInput
    payment?: PaymentUncheckedUpdateOneWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUncheckedUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUncheckedUpdateOneWithoutOrderNestedInput
  }

  export type OrderCreateManyInput = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type OrderUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type LaboratoryCreateInput = {
    uuid: string
    name: string
    description?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    product?: ProductCreateNestedManyWithoutLaboratoryInput
    image?: ImageCreateNestedOneWithoutLaboratoryImageInput
    miniature?: ImageCreateNestedOneWithoutLaboratoryMiniatureInput
  }

  export type LaboratoryUncheckedCreateInput = {
    uuid: string
    name: string
    description?: string | null
    imageHash?: string | null
    miniatureHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    product?: ProductUncheckedCreateNestedManyWithoutLaboratoryInput
  }

  export type LaboratoryUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    product?: ProductUpdateManyWithoutLaboratoryNestedInput
    image?: ImageUpdateOneWithoutLaboratoryImageNestedInput
    miniature?: ImageUpdateOneWithoutLaboratoryMiniatureNestedInput
  }

  export type LaboratoryUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageHash?: NullableStringFieldUpdateOperationsInput | string | null
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    product?: ProductUncheckedUpdateManyWithoutLaboratoryNestedInput
  }

  export type LaboratoryCreateManyInput = {
    uuid: string
    name: string
    description?: string | null
    imageHash?: string | null
    miniatureHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type LaboratoryUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type LaboratoryUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageHash?: NullableStringFieldUpdateOperationsInput | string | null
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type MessageCreateInput = {
    uuid: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MessageType
    status: $Enums.MessageStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    order?: OrderCreateNestedOneWithoutMessagesInput
  }

  export type MessageUncheckedCreateInput = {
    uuid: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MessageType
    status: $Enums.MessageStatus
    orderUuid?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type MessageUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    order?: OrderUpdateOneWithoutMessagesNestedInput
  }

  export type MessageUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    orderUuid?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type MessageCreateManyInput = {
    uuid: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MessageType
    status: $Enums.MessageStatus
    orderUuid?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type MessageUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type MessageUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    orderUuid?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type CustomerCreateInput = {
    uuid: string
    email: string
    firstname?: string | null
    lastname?: string | null
    phone?: MediaCreateNestedOneWithoutCustomerPhoneInput
    address?: MediaCreateNestedOneWithoutCustomerAddressInput
    orders?: OrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateInput = {
    uuid: string
    email: string
    phoneUuid?: string | null
    firstname?: string | null
    lastname?: string | null
    addressUuid?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: MediaUpdateOneWithoutCustomerPhoneNestedInput
    address?: MediaUpdateOneWithoutCustomerAddressNestedInput
    orders?: OrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phoneUuid?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    addressUuid?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerCreateManyInput = {
    uuid: string
    email: string
    phoneUuid?: string | null
    firstname?: string | null
    lastname?: string | null
    addressUuid?: string | null
  }

  export type CustomerUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CustomerUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phoneUuid?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    addressUuid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvoiceCreateInput = {
    invoiceNumber: string
    data: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    createdBy: string
    order: OrderCreateNestedOneWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateInput = {
    invoiceNumber: string
    orderUuid: string
    data: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    createdBy: string
  }

  export type InvoiceUpdateInput = {
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    order?: OrderUpdateOneRequiredWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateInput = {
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type InvoiceCreateManyInput = {
    invoiceNumber: string
    orderUuid: string
    data: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    createdBy: string
  }

  export type InvoiceUpdateManyMutationInput = {
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type InvoiceUncheckedUpdateManyInput = {
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type TokenCreateInput = {
    name: string
    value?: number
    year: number
    format: string
  }

  export type TokenUncheckedCreateInput = {
    name: string
    value?: number
    year: number
    format: string
  }

  export type TokenUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    format?: StringFieldUpdateOperationsInput | string
  }

  export type TokenUncheckedUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    format?: StringFieldUpdateOperationsInput | string
  }

  export type TokenCreateManyInput = {
    name: string
    value?: number
    year: number
    format: string
  }

  export type TokenUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    format?: StringFieldUpdateOperationsInput | string
  }

  export type TokenUncheckedUpdateManyInput = {
    name?: StringFieldUpdateOperationsInput | string
    value?: IntFieldUpdateOperationsInput | number
    year?: IntFieldUpdateOperationsInput | number
    format?: StringFieldUpdateOperationsInput | string
  }

  export type BannerCreateInput = {
    uuid: string
    order: number
    isActive?: boolean
    href?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    image: ImageCreateNestedOneWithoutBannerImageInput
  }

  export type BannerUncheckedCreateInput = {
    uuid: string
    imageHash: string
    order: number
    isActive?: boolean
    href?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type BannerUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    href?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    image?: ImageUpdateOneRequiredWithoutBannerImageNestedInput
  }

  export type BannerUncheckedUpdateInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    imageHash?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    href?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type BannerCreateManyInput = {
    uuid: string
    imageHash: string
    order: number
    isActive?: boolean
    href?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type BannerUpdateManyMutationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    href?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type BannerUncheckedUpdateManyInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    imageHash?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    href?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type ProductNullableRelationFilter = {
    is?: ProductWhereInput | null
    isNot?: ProductWhereInput | null
  }

  export type NoticeCountOrderByAggregateInput = {
    productUuid?: SortOrder
    url?: SortOrder
  }

  export type NoticeMaxOrderByAggregateInput = {
    productUuid?: SortOrder
    url?: SortOrder
  }

  export type NoticeMinOrderByAggregateInput = {
    productUuid?: SortOrder
    url?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumProductStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusFilter<$PrismaModel> | $Enums.ProductStatus
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type ProductPromotionListRelationFilter = {
    every?: ProductPromotionWhereInput
    some?: ProductPromotionWhereInput
    none?: ProductPromotionWhereInput
  }

  export type OrderLineListRelationFilter = {
    every?: OrderLineWhereInput
    some?: OrderLineWhereInput
    none?: OrderLineWhereInput
  }

  export type ProductImageListRelationFilter = {
    every?: ProductImageWhereInput
    some?: ProductImageWhereInput
    none?: ProductImageWhereInput
  }

  export type ImageNullableRelationFilter = {
    is?: ImageWhereInput | null
    isNot?: ImageWhereInput | null
  }

  export type ProductCategoryListRelationFilter = {
    every?: ProductCategoryWhereInput
    some?: ProductCategoryWhereInput
    none?: ProductCategoryWhereInput
  }

  export type LaboratoryNullableRelationFilter = {
    is?: LaboratoryWhereInput | null
    isNot?: LaboratoryWhereInput | null
  }

  export type ProductLocationListRelationFilter = {
    every?: ProductLocationWhereInput
    some?: ProductLocationWhereInput
    none?: ProductLocationWhereInput
  }

  export type NoticeNullableRelationFilter = {
    is?: NoticeWhereInput | null
    isNot?: NoticeWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ProductPromotionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderLineOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductImageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductLocationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCountOrderByAggregateInput = {
    uuid?: SortOrder
    availableStock?: SortOrder
    name?: SortOrder
    miniatureHash?: SortOrder
    cip7?: SortOrder
    cip13?: SortOrder
    ean13?: SortOrder
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    laboratoryUuid?: SortOrder
    description?: SortOrder
    instructionsForUse?: SortOrder
    composition?: SortOrder
    weight?: SortOrder
    maxQuantityForOrder?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    availableStock?: SortOrder
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    weight?: SortOrder
    maxQuantityForOrder?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    uuid?: SortOrder
    availableStock?: SortOrder
    name?: SortOrder
    miniatureHash?: SortOrder
    cip7?: SortOrder
    cip13?: SortOrder
    ean13?: SortOrder
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    laboratoryUuid?: SortOrder
    description?: SortOrder
    instructionsForUse?: SortOrder
    composition?: SortOrder
    weight?: SortOrder
    maxQuantityForOrder?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    uuid?: SortOrder
    availableStock?: SortOrder
    name?: SortOrder
    miniatureHash?: SortOrder
    cip7?: SortOrder
    cip13?: SortOrder
    ean13?: SortOrder
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    laboratoryUuid?: SortOrder
    description?: SortOrder
    instructionsForUse?: SortOrder
    composition?: SortOrder
    weight?: SortOrder
    maxQuantityForOrder?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    availableStock?: SortOrder
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    weight?: SortOrder
    maxQuantityForOrder?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumProductStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusWithAggregatesFilter<$PrismaModel> | $Enums.ProductStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductStatusFilter<$PrismaModel>
    _max?: NestedEnumProductStatusFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type LocationCountOrderByAggregateInput = {
    uuid?: SortOrder
    name?: SortOrder
    order?: SortOrder
  }

  export type LocationAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type LocationMaxOrderByAggregateInput = {
    uuid?: SortOrder
    name?: SortOrder
    order?: SortOrder
  }

  export type LocationMinOrderByAggregateInput = {
    uuid?: SortOrder
    name?: SortOrder
    order?: SortOrder
  }

  export type LocationSumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type LocationRelationFilter = {
    is?: LocationWhereInput
    isNot?: LocationWhereInput
  }

  export type ProductRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type ProductLocationLocationUuidProductUuidCompoundUniqueInput = {
    locationUuid: string
    productUuid: string
  }

  export type ProductLocationCountOrderByAggregateInput = {
    locationUuid?: SortOrder
    productUuid?: SortOrder
    value?: SortOrder
  }

  export type ProductLocationMaxOrderByAggregateInput = {
    locationUuid?: SortOrder
    productUuid?: SortOrder
    value?: SortOrder
  }

  export type ProductLocationMinOrderByAggregateInput = {
    locationUuid?: SortOrder
    productUuid?: SortOrder
    value?: SortOrder
  }

  export type CategoryListRelationFilter = {
    every?: CategoryWhereInput
    some?: CategoryWhereInput
    none?: CategoryWhereInput
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type LaboratoryListRelationFilter = {
    every?: LaboratoryWhereInput
    some?: LaboratoryWhereInput
    none?: LaboratoryWhereInput
  }

  export type BannerListRelationFilter = {
    every?: BannerWhereInput
    some?: BannerWhereInput
    none?: BannerWhereInput
  }

  export type CategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LaboratoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BannerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ImageCountOrderByAggregateInput = {
    hash?: SortOrder
    name?: SortOrder
    url?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ImageMaxOrderByAggregateInput = {
    hash?: SortOrder
    name?: SortOrder
    url?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ImageMinOrderByAggregateInput = {
    hash?: SortOrder
    name?: SortOrder
    url?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ImageRelationFilter = {
    is?: ImageWhereInput
    isNot?: ImageWhereInput
  }

  export type ProductImageProductUuidImageHashCompoundUniqueInput = {
    productUuid: string
    imageHash: string
  }

  export type ProductImageCountOrderByAggregateInput = {
    imageHash?: SortOrder
    productUuid?: SortOrder
  }

  export type ProductImageMaxOrderByAggregateInput = {
    imageHash?: SortOrder
    productUuid?: SortOrder
  }

  export type ProductImageMinOrderByAggregateInput = {
    imageHash?: SortOrder
    productUuid?: SortOrder
  }

  export type CategoryNullableRelationFilter = {
    is?: CategoryWhereInput | null
    isNot?: CategoryWhereInput | null
  }

  export type CategoryCountOrderByAggregateInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrder
    parentUuid?: SortOrder
    miniatureHash?: SortOrder
    imageHash?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrder
    parentUuid?: SortOrder
    miniatureHash?: SortOrder
    imageHash?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrder
    parentUuid?: SortOrder
    miniatureHash?: SortOrder
    imageHash?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type EnumReductionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ReductionType | EnumReductionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReductionType[] | ListEnumReductionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReductionType[] | ListEnumReductionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReductionTypeFilter<$PrismaModel> | $Enums.ReductionType
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type PromotionCountOrderByAggregateInput = {
    uuid?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    name?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type PromotionAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type PromotionMaxOrderByAggregateInput = {
    uuid?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    name?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type PromotionMinOrderByAggregateInput = {
    uuid?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    name?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type PromotionSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumReductionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReductionType | EnumReductionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReductionType[] | ListEnumReductionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReductionType[] | ListEnumReductionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReductionTypeWithAggregatesFilter<$PrismaModel> | $Enums.ReductionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReductionTypeFilter<$PrismaModel>
    _max?: NestedEnumReductionTypeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type CategoryRelationFilter = {
    is?: CategoryWhereInput
    isNot?: CategoryWhereInput
  }

  export type ProductCategoryProductUuidCategoryUuidCompoundUniqueInput = {
    productUuid: string
    categoryUuid: string
  }

  export type ProductCategoryCountOrderByAggregateInput = {
    categoryUuid?: SortOrder
    productUuid?: SortOrder
  }

  export type ProductCategoryMaxOrderByAggregateInput = {
    categoryUuid?: SortOrder
    productUuid?: SortOrder
  }

  export type ProductCategoryMinOrderByAggregateInput = {
    categoryUuid?: SortOrder
    productUuid?: SortOrder
  }

  export type PromotionRelationFilter = {
    is?: PromotionWhereInput
    isNot?: PromotionWhereInput
  }

  export type ProductPromotionProductUuidPromotionUuidCompoundUniqueInput = {
    productUuid: string
    promotionUuid: string
  }

  export type ProductPromotionCountOrderByAggregateInput = {
    productUuid?: SortOrder
    promotionUuid?: SortOrder
  }

  export type ProductPromotionMaxOrderByAggregateInput = {
    productUuid?: SortOrder
    promotionUuid?: SortOrder
  }

  export type ProductPromotionMinOrderByAggregateInput = {
    productUuid?: SortOrder
    promotionUuid?: SortOrder
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EnumDeliveryMethodTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryMethodType | EnumDeliveryMethodTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryMethodType[] | ListEnumDeliveryMethodTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryMethodType[] | ListEnumDeliveryMethodTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryMethodTypeFilter<$PrismaModel> | $Enums.DeliveryMethodType
  }

  export type DeliveryListRelationFilter = {
    every?: DeliveryWhereInput
    some?: DeliveryWhereInput
    none?: DeliveryWhereInput
  }

  export type DeliveryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DeliveryMethodCountOrderByAggregateInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrder
    priceRanges?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type DeliveryMethodMaxOrderByAggregateInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type DeliveryMethodMinOrderByAggregateInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type EnumDeliveryMethodTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryMethodType | EnumDeliveryMethodTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryMethodType[] | ListEnumDeliveryMethodTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryMethodType[] | ListEnumDeliveryMethodTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryMethodTypeWithAggregatesFilter<$PrismaModel> | $Enums.DeliveryMethodType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeliveryMethodTypeFilter<$PrismaModel>
    _max?: NestedEnumDeliveryMethodTypeFilter<$PrismaModel>
  }

  export type EnumDeliveryDirectionFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryDirection | EnumDeliveryDirectionFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryDirection[] | ListEnumDeliveryDirectionFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryDirection[] | ListEnumDeliveryDirectionFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryDirectionFilter<$PrismaModel> | $Enums.DeliveryDirection
  }

  export type EnumDeliveryStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryStatus | EnumDeliveryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryStatusFilter<$PrismaModel> | $Enums.DeliveryStatus
  }

  export type BytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type DeliveryMethodRelationFilter = {
    is?: DeliveryMethodWhereInput
    isNot?: DeliveryMethodWhereInput
  }

  export type MediaRelationFilter = {
    is?: MediaWhereInput
    isNot?: MediaWhereInput
  }

  export type OrderRelationFilter = {
    is?: OrderWhereInput
    isNot?: OrderWhereInput
  }

  export type DeliveryCountOrderByAggregateInput = {
    uuid?: SortOrder
    orderUuid?: SortOrder
    price?: SortOrder
    pickupId?: SortOrder
    pickingDate?: SortOrder
    trackingNumber?: SortOrder
    direction?: SortOrder
    weight?: SortOrder
    status?: SortOrder
    methodUuid?: SortOrder
    senderAddressUuid?: SortOrder
    senderPhoneUuid?: SortOrder
    senderEmailUuid?: SortOrder
    receiverAddressUuid?: SortOrder
    receiverPhoneUuid?: SortOrder
    receiverEmailUuid?: SortOrder
    data?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type DeliveryAvgOrderByAggregateInput = {
    price?: SortOrder
    weight?: SortOrder
  }

  export type DeliveryMaxOrderByAggregateInput = {
    uuid?: SortOrder
    orderUuid?: SortOrder
    price?: SortOrder
    pickupId?: SortOrder
    pickingDate?: SortOrder
    trackingNumber?: SortOrder
    direction?: SortOrder
    weight?: SortOrder
    status?: SortOrder
    methodUuid?: SortOrder
    senderAddressUuid?: SortOrder
    senderPhoneUuid?: SortOrder
    senderEmailUuid?: SortOrder
    receiverAddressUuid?: SortOrder
    receiverPhoneUuid?: SortOrder
    receiverEmailUuid?: SortOrder
    data?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type DeliveryMinOrderByAggregateInput = {
    uuid?: SortOrder
    orderUuid?: SortOrder
    price?: SortOrder
    pickupId?: SortOrder
    pickingDate?: SortOrder
    trackingNumber?: SortOrder
    direction?: SortOrder
    weight?: SortOrder
    status?: SortOrder
    methodUuid?: SortOrder
    senderAddressUuid?: SortOrder
    senderPhoneUuid?: SortOrder
    senderEmailUuid?: SortOrder
    receiverAddressUuid?: SortOrder
    receiverPhoneUuid?: SortOrder
    receiverEmailUuid?: SortOrder
    data?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type DeliverySumOrderByAggregateInput = {
    price?: SortOrder
    weight?: SortOrder
  }

  export type EnumDeliveryDirectionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryDirection | EnumDeliveryDirectionFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryDirection[] | ListEnumDeliveryDirectionFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryDirection[] | ListEnumDeliveryDirectionFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryDirectionWithAggregatesFilter<$PrismaModel> | $Enums.DeliveryDirection
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeliveryDirectionFilter<$PrismaModel>
    _max?: NestedEnumDeliveryDirectionFilter<$PrismaModel>
  }

  export type EnumDeliveryStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryStatus | EnumDeliveryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryStatusWithAggregatesFilter<$PrismaModel> | $Enums.DeliveryStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeliveryStatusFilter<$PrismaModel>
    _max?: NestedEnumDeliveryStatusFilter<$PrismaModel>
  }

  export type BytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type PaymentCountOrderByAggregateInput = {
    uuid?: SortOrder
    orderUuid?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    uuid?: SortOrder
    orderUuid?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    uuid?: SortOrder
    orderUuid?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type EnumOrderLineStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderLineStatus | EnumOrderLineStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderLineStatus[] | ListEnumOrderLineStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderLineStatus[] | ListEnumOrderLineStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderLineStatusFilter<$PrismaModel> | $Enums.OrderLineStatus
  }

  export type PromotionNullableRelationFilter = {
    is?: PromotionWhereInput | null
    isNot?: PromotionWhereInput | null
  }

  export type OrderLineOrderUuidProductUuidCreatedAtCompoundUniqueInput = {
    orderUuid: string
    productUuid: string
    createdAt: Date | string
  }

  export type OrderLineCountOrderByAggregateInput = {
    productUuid?: SortOrder
    orderUuid?: SortOrder
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    expectedQuantity?: SortOrder
    preparedQuantity?: SortOrder
    promotionUuid?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type OrderLineAvgOrderByAggregateInput = {
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    expectedQuantity?: SortOrder
    preparedQuantity?: SortOrder
  }

  export type OrderLineMaxOrderByAggregateInput = {
    productUuid?: SortOrder
    orderUuid?: SortOrder
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    expectedQuantity?: SortOrder
    preparedQuantity?: SortOrder
    promotionUuid?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type OrderLineMinOrderByAggregateInput = {
    productUuid?: SortOrder
    orderUuid?: SortOrder
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    expectedQuantity?: SortOrder
    preparedQuantity?: SortOrder
    promotionUuid?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type OrderLineSumOrderByAggregateInput = {
    priceWithoutTax?: SortOrder
    percentTaxRate?: SortOrder
    expectedQuantity?: SortOrder
    preparedQuantity?: SortOrder
  }

  export type EnumOrderLineStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderLineStatus | EnumOrderLineStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderLineStatus[] | ListEnumOrderLineStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderLineStatus[] | ListEnumOrderLineStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderLineStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderLineStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderLineStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderLineStatusFilter<$PrismaModel>
  }

  export type EnumMediaTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MediaType | EnumMediaTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMediaTypeFilter<$PrismaModel> | $Enums.MediaType
  }

  export type OrderListRelationFilter = {
    every?: OrderWhereInput
    some?: OrderWhereInput
    none?: OrderWhereInput
  }

  export type CustomerListRelationFilter = {
    every?: CustomerWhereInput
    some?: CustomerWhereInput
    none?: CustomerWhereInput
  }

  export type OrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MediaCountOrderByAggregateInput = {
    uuid?: SortOrder
    data?: SortOrder
    type?: SortOrder
    name?: SortOrder
  }

  export type MediaMaxOrderByAggregateInput = {
    uuid?: SortOrder
    type?: SortOrder
    name?: SortOrder
  }

  export type MediaMinOrderByAggregateInput = {
    uuid?: SortOrder
    type?: SortOrder
    name?: SortOrder
  }

  export type EnumMediaTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MediaType | EnumMediaTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMediaTypeWithAggregatesFilter<$PrismaModel> | $Enums.MediaType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMediaTypeFilter<$PrismaModel>
    _max?: NestedEnumMediaTypeFilter<$PrismaModel>
  }

  export type PaymentNullableRelationFilter = {
    is?: PaymentWhereInput | null
    isNot?: PaymentWhereInput | null
  }

  export type MessageListRelationFilter = {
    every?: MessageWhereInput
    some?: MessageWhereInput
    none?: MessageWhereInput
  }

  export type CustomerNullableRelationFilter = {
    is?: CustomerWhereInput | null
    isNot?: CustomerWhereInput | null
  }

  export type InvoiceNullableRelationFilter = {
    is?: InvoiceWhereInput | null
    isNot?: InvoiceWhereInput | null
  }

  export type MessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderCountOrderByAggregateInput = {
    uuid?: SortOrder
    deliveryAddressUuid?: SortOrder
    billingAddressUuid?: SortOrder
    phoneUuid?: SortOrder
    emailUuid?: SortOrder
    idPasserelle?: SortOrder
    customerUuid?: SortOrder
    customerMessage?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type OrderAvgOrderByAggregateInput = {
    idPasserelle?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    uuid?: SortOrder
    deliveryAddressUuid?: SortOrder
    billingAddressUuid?: SortOrder
    phoneUuid?: SortOrder
    emailUuid?: SortOrder
    idPasserelle?: SortOrder
    customerUuid?: SortOrder
    customerMessage?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    uuid?: SortOrder
    deliveryAddressUuid?: SortOrder
    billingAddressUuid?: SortOrder
    phoneUuid?: SortOrder
    emailUuid?: SortOrder
    idPasserelle?: SortOrder
    customerUuid?: SortOrder
    customerMessage?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type OrderSumOrderByAggregateInput = {
    idPasserelle?: SortOrder
  }

  export type LaboratoryCountOrderByAggregateInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrder
    imageHash?: SortOrder
    miniatureHash?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type LaboratoryMaxOrderByAggregateInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrder
    imageHash?: SortOrder
    miniatureHash?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type LaboratoryMinOrderByAggregateInput = {
    uuid?: SortOrder
    name?: SortOrder
    description?: SortOrder
    imageHash?: SortOrder
    miniatureHash?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type EnumMessageTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageType | EnumMessageTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageTypeFilter<$PrismaModel> | $Enums.MessageType
  }

  export type EnumMessageStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageStatus | EnumMessageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageStatusFilter<$PrismaModel> | $Enums.MessageStatus
  }

  export type OrderNullableRelationFilter = {
    is?: OrderWhereInput | null
    isNot?: OrderWhereInput | null
  }

  export type MessageCountOrderByAggregateInput = {
    uuid?: SortOrder
    data?: SortOrder
    type?: SortOrder
    status?: SortOrder
    orderUuid?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type MessageMaxOrderByAggregateInput = {
    uuid?: SortOrder
    type?: SortOrder
    status?: SortOrder
    orderUuid?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type MessageMinOrderByAggregateInput = {
    uuid?: SortOrder
    type?: SortOrder
    status?: SortOrder
    orderUuid?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type EnumMessageTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageType | EnumMessageTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageTypeWithAggregatesFilter<$PrismaModel> | $Enums.MessageType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMessageTypeFilter<$PrismaModel>
    _max?: NestedEnumMessageTypeFilter<$PrismaModel>
  }

  export type EnumMessageStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageStatus | EnumMessageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageStatusWithAggregatesFilter<$PrismaModel> | $Enums.MessageStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMessageStatusFilter<$PrismaModel>
    _max?: NestedEnumMessageStatusFilter<$PrismaModel>
  }

  export type MediaNullableRelationFilter = {
    is?: MediaWhereInput | null
    isNot?: MediaWhereInput | null
  }

  export type CustomerCountOrderByAggregateInput = {
    uuid?: SortOrder
    email?: SortOrder
    phoneUuid?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    addressUuid?: SortOrder
  }

  export type CustomerMaxOrderByAggregateInput = {
    uuid?: SortOrder
    email?: SortOrder
    phoneUuid?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    addressUuid?: SortOrder
  }

  export type CustomerMinOrderByAggregateInput = {
    uuid?: SortOrder
    email?: SortOrder
    phoneUuid?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    addressUuid?: SortOrder
  }

  export type InvoiceCountOrderByAggregateInput = {
    invoiceNumber?: SortOrder
    orderUuid?: SortOrder
    data?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
  }

  export type InvoiceMaxOrderByAggregateInput = {
    invoiceNumber?: SortOrder
    orderUuid?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
  }

  export type InvoiceMinOrderByAggregateInput = {
    invoiceNumber?: SortOrder
    orderUuid?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
  }

  export type TokenNameYearCompoundUniqueInput = {
    name: string
    year: number
  }

  export type TokenCountOrderByAggregateInput = {
    name?: SortOrder
    value?: SortOrder
    year?: SortOrder
    format?: SortOrder
  }

  export type TokenAvgOrderByAggregateInput = {
    value?: SortOrder
    year?: SortOrder
  }

  export type TokenMaxOrderByAggregateInput = {
    name?: SortOrder
    value?: SortOrder
    year?: SortOrder
    format?: SortOrder
  }

  export type TokenMinOrderByAggregateInput = {
    name?: SortOrder
    value?: SortOrder
    year?: SortOrder
    format?: SortOrder
  }

  export type TokenSumOrderByAggregateInput = {
    value?: SortOrder
    year?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type BannerCountOrderByAggregateInput = {
    uuid?: SortOrder
    imageHash?: SortOrder
    order?: SortOrder
    isActive?: SortOrder
    href?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type BannerAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type BannerMaxOrderByAggregateInput = {
    uuid?: SortOrder
    imageHash?: SortOrder
    order?: SortOrder
    isActive?: SortOrder
    href?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type BannerMinOrderByAggregateInput = {
    uuid?: SortOrder
    imageHash?: SortOrder
    order?: SortOrder
    isActive?: SortOrder
    href?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type BannerSumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type ProductCreateNestedOneWithoutNoticeInput = {
    create?: XOR<ProductCreateWithoutNoticeInput, ProductUncheckedCreateWithoutNoticeInput>
    connectOrCreate?: ProductCreateOrConnectWithoutNoticeInput
    connect?: ProductWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type ProductUpdateOneWithoutNoticeNestedInput = {
    create?: XOR<ProductCreateWithoutNoticeInput, ProductUncheckedCreateWithoutNoticeInput>
    connectOrCreate?: ProductCreateOrConnectWithoutNoticeInput
    upsert?: ProductUpsertWithoutNoticeInput
    disconnect?: ProductWhereInput | boolean
    delete?: ProductWhereInput | boolean
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutNoticeInput, ProductUpdateWithoutNoticeInput>, ProductUncheckedUpdateWithoutNoticeInput>
  }

  export type ProductPromotionCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductPromotionCreateWithoutProductInput, ProductPromotionUncheckedCreateWithoutProductInput> | ProductPromotionCreateWithoutProductInput[] | ProductPromotionUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductPromotionCreateOrConnectWithoutProductInput | ProductPromotionCreateOrConnectWithoutProductInput[]
    createMany?: ProductPromotionCreateManyProductInputEnvelope
    connect?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
  }

  export type OrderLineCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderLineCreateWithoutProductInput, OrderLineUncheckedCreateWithoutProductInput> | OrderLineCreateWithoutProductInput[] | OrderLineUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderLineCreateOrConnectWithoutProductInput | OrderLineCreateOrConnectWithoutProductInput[]
    createMany?: OrderLineCreateManyProductInputEnvelope
    connect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
  }

  export type ProductImageCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
  }

  export type ImageCreateNestedOneWithoutProductMiniatureInput = {
    create?: XOR<ImageCreateWithoutProductMiniatureInput, ImageUncheckedCreateWithoutProductMiniatureInput>
    connectOrCreate?: ImageCreateOrConnectWithoutProductMiniatureInput
    connect?: ImageWhereUniqueInput
  }

  export type ProductCategoryCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductCategoryCreateWithoutProductInput, ProductCategoryUncheckedCreateWithoutProductInput> | ProductCategoryCreateWithoutProductInput[] | ProductCategoryUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutProductInput | ProductCategoryCreateOrConnectWithoutProductInput[]
    createMany?: ProductCategoryCreateManyProductInputEnvelope
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
  }

  export type LaboratoryCreateNestedOneWithoutProductInput = {
    create?: XOR<LaboratoryCreateWithoutProductInput, LaboratoryUncheckedCreateWithoutProductInput>
    connectOrCreate?: LaboratoryCreateOrConnectWithoutProductInput
    connect?: LaboratoryWhereUniqueInput
  }

  export type ProductLocationCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductLocationCreateWithoutProductInput, ProductLocationUncheckedCreateWithoutProductInput> | ProductLocationCreateWithoutProductInput[] | ProductLocationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductLocationCreateOrConnectWithoutProductInput | ProductLocationCreateOrConnectWithoutProductInput[]
    createMany?: ProductLocationCreateManyProductInputEnvelope
    connect?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
  }

  export type NoticeCreateNestedOneWithoutProductInput = {
    create?: XOR<NoticeCreateWithoutProductInput, NoticeUncheckedCreateWithoutProductInput>
    connectOrCreate?: NoticeCreateOrConnectWithoutProductInput
    connect?: NoticeWhereUniqueInput
  }

  export type ProductPromotionUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductPromotionCreateWithoutProductInput, ProductPromotionUncheckedCreateWithoutProductInput> | ProductPromotionCreateWithoutProductInput[] | ProductPromotionUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductPromotionCreateOrConnectWithoutProductInput | ProductPromotionCreateOrConnectWithoutProductInput[]
    createMany?: ProductPromotionCreateManyProductInputEnvelope
    connect?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
  }

  export type OrderLineUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderLineCreateWithoutProductInput, OrderLineUncheckedCreateWithoutProductInput> | OrderLineCreateWithoutProductInput[] | OrderLineUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderLineCreateOrConnectWithoutProductInput | OrderLineCreateOrConnectWithoutProductInput[]
    createMany?: OrderLineCreateManyProductInputEnvelope
    connect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
  }

  export type ProductImageUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
  }

  export type ProductCategoryUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductCategoryCreateWithoutProductInput, ProductCategoryUncheckedCreateWithoutProductInput> | ProductCategoryCreateWithoutProductInput[] | ProductCategoryUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutProductInput | ProductCategoryCreateOrConnectWithoutProductInput[]
    createMany?: ProductCategoryCreateManyProductInputEnvelope
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
  }

  export type ProductLocationUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductLocationCreateWithoutProductInput, ProductLocationUncheckedCreateWithoutProductInput> | ProductLocationCreateWithoutProductInput[] | ProductLocationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductLocationCreateOrConnectWithoutProductInput | ProductLocationCreateOrConnectWithoutProductInput[]
    createMany?: ProductLocationCreateManyProductInputEnvelope
    connect?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
  }

  export type NoticeUncheckedCreateNestedOneWithoutProductInput = {
    create?: XOR<NoticeCreateWithoutProductInput, NoticeUncheckedCreateWithoutProductInput>
    connectOrCreate?: NoticeCreateOrConnectWithoutProductInput
    connect?: NoticeWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumProductStatusFieldUpdateOperationsInput = {
    set?: $Enums.ProductStatus
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type ProductPromotionUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductPromotionCreateWithoutProductInput, ProductPromotionUncheckedCreateWithoutProductInput> | ProductPromotionCreateWithoutProductInput[] | ProductPromotionUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductPromotionCreateOrConnectWithoutProductInput | ProductPromotionCreateOrConnectWithoutProductInput[]
    upsert?: ProductPromotionUpsertWithWhereUniqueWithoutProductInput | ProductPromotionUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductPromotionCreateManyProductInputEnvelope
    set?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    disconnect?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    delete?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    connect?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    update?: ProductPromotionUpdateWithWhereUniqueWithoutProductInput | ProductPromotionUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductPromotionUpdateManyWithWhereWithoutProductInput | ProductPromotionUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductPromotionScalarWhereInput | ProductPromotionScalarWhereInput[]
  }

  export type OrderLineUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderLineCreateWithoutProductInput, OrderLineUncheckedCreateWithoutProductInput> | OrderLineCreateWithoutProductInput[] | OrderLineUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderLineCreateOrConnectWithoutProductInput | OrderLineCreateOrConnectWithoutProductInput[]
    upsert?: OrderLineUpsertWithWhereUniqueWithoutProductInput | OrderLineUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderLineCreateManyProductInputEnvelope
    set?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    disconnect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    delete?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    connect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    update?: OrderLineUpdateWithWhereUniqueWithoutProductInput | OrderLineUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderLineUpdateManyWithWhereWithoutProductInput | OrderLineUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderLineScalarWhereInput | OrderLineScalarWhereInput[]
  }

  export type ProductImageUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    upsert?: ProductImageUpsertWithWhereUniqueWithoutProductInput | ProductImageUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    set?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    disconnect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    delete?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    update?: ProductImageUpdateWithWhereUniqueWithoutProductInput | ProductImageUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductImageUpdateManyWithWhereWithoutProductInput | ProductImageUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
  }

  export type ImageUpdateOneWithoutProductMiniatureNestedInput = {
    create?: XOR<ImageCreateWithoutProductMiniatureInput, ImageUncheckedCreateWithoutProductMiniatureInput>
    connectOrCreate?: ImageCreateOrConnectWithoutProductMiniatureInput
    upsert?: ImageUpsertWithoutProductMiniatureInput
    disconnect?: ImageWhereInput | boolean
    delete?: ImageWhereInput | boolean
    connect?: ImageWhereUniqueInput
    update?: XOR<XOR<ImageUpdateToOneWithWhereWithoutProductMiniatureInput, ImageUpdateWithoutProductMiniatureInput>, ImageUncheckedUpdateWithoutProductMiniatureInput>
  }

  export type ProductCategoryUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutProductInput, ProductCategoryUncheckedCreateWithoutProductInput> | ProductCategoryCreateWithoutProductInput[] | ProductCategoryUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutProductInput | ProductCategoryCreateOrConnectWithoutProductInput[]
    upsert?: ProductCategoryUpsertWithWhereUniqueWithoutProductInput | ProductCategoryUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductCategoryCreateManyProductInputEnvelope
    set?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    disconnect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    delete?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    update?: ProductCategoryUpdateWithWhereUniqueWithoutProductInput | ProductCategoryUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductCategoryUpdateManyWithWhereWithoutProductInput | ProductCategoryUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
  }

  export type LaboratoryUpdateOneWithoutProductNestedInput = {
    create?: XOR<LaboratoryCreateWithoutProductInput, LaboratoryUncheckedCreateWithoutProductInput>
    connectOrCreate?: LaboratoryCreateOrConnectWithoutProductInput
    upsert?: LaboratoryUpsertWithoutProductInput
    disconnect?: LaboratoryWhereInput | boolean
    delete?: LaboratoryWhereInput | boolean
    connect?: LaboratoryWhereUniqueInput
    update?: XOR<XOR<LaboratoryUpdateToOneWithWhereWithoutProductInput, LaboratoryUpdateWithoutProductInput>, LaboratoryUncheckedUpdateWithoutProductInput>
  }

  export type ProductLocationUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductLocationCreateWithoutProductInput, ProductLocationUncheckedCreateWithoutProductInput> | ProductLocationCreateWithoutProductInput[] | ProductLocationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductLocationCreateOrConnectWithoutProductInput | ProductLocationCreateOrConnectWithoutProductInput[]
    upsert?: ProductLocationUpsertWithWhereUniqueWithoutProductInput | ProductLocationUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductLocationCreateManyProductInputEnvelope
    set?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    disconnect?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    delete?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    connect?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    update?: ProductLocationUpdateWithWhereUniqueWithoutProductInput | ProductLocationUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductLocationUpdateManyWithWhereWithoutProductInput | ProductLocationUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductLocationScalarWhereInput | ProductLocationScalarWhereInput[]
  }

  export type NoticeUpdateOneWithoutProductNestedInput = {
    create?: XOR<NoticeCreateWithoutProductInput, NoticeUncheckedCreateWithoutProductInput>
    connectOrCreate?: NoticeCreateOrConnectWithoutProductInput
    upsert?: NoticeUpsertWithoutProductInput
    disconnect?: NoticeWhereInput | boolean
    delete?: NoticeWhereInput | boolean
    connect?: NoticeWhereUniqueInput
    update?: XOR<XOR<NoticeUpdateToOneWithWhereWithoutProductInput, NoticeUpdateWithoutProductInput>, NoticeUncheckedUpdateWithoutProductInput>
  }

  export type ProductPromotionUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductPromotionCreateWithoutProductInput, ProductPromotionUncheckedCreateWithoutProductInput> | ProductPromotionCreateWithoutProductInput[] | ProductPromotionUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductPromotionCreateOrConnectWithoutProductInput | ProductPromotionCreateOrConnectWithoutProductInput[]
    upsert?: ProductPromotionUpsertWithWhereUniqueWithoutProductInput | ProductPromotionUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductPromotionCreateManyProductInputEnvelope
    set?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    disconnect?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    delete?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    connect?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    update?: ProductPromotionUpdateWithWhereUniqueWithoutProductInput | ProductPromotionUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductPromotionUpdateManyWithWhereWithoutProductInput | ProductPromotionUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductPromotionScalarWhereInput | ProductPromotionScalarWhereInput[]
  }

  export type OrderLineUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderLineCreateWithoutProductInput, OrderLineUncheckedCreateWithoutProductInput> | OrderLineCreateWithoutProductInput[] | OrderLineUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderLineCreateOrConnectWithoutProductInput | OrderLineCreateOrConnectWithoutProductInput[]
    upsert?: OrderLineUpsertWithWhereUniqueWithoutProductInput | OrderLineUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderLineCreateManyProductInputEnvelope
    set?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    disconnect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    delete?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    connect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    update?: OrderLineUpdateWithWhereUniqueWithoutProductInput | OrderLineUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderLineUpdateManyWithWhereWithoutProductInput | OrderLineUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderLineScalarWhereInput | OrderLineScalarWhereInput[]
  }

  export type ProductImageUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    upsert?: ProductImageUpsertWithWhereUniqueWithoutProductInput | ProductImageUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    set?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    disconnect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    delete?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    update?: ProductImageUpdateWithWhereUniqueWithoutProductInput | ProductImageUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductImageUpdateManyWithWhereWithoutProductInput | ProductImageUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
  }

  export type ProductCategoryUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutProductInput, ProductCategoryUncheckedCreateWithoutProductInput> | ProductCategoryCreateWithoutProductInput[] | ProductCategoryUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutProductInput | ProductCategoryCreateOrConnectWithoutProductInput[]
    upsert?: ProductCategoryUpsertWithWhereUniqueWithoutProductInput | ProductCategoryUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductCategoryCreateManyProductInputEnvelope
    set?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    disconnect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    delete?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    update?: ProductCategoryUpdateWithWhereUniqueWithoutProductInput | ProductCategoryUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductCategoryUpdateManyWithWhereWithoutProductInput | ProductCategoryUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
  }

  export type ProductLocationUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductLocationCreateWithoutProductInput, ProductLocationUncheckedCreateWithoutProductInput> | ProductLocationCreateWithoutProductInput[] | ProductLocationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductLocationCreateOrConnectWithoutProductInput | ProductLocationCreateOrConnectWithoutProductInput[]
    upsert?: ProductLocationUpsertWithWhereUniqueWithoutProductInput | ProductLocationUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductLocationCreateManyProductInputEnvelope
    set?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    disconnect?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    delete?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    connect?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    update?: ProductLocationUpdateWithWhereUniqueWithoutProductInput | ProductLocationUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductLocationUpdateManyWithWhereWithoutProductInput | ProductLocationUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductLocationScalarWhereInput | ProductLocationScalarWhereInput[]
  }

  export type NoticeUncheckedUpdateOneWithoutProductNestedInput = {
    create?: XOR<NoticeCreateWithoutProductInput, NoticeUncheckedCreateWithoutProductInput>
    connectOrCreate?: NoticeCreateOrConnectWithoutProductInput
    upsert?: NoticeUpsertWithoutProductInput
    disconnect?: NoticeWhereInput | boolean
    delete?: NoticeWhereInput | boolean
    connect?: NoticeWhereUniqueInput
    update?: XOR<XOR<NoticeUpdateToOneWithWhereWithoutProductInput, NoticeUpdateWithoutProductInput>, NoticeUncheckedUpdateWithoutProductInput>
  }

  export type ProductLocationCreateNestedManyWithoutLocationInput = {
    create?: XOR<ProductLocationCreateWithoutLocationInput, ProductLocationUncheckedCreateWithoutLocationInput> | ProductLocationCreateWithoutLocationInput[] | ProductLocationUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: ProductLocationCreateOrConnectWithoutLocationInput | ProductLocationCreateOrConnectWithoutLocationInput[]
    createMany?: ProductLocationCreateManyLocationInputEnvelope
    connect?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
  }

  export type ProductLocationUncheckedCreateNestedManyWithoutLocationInput = {
    create?: XOR<ProductLocationCreateWithoutLocationInput, ProductLocationUncheckedCreateWithoutLocationInput> | ProductLocationCreateWithoutLocationInput[] | ProductLocationUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: ProductLocationCreateOrConnectWithoutLocationInput | ProductLocationCreateOrConnectWithoutLocationInput[]
    createMany?: ProductLocationCreateManyLocationInputEnvelope
    connect?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
  }

  export type ProductLocationUpdateManyWithoutLocationNestedInput = {
    create?: XOR<ProductLocationCreateWithoutLocationInput, ProductLocationUncheckedCreateWithoutLocationInput> | ProductLocationCreateWithoutLocationInput[] | ProductLocationUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: ProductLocationCreateOrConnectWithoutLocationInput | ProductLocationCreateOrConnectWithoutLocationInput[]
    upsert?: ProductLocationUpsertWithWhereUniqueWithoutLocationInput | ProductLocationUpsertWithWhereUniqueWithoutLocationInput[]
    createMany?: ProductLocationCreateManyLocationInputEnvelope
    set?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    disconnect?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    delete?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    connect?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    update?: ProductLocationUpdateWithWhereUniqueWithoutLocationInput | ProductLocationUpdateWithWhereUniqueWithoutLocationInput[]
    updateMany?: ProductLocationUpdateManyWithWhereWithoutLocationInput | ProductLocationUpdateManyWithWhereWithoutLocationInput[]
    deleteMany?: ProductLocationScalarWhereInput | ProductLocationScalarWhereInput[]
  }

  export type ProductLocationUncheckedUpdateManyWithoutLocationNestedInput = {
    create?: XOR<ProductLocationCreateWithoutLocationInput, ProductLocationUncheckedCreateWithoutLocationInput> | ProductLocationCreateWithoutLocationInput[] | ProductLocationUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: ProductLocationCreateOrConnectWithoutLocationInput | ProductLocationCreateOrConnectWithoutLocationInput[]
    upsert?: ProductLocationUpsertWithWhereUniqueWithoutLocationInput | ProductLocationUpsertWithWhereUniqueWithoutLocationInput[]
    createMany?: ProductLocationCreateManyLocationInputEnvelope
    set?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    disconnect?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    delete?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    connect?: ProductLocationWhereUniqueInput | ProductLocationWhereUniqueInput[]
    update?: ProductLocationUpdateWithWhereUniqueWithoutLocationInput | ProductLocationUpdateWithWhereUniqueWithoutLocationInput[]
    updateMany?: ProductLocationUpdateManyWithWhereWithoutLocationInput | ProductLocationUpdateManyWithWhereWithoutLocationInput[]
    deleteMany?: ProductLocationScalarWhereInput | ProductLocationScalarWhereInput[]
  }

  export type LocationCreateNestedOneWithoutProductLocationInput = {
    create?: XOR<LocationCreateWithoutProductLocationInput, LocationUncheckedCreateWithoutProductLocationInput>
    connectOrCreate?: LocationCreateOrConnectWithoutProductLocationInput
    connect?: LocationWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutLocationsInput = {
    create?: XOR<ProductCreateWithoutLocationsInput, ProductUncheckedCreateWithoutLocationsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutLocationsInput
    connect?: ProductWhereUniqueInput
  }

  export type LocationUpdateOneRequiredWithoutProductLocationNestedInput = {
    create?: XOR<LocationCreateWithoutProductLocationInput, LocationUncheckedCreateWithoutProductLocationInput>
    connectOrCreate?: LocationCreateOrConnectWithoutProductLocationInput
    upsert?: LocationUpsertWithoutProductLocationInput
    connect?: LocationWhereUniqueInput
    update?: XOR<XOR<LocationUpdateToOneWithWhereWithoutProductLocationInput, LocationUpdateWithoutProductLocationInput>, LocationUncheckedUpdateWithoutProductLocationInput>
  }

  export type ProductUpdateOneRequiredWithoutLocationsNestedInput = {
    create?: XOR<ProductCreateWithoutLocationsInput, ProductUncheckedCreateWithoutLocationsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutLocationsInput
    upsert?: ProductUpsertWithoutLocationsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutLocationsInput, ProductUpdateWithoutLocationsInput>, ProductUncheckedUpdateWithoutLocationsInput>
  }

  export type CategoryCreateNestedManyWithoutImageInput = {
    create?: XOR<CategoryCreateWithoutImageInput, CategoryUncheckedCreateWithoutImageInput> | CategoryCreateWithoutImageInput[] | CategoryUncheckedCreateWithoutImageInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutImageInput | CategoryCreateOrConnectWithoutImageInput[]
    createMany?: CategoryCreateManyImageInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutMiniatureInput = {
    create?: XOR<CategoryCreateWithoutMiniatureInput, CategoryUncheckedCreateWithoutMiniatureInput> | CategoryCreateWithoutMiniatureInput[] | CategoryUncheckedCreateWithoutMiniatureInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutMiniatureInput | CategoryCreateOrConnectWithoutMiniatureInput[]
    createMany?: CategoryCreateManyMiniatureInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ProductImageCreateNestedManyWithoutImageInput = {
    create?: XOR<ProductImageCreateWithoutImageInput, ProductImageUncheckedCreateWithoutImageInput> | ProductImageCreateWithoutImageInput[] | ProductImageUncheckedCreateWithoutImageInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutImageInput | ProductImageCreateOrConnectWithoutImageInput[]
    createMany?: ProductImageCreateManyImageInputEnvelope
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutMiniatureInput = {
    create?: XOR<ProductCreateWithoutMiniatureInput, ProductUncheckedCreateWithoutMiniatureInput> | ProductCreateWithoutMiniatureInput[] | ProductUncheckedCreateWithoutMiniatureInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutMiniatureInput | ProductCreateOrConnectWithoutMiniatureInput[]
    createMany?: ProductCreateManyMiniatureInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type LaboratoryCreateNestedManyWithoutImageInput = {
    create?: XOR<LaboratoryCreateWithoutImageInput, LaboratoryUncheckedCreateWithoutImageInput> | LaboratoryCreateWithoutImageInput[] | LaboratoryUncheckedCreateWithoutImageInput[]
    connectOrCreate?: LaboratoryCreateOrConnectWithoutImageInput | LaboratoryCreateOrConnectWithoutImageInput[]
    createMany?: LaboratoryCreateManyImageInputEnvelope
    connect?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
  }

  export type LaboratoryCreateNestedManyWithoutMiniatureInput = {
    create?: XOR<LaboratoryCreateWithoutMiniatureInput, LaboratoryUncheckedCreateWithoutMiniatureInput> | LaboratoryCreateWithoutMiniatureInput[] | LaboratoryUncheckedCreateWithoutMiniatureInput[]
    connectOrCreate?: LaboratoryCreateOrConnectWithoutMiniatureInput | LaboratoryCreateOrConnectWithoutMiniatureInput[]
    createMany?: LaboratoryCreateManyMiniatureInputEnvelope
    connect?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
  }

  export type BannerCreateNestedManyWithoutImageInput = {
    create?: XOR<BannerCreateWithoutImageInput, BannerUncheckedCreateWithoutImageInput> | BannerCreateWithoutImageInput[] | BannerUncheckedCreateWithoutImageInput[]
    connectOrCreate?: BannerCreateOrConnectWithoutImageInput | BannerCreateOrConnectWithoutImageInput[]
    createMany?: BannerCreateManyImageInputEnvelope
    connect?: BannerWhereUniqueInput | BannerWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutImageInput = {
    create?: XOR<CategoryCreateWithoutImageInput, CategoryUncheckedCreateWithoutImageInput> | CategoryCreateWithoutImageInput[] | CategoryUncheckedCreateWithoutImageInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutImageInput | CategoryCreateOrConnectWithoutImageInput[]
    createMany?: CategoryCreateManyImageInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutMiniatureInput = {
    create?: XOR<CategoryCreateWithoutMiniatureInput, CategoryUncheckedCreateWithoutMiniatureInput> | CategoryCreateWithoutMiniatureInput[] | CategoryUncheckedCreateWithoutMiniatureInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutMiniatureInput | CategoryCreateOrConnectWithoutMiniatureInput[]
    createMany?: CategoryCreateManyMiniatureInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ProductImageUncheckedCreateNestedManyWithoutImageInput = {
    create?: XOR<ProductImageCreateWithoutImageInput, ProductImageUncheckedCreateWithoutImageInput> | ProductImageCreateWithoutImageInput[] | ProductImageUncheckedCreateWithoutImageInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutImageInput | ProductImageCreateOrConnectWithoutImageInput[]
    createMany?: ProductImageCreateManyImageInputEnvelope
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutMiniatureInput = {
    create?: XOR<ProductCreateWithoutMiniatureInput, ProductUncheckedCreateWithoutMiniatureInput> | ProductCreateWithoutMiniatureInput[] | ProductUncheckedCreateWithoutMiniatureInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutMiniatureInput | ProductCreateOrConnectWithoutMiniatureInput[]
    createMany?: ProductCreateManyMiniatureInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type LaboratoryUncheckedCreateNestedManyWithoutImageInput = {
    create?: XOR<LaboratoryCreateWithoutImageInput, LaboratoryUncheckedCreateWithoutImageInput> | LaboratoryCreateWithoutImageInput[] | LaboratoryUncheckedCreateWithoutImageInput[]
    connectOrCreate?: LaboratoryCreateOrConnectWithoutImageInput | LaboratoryCreateOrConnectWithoutImageInput[]
    createMany?: LaboratoryCreateManyImageInputEnvelope
    connect?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
  }

  export type LaboratoryUncheckedCreateNestedManyWithoutMiniatureInput = {
    create?: XOR<LaboratoryCreateWithoutMiniatureInput, LaboratoryUncheckedCreateWithoutMiniatureInput> | LaboratoryCreateWithoutMiniatureInput[] | LaboratoryUncheckedCreateWithoutMiniatureInput[]
    connectOrCreate?: LaboratoryCreateOrConnectWithoutMiniatureInput | LaboratoryCreateOrConnectWithoutMiniatureInput[]
    createMany?: LaboratoryCreateManyMiniatureInputEnvelope
    connect?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
  }

  export type BannerUncheckedCreateNestedManyWithoutImageInput = {
    create?: XOR<BannerCreateWithoutImageInput, BannerUncheckedCreateWithoutImageInput> | BannerCreateWithoutImageInput[] | BannerUncheckedCreateWithoutImageInput[]
    connectOrCreate?: BannerCreateOrConnectWithoutImageInput | BannerCreateOrConnectWithoutImageInput[]
    createMany?: BannerCreateManyImageInputEnvelope
    connect?: BannerWhereUniqueInput | BannerWhereUniqueInput[]
  }

  export type CategoryUpdateManyWithoutImageNestedInput = {
    create?: XOR<CategoryCreateWithoutImageInput, CategoryUncheckedCreateWithoutImageInput> | CategoryCreateWithoutImageInput[] | CategoryUncheckedCreateWithoutImageInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutImageInput | CategoryCreateOrConnectWithoutImageInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutImageInput | CategoryUpsertWithWhereUniqueWithoutImageInput[]
    createMany?: CategoryCreateManyImageInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutImageInput | CategoryUpdateWithWhereUniqueWithoutImageInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutImageInput | CategoryUpdateManyWithWhereWithoutImageInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutMiniatureNestedInput = {
    create?: XOR<CategoryCreateWithoutMiniatureInput, CategoryUncheckedCreateWithoutMiniatureInput> | CategoryCreateWithoutMiniatureInput[] | CategoryUncheckedCreateWithoutMiniatureInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutMiniatureInput | CategoryCreateOrConnectWithoutMiniatureInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutMiniatureInput | CategoryUpsertWithWhereUniqueWithoutMiniatureInput[]
    createMany?: CategoryCreateManyMiniatureInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutMiniatureInput | CategoryUpdateWithWhereUniqueWithoutMiniatureInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutMiniatureInput | CategoryUpdateManyWithWhereWithoutMiniatureInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ProductImageUpdateManyWithoutImageNestedInput = {
    create?: XOR<ProductImageCreateWithoutImageInput, ProductImageUncheckedCreateWithoutImageInput> | ProductImageCreateWithoutImageInput[] | ProductImageUncheckedCreateWithoutImageInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutImageInput | ProductImageCreateOrConnectWithoutImageInput[]
    upsert?: ProductImageUpsertWithWhereUniqueWithoutImageInput | ProductImageUpsertWithWhereUniqueWithoutImageInput[]
    createMany?: ProductImageCreateManyImageInputEnvelope
    set?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    disconnect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    delete?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    update?: ProductImageUpdateWithWhereUniqueWithoutImageInput | ProductImageUpdateWithWhereUniqueWithoutImageInput[]
    updateMany?: ProductImageUpdateManyWithWhereWithoutImageInput | ProductImageUpdateManyWithWhereWithoutImageInput[]
    deleteMany?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutMiniatureNestedInput = {
    create?: XOR<ProductCreateWithoutMiniatureInput, ProductUncheckedCreateWithoutMiniatureInput> | ProductCreateWithoutMiniatureInput[] | ProductUncheckedCreateWithoutMiniatureInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutMiniatureInput | ProductCreateOrConnectWithoutMiniatureInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutMiniatureInput | ProductUpsertWithWhereUniqueWithoutMiniatureInput[]
    createMany?: ProductCreateManyMiniatureInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutMiniatureInput | ProductUpdateWithWhereUniqueWithoutMiniatureInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutMiniatureInput | ProductUpdateManyWithWhereWithoutMiniatureInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type LaboratoryUpdateManyWithoutImageNestedInput = {
    create?: XOR<LaboratoryCreateWithoutImageInput, LaboratoryUncheckedCreateWithoutImageInput> | LaboratoryCreateWithoutImageInput[] | LaboratoryUncheckedCreateWithoutImageInput[]
    connectOrCreate?: LaboratoryCreateOrConnectWithoutImageInput | LaboratoryCreateOrConnectWithoutImageInput[]
    upsert?: LaboratoryUpsertWithWhereUniqueWithoutImageInput | LaboratoryUpsertWithWhereUniqueWithoutImageInput[]
    createMany?: LaboratoryCreateManyImageInputEnvelope
    set?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    disconnect?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    delete?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    connect?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    update?: LaboratoryUpdateWithWhereUniqueWithoutImageInput | LaboratoryUpdateWithWhereUniqueWithoutImageInput[]
    updateMany?: LaboratoryUpdateManyWithWhereWithoutImageInput | LaboratoryUpdateManyWithWhereWithoutImageInput[]
    deleteMany?: LaboratoryScalarWhereInput | LaboratoryScalarWhereInput[]
  }

  export type LaboratoryUpdateManyWithoutMiniatureNestedInput = {
    create?: XOR<LaboratoryCreateWithoutMiniatureInput, LaboratoryUncheckedCreateWithoutMiniatureInput> | LaboratoryCreateWithoutMiniatureInput[] | LaboratoryUncheckedCreateWithoutMiniatureInput[]
    connectOrCreate?: LaboratoryCreateOrConnectWithoutMiniatureInput | LaboratoryCreateOrConnectWithoutMiniatureInput[]
    upsert?: LaboratoryUpsertWithWhereUniqueWithoutMiniatureInput | LaboratoryUpsertWithWhereUniqueWithoutMiniatureInput[]
    createMany?: LaboratoryCreateManyMiniatureInputEnvelope
    set?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    disconnect?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    delete?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    connect?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    update?: LaboratoryUpdateWithWhereUniqueWithoutMiniatureInput | LaboratoryUpdateWithWhereUniqueWithoutMiniatureInput[]
    updateMany?: LaboratoryUpdateManyWithWhereWithoutMiniatureInput | LaboratoryUpdateManyWithWhereWithoutMiniatureInput[]
    deleteMany?: LaboratoryScalarWhereInput | LaboratoryScalarWhereInput[]
  }

  export type BannerUpdateManyWithoutImageNestedInput = {
    create?: XOR<BannerCreateWithoutImageInput, BannerUncheckedCreateWithoutImageInput> | BannerCreateWithoutImageInput[] | BannerUncheckedCreateWithoutImageInput[]
    connectOrCreate?: BannerCreateOrConnectWithoutImageInput | BannerCreateOrConnectWithoutImageInput[]
    upsert?: BannerUpsertWithWhereUniqueWithoutImageInput | BannerUpsertWithWhereUniqueWithoutImageInput[]
    createMany?: BannerCreateManyImageInputEnvelope
    set?: BannerWhereUniqueInput | BannerWhereUniqueInput[]
    disconnect?: BannerWhereUniqueInput | BannerWhereUniqueInput[]
    delete?: BannerWhereUniqueInput | BannerWhereUniqueInput[]
    connect?: BannerWhereUniqueInput | BannerWhereUniqueInput[]
    update?: BannerUpdateWithWhereUniqueWithoutImageInput | BannerUpdateWithWhereUniqueWithoutImageInput[]
    updateMany?: BannerUpdateManyWithWhereWithoutImageInput | BannerUpdateManyWithWhereWithoutImageInput[]
    deleteMany?: BannerScalarWhereInput | BannerScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutImageNestedInput = {
    create?: XOR<CategoryCreateWithoutImageInput, CategoryUncheckedCreateWithoutImageInput> | CategoryCreateWithoutImageInput[] | CategoryUncheckedCreateWithoutImageInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutImageInput | CategoryCreateOrConnectWithoutImageInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutImageInput | CategoryUpsertWithWhereUniqueWithoutImageInput[]
    createMany?: CategoryCreateManyImageInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutImageInput | CategoryUpdateWithWhereUniqueWithoutImageInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutImageInput | CategoryUpdateManyWithWhereWithoutImageInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutMiniatureNestedInput = {
    create?: XOR<CategoryCreateWithoutMiniatureInput, CategoryUncheckedCreateWithoutMiniatureInput> | CategoryCreateWithoutMiniatureInput[] | CategoryUncheckedCreateWithoutMiniatureInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutMiniatureInput | CategoryCreateOrConnectWithoutMiniatureInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutMiniatureInput | CategoryUpsertWithWhereUniqueWithoutMiniatureInput[]
    createMany?: CategoryCreateManyMiniatureInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutMiniatureInput | CategoryUpdateWithWhereUniqueWithoutMiniatureInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutMiniatureInput | CategoryUpdateManyWithWhereWithoutMiniatureInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ProductImageUncheckedUpdateManyWithoutImageNestedInput = {
    create?: XOR<ProductImageCreateWithoutImageInput, ProductImageUncheckedCreateWithoutImageInput> | ProductImageCreateWithoutImageInput[] | ProductImageUncheckedCreateWithoutImageInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutImageInput | ProductImageCreateOrConnectWithoutImageInput[]
    upsert?: ProductImageUpsertWithWhereUniqueWithoutImageInput | ProductImageUpsertWithWhereUniqueWithoutImageInput[]
    createMany?: ProductImageCreateManyImageInputEnvelope
    set?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    disconnect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    delete?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    update?: ProductImageUpdateWithWhereUniqueWithoutImageInput | ProductImageUpdateWithWhereUniqueWithoutImageInput[]
    updateMany?: ProductImageUpdateManyWithWhereWithoutImageInput | ProductImageUpdateManyWithWhereWithoutImageInput[]
    deleteMany?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutMiniatureNestedInput = {
    create?: XOR<ProductCreateWithoutMiniatureInput, ProductUncheckedCreateWithoutMiniatureInput> | ProductCreateWithoutMiniatureInput[] | ProductUncheckedCreateWithoutMiniatureInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutMiniatureInput | ProductCreateOrConnectWithoutMiniatureInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutMiniatureInput | ProductUpsertWithWhereUniqueWithoutMiniatureInput[]
    createMany?: ProductCreateManyMiniatureInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutMiniatureInput | ProductUpdateWithWhereUniqueWithoutMiniatureInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutMiniatureInput | ProductUpdateManyWithWhereWithoutMiniatureInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type LaboratoryUncheckedUpdateManyWithoutImageNestedInput = {
    create?: XOR<LaboratoryCreateWithoutImageInput, LaboratoryUncheckedCreateWithoutImageInput> | LaboratoryCreateWithoutImageInput[] | LaboratoryUncheckedCreateWithoutImageInput[]
    connectOrCreate?: LaboratoryCreateOrConnectWithoutImageInput | LaboratoryCreateOrConnectWithoutImageInput[]
    upsert?: LaboratoryUpsertWithWhereUniqueWithoutImageInput | LaboratoryUpsertWithWhereUniqueWithoutImageInput[]
    createMany?: LaboratoryCreateManyImageInputEnvelope
    set?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    disconnect?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    delete?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    connect?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    update?: LaboratoryUpdateWithWhereUniqueWithoutImageInput | LaboratoryUpdateWithWhereUniqueWithoutImageInput[]
    updateMany?: LaboratoryUpdateManyWithWhereWithoutImageInput | LaboratoryUpdateManyWithWhereWithoutImageInput[]
    deleteMany?: LaboratoryScalarWhereInput | LaboratoryScalarWhereInput[]
  }

  export type LaboratoryUncheckedUpdateManyWithoutMiniatureNestedInput = {
    create?: XOR<LaboratoryCreateWithoutMiniatureInput, LaboratoryUncheckedCreateWithoutMiniatureInput> | LaboratoryCreateWithoutMiniatureInput[] | LaboratoryUncheckedCreateWithoutMiniatureInput[]
    connectOrCreate?: LaboratoryCreateOrConnectWithoutMiniatureInput | LaboratoryCreateOrConnectWithoutMiniatureInput[]
    upsert?: LaboratoryUpsertWithWhereUniqueWithoutMiniatureInput | LaboratoryUpsertWithWhereUniqueWithoutMiniatureInput[]
    createMany?: LaboratoryCreateManyMiniatureInputEnvelope
    set?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    disconnect?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    delete?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    connect?: LaboratoryWhereUniqueInput | LaboratoryWhereUniqueInput[]
    update?: LaboratoryUpdateWithWhereUniqueWithoutMiniatureInput | LaboratoryUpdateWithWhereUniqueWithoutMiniatureInput[]
    updateMany?: LaboratoryUpdateManyWithWhereWithoutMiniatureInput | LaboratoryUpdateManyWithWhereWithoutMiniatureInput[]
    deleteMany?: LaboratoryScalarWhereInput | LaboratoryScalarWhereInput[]
  }

  export type BannerUncheckedUpdateManyWithoutImageNestedInput = {
    create?: XOR<BannerCreateWithoutImageInput, BannerUncheckedCreateWithoutImageInput> | BannerCreateWithoutImageInput[] | BannerUncheckedCreateWithoutImageInput[]
    connectOrCreate?: BannerCreateOrConnectWithoutImageInput | BannerCreateOrConnectWithoutImageInput[]
    upsert?: BannerUpsertWithWhereUniqueWithoutImageInput | BannerUpsertWithWhereUniqueWithoutImageInput[]
    createMany?: BannerCreateManyImageInputEnvelope
    set?: BannerWhereUniqueInput | BannerWhereUniqueInput[]
    disconnect?: BannerWhereUniqueInput | BannerWhereUniqueInput[]
    delete?: BannerWhereUniqueInput | BannerWhereUniqueInput[]
    connect?: BannerWhereUniqueInput | BannerWhereUniqueInput[]
    update?: BannerUpdateWithWhereUniqueWithoutImageInput | BannerUpdateWithWhereUniqueWithoutImageInput[]
    updateMany?: BannerUpdateManyWithWhereWithoutImageInput | BannerUpdateManyWithWhereWithoutImageInput[]
    deleteMany?: BannerScalarWhereInput | BannerScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutImagesInput = {
    create?: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutImagesInput
    connect?: ProductWhereUniqueInput
  }

  export type ImageCreateNestedOneWithoutProductImageInput = {
    create?: XOR<ImageCreateWithoutProductImageInput, ImageUncheckedCreateWithoutProductImageInput>
    connectOrCreate?: ImageCreateOrConnectWithoutProductImageInput
    connect?: ImageWhereUniqueInput
  }

  export type ProductUpdateOneWithoutImagesNestedInput = {
    create?: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutImagesInput
    upsert?: ProductUpsertWithoutImagesInput
    disconnect?: ProductWhereInput | boolean
    delete?: ProductWhereInput | boolean
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutImagesInput, ProductUpdateWithoutImagesInput>, ProductUncheckedUpdateWithoutImagesInput>
  }

  export type ImageUpdateOneRequiredWithoutProductImageNestedInput = {
    create?: XOR<ImageCreateWithoutProductImageInput, ImageUncheckedCreateWithoutProductImageInput>
    connectOrCreate?: ImageCreateOrConnectWithoutProductImageInput
    upsert?: ImageUpsertWithoutProductImageInput
    connect?: ImageWhereUniqueInput
    update?: XOR<XOR<ImageUpdateToOneWithWhereWithoutProductImageInput, ImageUpdateWithoutProductImageInput>, ImageUncheckedUpdateWithoutProductImageInput>
  }

  export type ProductCategoryCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProductCategoryCreateWithoutCategoryInput, ProductCategoryUncheckedCreateWithoutCategoryInput> | ProductCategoryCreateWithoutCategoryInput[] | ProductCategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutCategoryInput | ProductCategoryCreateOrConnectWithoutCategoryInput[]
    createMany?: ProductCategoryCreateManyCategoryInputEnvelope
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
  }

  export type CategoryCreateNestedOneWithoutChildrenInput = {
    create?: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutChildrenInput
    connect?: CategoryWhereUniqueInput
  }

  export type CategoryCreateNestedManyWithoutParentInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ImageCreateNestedOneWithoutCategoryImageInput = {
    create?: XOR<ImageCreateWithoutCategoryImageInput, ImageUncheckedCreateWithoutCategoryImageInput>
    connectOrCreate?: ImageCreateOrConnectWithoutCategoryImageInput
    connect?: ImageWhereUniqueInput
  }

  export type ImageCreateNestedOneWithoutCategoryMiniatureInput = {
    create?: XOR<ImageCreateWithoutCategoryMiniatureInput, ImageUncheckedCreateWithoutCategoryMiniatureInput>
    connectOrCreate?: ImageCreateOrConnectWithoutCategoryMiniatureInput
    connect?: ImageWhereUniqueInput
  }

  export type ProductCategoryUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProductCategoryCreateWithoutCategoryInput, ProductCategoryUncheckedCreateWithoutCategoryInput> | ProductCategoryCreateWithoutCategoryInput[] | ProductCategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutCategoryInput | ProductCategoryCreateOrConnectWithoutCategoryInput[]
    createMany?: ProductCategoryCreateManyCategoryInputEnvelope
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ProductCategoryUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutCategoryInput, ProductCategoryUncheckedCreateWithoutCategoryInput> | ProductCategoryCreateWithoutCategoryInput[] | ProductCategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutCategoryInput | ProductCategoryCreateOrConnectWithoutCategoryInput[]
    upsert?: ProductCategoryUpsertWithWhereUniqueWithoutCategoryInput | ProductCategoryUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProductCategoryCreateManyCategoryInputEnvelope
    set?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    disconnect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    delete?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    update?: ProductCategoryUpdateWithWhereUniqueWithoutCategoryInput | ProductCategoryUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProductCategoryUpdateManyWithWhereWithoutCategoryInput | ProductCategoryUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
  }

  export type CategoryUpdateOneWithoutChildrenNestedInput = {
    create?: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutChildrenInput
    upsert?: CategoryUpsertWithoutChildrenInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutChildrenInput, CategoryUpdateWithoutChildrenInput>, CategoryUncheckedUpdateWithoutChildrenInput>
  }

  export type CategoryUpdateManyWithoutParentNestedInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentInput | CategoryUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentInput | CategoryUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentInput | CategoryUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ImageUpdateOneWithoutCategoryImageNestedInput = {
    create?: XOR<ImageCreateWithoutCategoryImageInput, ImageUncheckedCreateWithoutCategoryImageInput>
    connectOrCreate?: ImageCreateOrConnectWithoutCategoryImageInput
    upsert?: ImageUpsertWithoutCategoryImageInput
    disconnect?: ImageWhereInput | boolean
    delete?: ImageWhereInput | boolean
    connect?: ImageWhereUniqueInput
    update?: XOR<XOR<ImageUpdateToOneWithWhereWithoutCategoryImageInput, ImageUpdateWithoutCategoryImageInput>, ImageUncheckedUpdateWithoutCategoryImageInput>
  }

  export type ImageUpdateOneWithoutCategoryMiniatureNestedInput = {
    create?: XOR<ImageCreateWithoutCategoryMiniatureInput, ImageUncheckedCreateWithoutCategoryMiniatureInput>
    connectOrCreate?: ImageCreateOrConnectWithoutCategoryMiniatureInput
    upsert?: ImageUpsertWithoutCategoryMiniatureInput
    disconnect?: ImageWhereInput | boolean
    delete?: ImageWhereInput | boolean
    connect?: ImageWhereUniqueInput
    update?: XOR<XOR<ImageUpdateToOneWithWhereWithoutCategoryMiniatureInput, ImageUpdateWithoutCategoryMiniatureInput>, ImageUncheckedUpdateWithoutCategoryMiniatureInput>
  }

  export type ProductCategoryUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutCategoryInput, ProductCategoryUncheckedCreateWithoutCategoryInput> | ProductCategoryCreateWithoutCategoryInput[] | ProductCategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutCategoryInput | ProductCategoryCreateOrConnectWithoutCategoryInput[]
    upsert?: ProductCategoryUpsertWithWhereUniqueWithoutCategoryInput | ProductCategoryUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProductCategoryCreateManyCategoryInputEnvelope
    set?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    disconnect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    delete?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    update?: ProductCategoryUpdateWithWhereUniqueWithoutCategoryInput | ProductCategoryUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProductCategoryUpdateManyWithWhereWithoutCategoryInput | ProductCategoryUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentInput | CategoryUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentInput | CategoryUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentInput | CategoryUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ProductPromotionCreateNestedManyWithoutPromotionInput = {
    create?: XOR<ProductPromotionCreateWithoutPromotionInput, ProductPromotionUncheckedCreateWithoutPromotionInput> | ProductPromotionCreateWithoutPromotionInput[] | ProductPromotionUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: ProductPromotionCreateOrConnectWithoutPromotionInput | ProductPromotionCreateOrConnectWithoutPromotionInput[]
    createMany?: ProductPromotionCreateManyPromotionInputEnvelope
    connect?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
  }

  export type OrderLineCreateNestedManyWithoutPromotionInput = {
    create?: XOR<OrderLineCreateWithoutPromotionInput, OrderLineUncheckedCreateWithoutPromotionInput> | OrderLineCreateWithoutPromotionInput[] | OrderLineUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: OrderLineCreateOrConnectWithoutPromotionInput | OrderLineCreateOrConnectWithoutPromotionInput[]
    createMany?: OrderLineCreateManyPromotionInputEnvelope
    connect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
  }

  export type ProductPromotionUncheckedCreateNestedManyWithoutPromotionInput = {
    create?: XOR<ProductPromotionCreateWithoutPromotionInput, ProductPromotionUncheckedCreateWithoutPromotionInput> | ProductPromotionCreateWithoutPromotionInput[] | ProductPromotionUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: ProductPromotionCreateOrConnectWithoutPromotionInput | ProductPromotionCreateOrConnectWithoutPromotionInput[]
    createMany?: ProductPromotionCreateManyPromotionInputEnvelope
    connect?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
  }

  export type OrderLineUncheckedCreateNestedManyWithoutPromotionInput = {
    create?: XOR<OrderLineCreateWithoutPromotionInput, OrderLineUncheckedCreateWithoutPromotionInput> | OrderLineCreateWithoutPromotionInput[] | OrderLineUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: OrderLineCreateOrConnectWithoutPromotionInput | OrderLineCreateOrConnectWithoutPromotionInput[]
    createMany?: OrderLineCreateManyPromotionInputEnvelope
    connect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
  }

  export type EnumReductionTypeFieldUpdateOperationsInput = {
    set?: $Enums.ReductionType
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type ProductPromotionUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<ProductPromotionCreateWithoutPromotionInput, ProductPromotionUncheckedCreateWithoutPromotionInput> | ProductPromotionCreateWithoutPromotionInput[] | ProductPromotionUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: ProductPromotionCreateOrConnectWithoutPromotionInput | ProductPromotionCreateOrConnectWithoutPromotionInput[]
    upsert?: ProductPromotionUpsertWithWhereUniqueWithoutPromotionInput | ProductPromotionUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: ProductPromotionCreateManyPromotionInputEnvelope
    set?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    disconnect?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    delete?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    connect?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    update?: ProductPromotionUpdateWithWhereUniqueWithoutPromotionInput | ProductPromotionUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: ProductPromotionUpdateManyWithWhereWithoutPromotionInput | ProductPromotionUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: ProductPromotionScalarWhereInput | ProductPromotionScalarWhereInput[]
  }

  export type OrderLineUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<OrderLineCreateWithoutPromotionInput, OrderLineUncheckedCreateWithoutPromotionInput> | OrderLineCreateWithoutPromotionInput[] | OrderLineUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: OrderLineCreateOrConnectWithoutPromotionInput | OrderLineCreateOrConnectWithoutPromotionInput[]
    upsert?: OrderLineUpsertWithWhereUniqueWithoutPromotionInput | OrderLineUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: OrderLineCreateManyPromotionInputEnvelope
    set?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    disconnect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    delete?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    connect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    update?: OrderLineUpdateWithWhereUniqueWithoutPromotionInput | OrderLineUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: OrderLineUpdateManyWithWhereWithoutPromotionInput | OrderLineUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: OrderLineScalarWhereInput | OrderLineScalarWhereInput[]
  }

  export type ProductPromotionUncheckedUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<ProductPromotionCreateWithoutPromotionInput, ProductPromotionUncheckedCreateWithoutPromotionInput> | ProductPromotionCreateWithoutPromotionInput[] | ProductPromotionUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: ProductPromotionCreateOrConnectWithoutPromotionInput | ProductPromotionCreateOrConnectWithoutPromotionInput[]
    upsert?: ProductPromotionUpsertWithWhereUniqueWithoutPromotionInput | ProductPromotionUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: ProductPromotionCreateManyPromotionInputEnvelope
    set?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    disconnect?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    delete?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    connect?: ProductPromotionWhereUniqueInput | ProductPromotionWhereUniqueInput[]
    update?: ProductPromotionUpdateWithWhereUniqueWithoutPromotionInput | ProductPromotionUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: ProductPromotionUpdateManyWithWhereWithoutPromotionInput | ProductPromotionUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: ProductPromotionScalarWhereInput | ProductPromotionScalarWhereInput[]
  }

  export type OrderLineUncheckedUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<OrderLineCreateWithoutPromotionInput, OrderLineUncheckedCreateWithoutPromotionInput> | OrderLineCreateWithoutPromotionInput[] | OrderLineUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: OrderLineCreateOrConnectWithoutPromotionInput | OrderLineCreateOrConnectWithoutPromotionInput[]
    upsert?: OrderLineUpsertWithWhereUniqueWithoutPromotionInput | OrderLineUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: OrderLineCreateManyPromotionInputEnvelope
    set?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    disconnect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    delete?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    connect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    update?: OrderLineUpdateWithWhereUniqueWithoutPromotionInput | OrderLineUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: OrderLineUpdateManyWithWhereWithoutPromotionInput | OrderLineUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: OrderLineScalarWhereInput | OrderLineScalarWhereInput[]
  }

  export type CategoryCreateNestedOneWithoutProductCategoryInput = {
    create?: XOR<CategoryCreateWithoutProductCategoryInput, CategoryUncheckedCreateWithoutProductCategoryInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProductCategoryInput
    connect?: CategoryWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutCategoriesInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput
    connect?: ProductWhereUniqueInput
  }

  export type CategoryUpdateOneRequiredWithoutProductCategoryNestedInput = {
    create?: XOR<CategoryCreateWithoutProductCategoryInput, CategoryUncheckedCreateWithoutProductCategoryInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProductCategoryInput
    upsert?: CategoryUpsertWithoutProductCategoryInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutProductCategoryInput, CategoryUpdateWithoutProductCategoryInput>, CategoryUncheckedUpdateWithoutProductCategoryInput>
  }

  export type ProductUpdateOneRequiredWithoutCategoriesNestedInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput
    upsert?: ProductUpsertWithoutCategoriesInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutCategoriesInput, ProductUpdateWithoutCategoriesInput>, ProductUncheckedUpdateWithoutCategoriesInput>
  }

  export type ProductCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<ProductCreateWithoutPromotionsInput, ProductUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutPromotionsInput
    connect?: ProductWhereUniqueInput
  }

  export type PromotionCreateNestedOneWithoutProductsInput = {
    create?: XOR<PromotionCreateWithoutProductsInput, PromotionUncheckedCreateWithoutProductsInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutProductsInput
    connect?: PromotionWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutPromotionsNestedInput = {
    create?: XOR<ProductCreateWithoutPromotionsInput, ProductUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutPromotionsInput
    upsert?: ProductUpsertWithoutPromotionsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutPromotionsInput, ProductUpdateWithoutPromotionsInput>, ProductUncheckedUpdateWithoutPromotionsInput>
  }

  export type PromotionUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<PromotionCreateWithoutProductsInput, PromotionUncheckedCreateWithoutProductsInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutProductsInput
    upsert?: PromotionUpsertWithoutProductsInput
    connect?: PromotionWhereUniqueInput
    update?: XOR<XOR<PromotionUpdateToOneWithWhereWithoutProductsInput, PromotionUpdateWithoutProductsInput>, PromotionUncheckedUpdateWithoutProductsInput>
  }

  export type DeliveryCreateNestedManyWithoutMethodInput = {
    create?: XOR<DeliveryCreateWithoutMethodInput, DeliveryUncheckedCreateWithoutMethodInput> | DeliveryCreateWithoutMethodInput[] | DeliveryUncheckedCreateWithoutMethodInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutMethodInput | DeliveryCreateOrConnectWithoutMethodInput[]
    createMany?: DeliveryCreateManyMethodInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type DeliveryUncheckedCreateNestedManyWithoutMethodInput = {
    create?: XOR<DeliveryCreateWithoutMethodInput, DeliveryUncheckedCreateWithoutMethodInput> | DeliveryCreateWithoutMethodInput[] | DeliveryUncheckedCreateWithoutMethodInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutMethodInput | DeliveryCreateOrConnectWithoutMethodInput[]
    createMany?: DeliveryCreateManyMethodInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type EnumDeliveryMethodTypeFieldUpdateOperationsInput = {
    set?: $Enums.DeliveryMethodType
  }

  export type DeliveryUpdateManyWithoutMethodNestedInput = {
    create?: XOR<DeliveryCreateWithoutMethodInput, DeliveryUncheckedCreateWithoutMethodInput> | DeliveryCreateWithoutMethodInput[] | DeliveryUncheckedCreateWithoutMethodInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutMethodInput | DeliveryCreateOrConnectWithoutMethodInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutMethodInput | DeliveryUpsertWithWhereUniqueWithoutMethodInput[]
    createMany?: DeliveryCreateManyMethodInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutMethodInput | DeliveryUpdateWithWhereUniqueWithoutMethodInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutMethodInput | DeliveryUpdateManyWithWhereWithoutMethodInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type DeliveryUncheckedUpdateManyWithoutMethodNestedInput = {
    create?: XOR<DeliveryCreateWithoutMethodInput, DeliveryUncheckedCreateWithoutMethodInput> | DeliveryCreateWithoutMethodInput[] | DeliveryUncheckedCreateWithoutMethodInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutMethodInput | DeliveryCreateOrConnectWithoutMethodInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutMethodInput | DeliveryUpsertWithWhereUniqueWithoutMethodInput[]
    createMany?: DeliveryCreateManyMethodInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutMethodInput | DeliveryUpdateWithWhereUniqueWithoutMethodInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutMethodInput | DeliveryUpdateManyWithWhereWithoutMethodInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type DeliveryMethodCreateNestedOneWithoutDeliveriesInput = {
    create?: XOR<DeliveryMethodCreateWithoutDeliveriesInput, DeliveryMethodUncheckedCreateWithoutDeliveriesInput>
    connectOrCreate?: DeliveryMethodCreateOrConnectWithoutDeliveriesInput
    connect?: DeliveryMethodWhereUniqueInput
  }

  export type MediaCreateNestedOneWithoutDeliverySenderAddressInput = {
    create?: XOR<MediaCreateWithoutDeliverySenderAddressInput, MediaUncheckedCreateWithoutDeliverySenderAddressInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliverySenderAddressInput
    connect?: MediaWhereUniqueInput
  }

  export type MediaCreateNestedOneWithoutDeliverySenderPhoneInput = {
    create?: XOR<MediaCreateWithoutDeliverySenderPhoneInput, MediaUncheckedCreateWithoutDeliverySenderPhoneInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliverySenderPhoneInput
    connect?: MediaWhereUniqueInput
  }

  export type MediaCreateNestedOneWithoutDeliverySenderEmailInput = {
    create?: XOR<MediaCreateWithoutDeliverySenderEmailInput, MediaUncheckedCreateWithoutDeliverySenderEmailInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliverySenderEmailInput
    connect?: MediaWhereUniqueInput
  }

  export type MediaCreateNestedOneWithoutDeliveryReceiverAddressInput = {
    create?: XOR<MediaCreateWithoutDeliveryReceiverAddressInput, MediaUncheckedCreateWithoutDeliveryReceiverAddressInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliveryReceiverAddressInput
    connect?: MediaWhereUniqueInput
  }

  export type MediaCreateNestedOneWithoutDeliveryReceiverPhoneInput = {
    create?: XOR<MediaCreateWithoutDeliveryReceiverPhoneInput, MediaUncheckedCreateWithoutDeliveryReceiverPhoneInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliveryReceiverPhoneInput
    connect?: MediaWhereUniqueInput
  }

  export type MediaCreateNestedOneWithoutDeliveryReceiverEmailInput = {
    create?: XOR<MediaCreateWithoutDeliveryReceiverEmailInput, MediaUncheckedCreateWithoutDeliveryReceiverEmailInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliveryReceiverEmailInput
    connect?: MediaWhereUniqueInput
  }

  export type OrderCreateNestedOneWithoutDeliveriesInput = {
    create?: XOR<OrderCreateWithoutDeliveriesInput, OrderUncheckedCreateWithoutDeliveriesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutDeliveriesInput
    connect?: OrderWhereUniqueInput
  }

  export type EnumDeliveryDirectionFieldUpdateOperationsInput = {
    set?: $Enums.DeliveryDirection
  }

  export type EnumDeliveryStatusFieldUpdateOperationsInput = {
    set?: $Enums.DeliveryStatus
  }

  export type NullableBytesFieldUpdateOperationsInput = {
    set?: Buffer | null
  }

  export type DeliveryMethodUpdateOneRequiredWithoutDeliveriesNestedInput = {
    create?: XOR<DeliveryMethodCreateWithoutDeliveriesInput, DeliveryMethodUncheckedCreateWithoutDeliveriesInput>
    connectOrCreate?: DeliveryMethodCreateOrConnectWithoutDeliveriesInput
    upsert?: DeliveryMethodUpsertWithoutDeliveriesInput
    connect?: DeliveryMethodWhereUniqueInput
    update?: XOR<XOR<DeliveryMethodUpdateToOneWithWhereWithoutDeliveriesInput, DeliveryMethodUpdateWithoutDeliveriesInput>, DeliveryMethodUncheckedUpdateWithoutDeliveriesInput>
  }

  export type MediaUpdateOneRequiredWithoutDeliverySenderAddressNestedInput = {
    create?: XOR<MediaCreateWithoutDeliverySenderAddressInput, MediaUncheckedCreateWithoutDeliverySenderAddressInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliverySenderAddressInput
    upsert?: MediaUpsertWithoutDeliverySenderAddressInput
    connect?: MediaWhereUniqueInput
    update?: XOR<XOR<MediaUpdateToOneWithWhereWithoutDeliverySenderAddressInput, MediaUpdateWithoutDeliverySenderAddressInput>, MediaUncheckedUpdateWithoutDeliverySenderAddressInput>
  }

  export type MediaUpdateOneRequiredWithoutDeliverySenderPhoneNestedInput = {
    create?: XOR<MediaCreateWithoutDeliverySenderPhoneInput, MediaUncheckedCreateWithoutDeliverySenderPhoneInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliverySenderPhoneInput
    upsert?: MediaUpsertWithoutDeliverySenderPhoneInput
    connect?: MediaWhereUniqueInput
    update?: XOR<XOR<MediaUpdateToOneWithWhereWithoutDeliverySenderPhoneInput, MediaUpdateWithoutDeliverySenderPhoneInput>, MediaUncheckedUpdateWithoutDeliverySenderPhoneInput>
  }

  export type MediaUpdateOneRequiredWithoutDeliverySenderEmailNestedInput = {
    create?: XOR<MediaCreateWithoutDeliverySenderEmailInput, MediaUncheckedCreateWithoutDeliverySenderEmailInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliverySenderEmailInput
    upsert?: MediaUpsertWithoutDeliverySenderEmailInput
    connect?: MediaWhereUniqueInput
    update?: XOR<XOR<MediaUpdateToOneWithWhereWithoutDeliverySenderEmailInput, MediaUpdateWithoutDeliverySenderEmailInput>, MediaUncheckedUpdateWithoutDeliverySenderEmailInput>
  }

  export type MediaUpdateOneRequiredWithoutDeliveryReceiverAddressNestedInput = {
    create?: XOR<MediaCreateWithoutDeliveryReceiverAddressInput, MediaUncheckedCreateWithoutDeliveryReceiverAddressInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliveryReceiverAddressInput
    upsert?: MediaUpsertWithoutDeliveryReceiverAddressInput
    connect?: MediaWhereUniqueInput
    update?: XOR<XOR<MediaUpdateToOneWithWhereWithoutDeliveryReceiverAddressInput, MediaUpdateWithoutDeliveryReceiverAddressInput>, MediaUncheckedUpdateWithoutDeliveryReceiverAddressInput>
  }

  export type MediaUpdateOneRequiredWithoutDeliveryReceiverPhoneNestedInput = {
    create?: XOR<MediaCreateWithoutDeliveryReceiverPhoneInput, MediaUncheckedCreateWithoutDeliveryReceiverPhoneInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliveryReceiverPhoneInput
    upsert?: MediaUpsertWithoutDeliveryReceiverPhoneInput
    connect?: MediaWhereUniqueInput
    update?: XOR<XOR<MediaUpdateToOneWithWhereWithoutDeliveryReceiverPhoneInput, MediaUpdateWithoutDeliveryReceiverPhoneInput>, MediaUncheckedUpdateWithoutDeliveryReceiverPhoneInput>
  }

  export type MediaUpdateOneRequiredWithoutDeliveryReceiverEmailNestedInput = {
    create?: XOR<MediaCreateWithoutDeliveryReceiverEmailInput, MediaUncheckedCreateWithoutDeliveryReceiverEmailInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliveryReceiverEmailInput
    upsert?: MediaUpsertWithoutDeliveryReceiverEmailInput
    connect?: MediaWhereUniqueInput
    update?: XOR<XOR<MediaUpdateToOneWithWhereWithoutDeliveryReceiverEmailInput, MediaUpdateWithoutDeliveryReceiverEmailInput>, MediaUncheckedUpdateWithoutDeliveryReceiverEmailInput>
  }

  export type OrderUpdateOneRequiredWithoutDeliveriesNestedInput = {
    create?: XOR<OrderCreateWithoutDeliveriesInput, OrderUncheckedCreateWithoutDeliveriesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutDeliveriesInput
    upsert?: OrderUpsertWithoutDeliveriesInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutDeliveriesInput, OrderUpdateWithoutDeliveriesInput>, OrderUncheckedUpdateWithoutDeliveriesInput>
  }

  export type OrderCreateNestedOneWithoutPaymentInput = {
    create?: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput>
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentInput
    connect?: OrderWhereUniqueInput
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type OrderUpdateOneRequiredWithoutPaymentNestedInput = {
    create?: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput>
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentInput
    upsert?: OrderUpsertWithoutPaymentInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutPaymentInput, OrderUpdateWithoutPaymentInput>, OrderUncheckedUpdateWithoutPaymentInput>
  }

  export type ProductCreateNestedOneWithoutOrderLinesInput = {
    create?: XOR<ProductCreateWithoutOrderLinesInput, ProductUncheckedCreateWithoutOrderLinesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutOrderLinesInput
    connect?: ProductWhereUniqueInput
  }

  export type OrderCreateNestedOneWithoutLinesInput = {
    create?: XOR<OrderCreateWithoutLinesInput, OrderUncheckedCreateWithoutLinesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutLinesInput
    connect?: OrderWhereUniqueInput
  }

  export type PromotionCreateNestedOneWithoutOrderLinesInput = {
    create?: XOR<PromotionCreateWithoutOrderLinesInput, PromotionUncheckedCreateWithoutOrderLinesInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutOrderLinesInput
    connect?: PromotionWhereUniqueInput
  }

  export type EnumOrderLineStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderLineStatus
  }

  export type ProductUpdateOneRequiredWithoutOrderLinesNestedInput = {
    create?: XOR<ProductCreateWithoutOrderLinesInput, ProductUncheckedCreateWithoutOrderLinesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutOrderLinesInput
    upsert?: ProductUpsertWithoutOrderLinesInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutOrderLinesInput, ProductUpdateWithoutOrderLinesInput>, ProductUncheckedUpdateWithoutOrderLinesInput>
  }

  export type OrderUpdateOneRequiredWithoutLinesNestedInput = {
    create?: XOR<OrderCreateWithoutLinesInput, OrderUncheckedCreateWithoutLinesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutLinesInput
    upsert?: OrderUpsertWithoutLinesInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutLinesInput, OrderUpdateWithoutLinesInput>, OrderUncheckedUpdateWithoutLinesInput>
  }

  export type PromotionUpdateOneWithoutOrderLinesNestedInput = {
    create?: XOR<PromotionCreateWithoutOrderLinesInput, PromotionUncheckedCreateWithoutOrderLinesInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutOrderLinesInput
    upsert?: PromotionUpsertWithoutOrderLinesInput
    disconnect?: PromotionWhereInput | boolean
    delete?: PromotionWhereInput | boolean
    connect?: PromotionWhereUniqueInput
    update?: XOR<XOR<PromotionUpdateToOneWithWhereWithoutOrderLinesInput, PromotionUpdateWithoutOrderLinesInput>, PromotionUncheckedUpdateWithoutOrderLinesInput>
  }

  export type OrderCreateNestedManyWithoutDeliveryAddressInput = {
    create?: XOR<OrderCreateWithoutDeliveryAddressInput, OrderUncheckedCreateWithoutDeliveryAddressInput> | OrderCreateWithoutDeliveryAddressInput[] | OrderUncheckedCreateWithoutDeliveryAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutDeliveryAddressInput | OrderCreateOrConnectWithoutDeliveryAddressInput[]
    createMany?: OrderCreateManyDeliveryAddressInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutBillingAddressInput = {
    create?: XOR<OrderCreateWithoutBillingAddressInput, OrderUncheckedCreateWithoutBillingAddressInput> | OrderCreateWithoutBillingAddressInput[] | OrderUncheckedCreateWithoutBillingAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingAddressInput | OrderCreateOrConnectWithoutBillingAddressInput[]
    createMany?: OrderCreateManyBillingAddressInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutPhoneInput = {
    create?: XOR<OrderCreateWithoutPhoneInput, OrderUncheckedCreateWithoutPhoneInput> | OrderCreateWithoutPhoneInput[] | OrderUncheckedCreateWithoutPhoneInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutPhoneInput | OrderCreateOrConnectWithoutPhoneInput[]
    createMany?: OrderCreateManyPhoneInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutEmailInput = {
    create?: XOR<OrderCreateWithoutEmailInput, OrderUncheckedCreateWithoutEmailInput> | OrderCreateWithoutEmailInput[] | OrderUncheckedCreateWithoutEmailInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutEmailInput | OrderCreateOrConnectWithoutEmailInput[]
    createMany?: OrderCreateManyEmailInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type DeliveryCreateNestedManyWithoutSenderAddressInput = {
    create?: XOR<DeliveryCreateWithoutSenderAddressInput, DeliveryUncheckedCreateWithoutSenderAddressInput> | DeliveryCreateWithoutSenderAddressInput[] | DeliveryUncheckedCreateWithoutSenderAddressInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutSenderAddressInput | DeliveryCreateOrConnectWithoutSenderAddressInput[]
    createMany?: DeliveryCreateManySenderAddressInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type DeliveryCreateNestedManyWithoutSenderPhoneInput = {
    create?: XOR<DeliveryCreateWithoutSenderPhoneInput, DeliveryUncheckedCreateWithoutSenderPhoneInput> | DeliveryCreateWithoutSenderPhoneInput[] | DeliveryUncheckedCreateWithoutSenderPhoneInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutSenderPhoneInput | DeliveryCreateOrConnectWithoutSenderPhoneInput[]
    createMany?: DeliveryCreateManySenderPhoneInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type DeliveryCreateNestedManyWithoutSenderEmailInput = {
    create?: XOR<DeliveryCreateWithoutSenderEmailInput, DeliveryUncheckedCreateWithoutSenderEmailInput> | DeliveryCreateWithoutSenderEmailInput[] | DeliveryUncheckedCreateWithoutSenderEmailInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutSenderEmailInput | DeliveryCreateOrConnectWithoutSenderEmailInput[]
    createMany?: DeliveryCreateManySenderEmailInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type DeliveryCreateNestedManyWithoutReceiverAddressInput = {
    create?: XOR<DeliveryCreateWithoutReceiverAddressInput, DeliveryUncheckedCreateWithoutReceiverAddressInput> | DeliveryCreateWithoutReceiverAddressInput[] | DeliveryUncheckedCreateWithoutReceiverAddressInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutReceiverAddressInput | DeliveryCreateOrConnectWithoutReceiverAddressInput[]
    createMany?: DeliveryCreateManyReceiverAddressInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type DeliveryCreateNestedManyWithoutReceiverPhoneInput = {
    create?: XOR<DeliveryCreateWithoutReceiverPhoneInput, DeliveryUncheckedCreateWithoutReceiverPhoneInput> | DeliveryCreateWithoutReceiverPhoneInput[] | DeliveryUncheckedCreateWithoutReceiverPhoneInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutReceiverPhoneInput | DeliveryCreateOrConnectWithoutReceiverPhoneInput[]
    createMany?: DeliveryCreateManyReceiverPhoneInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type DeliveryCreateNestedManyWithoutReceiverEmailInput = {
    create?: XOR<DeliveryCreateWithoutReceiverEmailInput, DeliveryUncheckedCreateWithoutReceiverEmailInput> | DeliveryCreateWithoutReceiverEmailInput[] | DeliveryUncheckedCreateWithoutReceiverEmailInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutReceiverEmailInput | DeliveryCreateOrConnectWithoutReceiverEmailInput[]
    createMany?: DeliveryCreateManyReceiverEmailInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type CustomerCreateNestedManyWithoutAddressInput = {
    create?: XOR<CustomerCreateWithoutAddressInput, CustomerUncheckedCreateWithoutAddressInput> | CustomerCreateWithoutAddressInput[] | CustomerUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutAddressInput | CustomerCreateOrConnectWithoutAddressInput[]
    createMany?: CustomerCreateManyAddressInputEnvelope
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
  }

  export type CustomerCreateNestedManyWithoutPhoneInput = {
    create?: XOR<CustomerCreateWithoutPhoneInput, CustomerUncheckedCreateWithoutPhoneInput> | CustomerCreateWithoutPhoneInput[] | CustomerUncheckedCreateWithoutPhoneInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutPhoneInput | CustomerCreateOrConnectWithoutPhoneInput[]
    createMany?: CustomerCreateManyPhoneInputEnvelope
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutDeliveryAddressInput = {
    create?: XOR<OrderCreateWithoutDeliveryAddressInput, OrderUncheckedCreateWithoutDeliveryAddressInput> | OrderCreateWithoutDeliveryAddressInput[] | OrderUncheckedCreateWithoutDeliveryAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutDeliveryAddressInput | OrderCreateOrConnectWithoutDeliveryAddressInput[]
    createMany?: OrderCreateManyDeliveryAddressInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutBillingAddressInput = {
    create?: XOR<OrderCreateWithoutBillingAddressInput, OrderUncheckedCreateWithoutBillingAddressInput> | OrderCreateWithoutBillingAddressInput[] | OrderUncheckedCreateWithoutBillingAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingAddressInput | OrderCreateOrConnectWithoutBillingAddressInput[]
    createMany?: OrderCreateManyBillingAddressInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutPhoneInput = {
    create?: XOR<OrderCreateWithoutPhoneInput, OrderUncheckedCreateWithoutPhoneInput> | OrderCreateWithoutPhoneInput[] | OrderUncheckedCreateWithoutPhoneInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutPhoneInput | OrderCreateOrConnectWithoutPhoneInput[]
    createMany?: OrderCreateManyPhoneInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutEmailInput = {
    create?: XOR<OrderCreateWithoutEmailInput, OrderUncheckedCreateWithoutEmailInput> | OrderCreateWithoutEmailInput[] | OrderUncheckedCreateWithoutEmailInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutEmailInput | OrderCreateOrConnectWithoutEmailInput[]
    createMany?: OrderCreateManyEmailInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type DeliveryUncheckedCreateNestedManyWithoutSenderAddressInput = {
    create?: XOR<DeliveryCreateWithoutSenderAddressInput, DeliveryUncheckedCreateWithoutSenderAddressInput> | DeliveryCreateWithoutSenderAddressInput[] | DeliveryUncheckedCreateWithoutSenderAddressInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutSenderAddressInput | DeliveryCreateOrConnectWithoutSenderAddressInput[]
    createMany?: DeliveryCreateManySenderAddressInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type DeliveryUncheckedCreateNestedManyWithoutSenderPhoneInput = {
    create?: XOR<DeliveryCreateWithoutSenderPhoneInput, DeliveryUncheckedCreateWithoutSenderPhoneInput> | DeliveryCreateWithoutSenderPhoneInput[] | DeliveryUncheckedCreateWithoutSenderPhoneInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutSenderPhoneInput | DeliveryCreateOrConnectWithoutSenderPhoneInput[]
    createMany?: DeliveryCreateManySenderPhoneInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type DeliveryUncheckedCreateNestedManyWithoutSenderEmailInput = {
    create?: XOR<DeliveryCreateWithoutSenderEmailInput, DeliveryUncheckedCreateWithoutSenderEmailInput> | DeliveryCreateWithoutSenderEmailInput[] | DeliveryUncheckedCreateWithoutSenderEmailInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutSenderEmailInput | DeliveryCreateOrConnectWithoutSenderEmailInput[]
    createMany?: DeliveryCreateManySenderEmailInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type DeliveryUncheckedCreateNestedManyWithoutReceiverAddressInput = {
    create?: XOR<DeliveryCreateWithoutReceiverAddressInput, DeliveryUncheckedCreateWithoutReceiverAddressInput> | DeliveryCreateWithoutReceiverAddressInput[] | DeliveryUncheckedCreateWithoutReceiverAddressInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutReceiverAddressInput | DeliveryCreateOrConnectWithoutReceiverAddressInput[]
    createMany?: DeliveryCreateManyReceiverAddressInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type DeliveryUncheckedCreateNestedManyWithoutReceiverPhoneInput = {
    create?: XOR<DeliveryCreateWithoutReceiverPhoneInput, DeliveryUncheckedCreateWithoutReceiverPhoneInput> | DeliveryCreateWithoutReceiverPhoneInput[] | DeliveryUncheckedCreateWithoutReceiverPhoneInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutReceiverPhoneInput | DeliveryCreateOrConnectWithoutReceiverPhoneInput[]
    createMany?: DeliveryCreateManyReceiverPhoneInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type DeliveryUncheckedCreateNestedManyWithoutReceiverEmailInput = {
    create?: XOR<DeliveryCreateWithoutReceiverEmailInput, DeliveryUncheckedCreateWithoutReceiverEmailInput> | DeliveryCreateWithoutReceiverEmailInput[] | DeliveryUncheckedCreateWithoutReceiverEmailInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutReceiverEmailInput | DeliveryCreateOrConnectWithoutReceiverEmailInput[]
    createMany?: DeliveryCreateManyReceiverEmailInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type CustomerUncheckedCreateNestedManyWithoutAddressInput = {
    create?: XOR<CustomerCreateWithoutAddressInput, CustomerUncheckedCreateWithoutAddressInput> | CustomerCreateWithoutAddressInput[] | CustomerUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutAddressInput | CustomerCreateOrConnectWithoutAddressInput[]
    createMany?: CustomerCreateManyAddressInputEnvelope
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
  }

  export type CustomerUncheckedCreateNestedManyWithoutPhoneInput = {
    create?: XOR<CustomerCreateWithoutPhoneInput, CustomerUncheckedCreateWithoutPhoneInput> | CustomerCreateWithoutPhoneInput[] | CustomerUncheckedCreateWithoutPhoneInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutPhoneInput | CustomerCreateOrConnectWithoutPhoneInput[]
    createMany?: CustomerCreateManyPhoneInputEnvelope
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
  }

  export type EnumMediaTypeFieldUpdateOperationsInput = {
    set?: $Enums.MediaType
  }

  export type OrderUpdateManyWithoutDeliveryAddressNestedInput = {
    create?: XOR<OrderCreateWithoutDeliveryAddressInput, OrderUncheckedCreateWithoutDeliveryAddressInput> | OrderCreateWithoutDeliveryAddressInput[] | OrderUncheckedCreateWithoutDeliveryAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutDeliveryAddressInput | OrderCreateOrConnectWithoutDeliveryAddressInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutDeliveryAddressInput | OrderUpsertWithWhereUniqueWithoutDeliveryAddressInput[]
    createMany?: OrderCreateManyDeliveryAddressInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutDeliveryAddressInput | OrderUpdateWithWhereUniqueWithoutDeliveryAddressInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutDeliveryAddressInput | OrderUpdateManyWithWhereWithoutDeliveryAddressInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutBillingAddressNestedInput = {
    create?: XOR<OrderCreateWithoutBillingAddressInput, OrderUncheckedCreateWithoutBillingAddressInput> | OrderCreateWithoutBillingAddressInput[] | OrderUncheckedCreateWithoutBillingAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingAddressInput | OrderCreateOrConnectWithoutBillingAddressInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutBillingAddressInput | OrderUpsertWithWhereUniqueWithoutBillingAddressInput[]
    createMany?: OrderCreateManyBillingAddressInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutBillingAddressInput | OrderUpdateWithWhereUniqueWithoutBillingAddressInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutBillingAddressInput | OrderUpdateManyWithWhereWithoutBillingAddressInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutPhoneNestedInput = {
    create?: XOR<OrderCreateWithoutPhoneInput, OrderUncheckedCreateWithoutPhoneInput> | OrderCreateWithoutPhoneInput[] | OrderUncheckedCreateWithoutPhoneInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutPhoneInput | OrderCreateOrConnectWithoutPhoneInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutPhoneInput | OrderUpsertWithWhereUniqueWithoutPhoneInput[]
    createMany?: OrderCreateManyPhoneInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutPhoneInput | OrderUpdateWithWhereUniqueWithoutPhoneInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutPhoneInput | OrderUpdateManyWithWhereWithoutPhoneInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutEmailNestedInput = {
    create?: XOR<OrderCreateWithoutEmailInput, OrderUncheckedCreateWithoutEmailInput> | OrderCreateWithoutEmailInput[] | OrderUncheckedCreateWithoutEmailInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutEmailInput | OrderCreateOrConnectWithoutEmailInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutEmailInput | OrderUpsertWithWhereUniqueWithoutEmailInput[]
    createMany?: OrderCreateManyEmailInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutEmailInput | OrderUpdateWithWhereUniqueWithoutEmailInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutEmailInput | OrderUpdateManyWithWhereWithoutEmailInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type DeliveryUpdateManyWithoutSenderAddressNestedInput = {
    create?: XOR<DeliveryCreateWithoutSenderAddressInput, DeliveryUncheckedCreateWithoutSenderAddressInput> | DeliveryCreateWithoutSenderAddressInput[] | DeliveryUncheckedCreateWithoutSenderAddressInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutSenderAddressInput | DeliveryCreateOrConnectWithoutSenderAddressInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutSenderAddressInput | DeliveryUpsertWithWhereUniqueWithoutSenderAddressInput[]
    createMany?: DeliveryCreateManySenderAddressInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutSenderAddressInput | DeliveryUpdateWithWhereUniqueWithoutSenderAddressInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutSenderAddressInput | DeliveryUpdateManyWithWhereWithoutSenderAddressInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type DeliveryUpdateManyWithoutSenderPhoneNestedInput = {
    create?: XOR<DeliveryCreateWithoutSenderPhoneInput, DeliveryUncheckedCreateWithoutSenderPhoneInput> | DeliveryCreateWithoutSenderPhoneInput[] | DeliveryUncheckedCreateWithoutSenderPhoneInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutSenderPhoneInput | DeliveryCreateOrConnectWithoutSenderPhoneInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutSenderPhoneInput | DeliveryUpsertWithWhereUniqueWithoutSenderPhoneInput[]
    createMany?: DeliveryCreateManySenderPhoneInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutSenderPhoneInput | DeliveryUpdateWithWhereUniqueWithoutSenderPhoneInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutSenderPhoneInput | DeliveryUpdateManyWithWhereWithoutSenderPhoneInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type DeliveryUpdateManyWithoutSenderEmailNestedInput = {
    create?: XOR<DeliveryCreateWithoutSenderEmailInput, DeliveryUncheckedCreateWithoutSenderEmailInput> | DeliveryCreateWithoutSenderEmailInput[] | DeliveryUncheckedCreateWithoutSenderEmailInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutSenderEmailInput | DeliveryCreateOrConnectWithoutSenderEmailInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutSenderEmailInput | DeliveryUpsertWithWhereUniqueWithoutSenderEmailInput[]
    createMany?: DeliveryCreateManySenderEmailInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutSenderEmailInput | DeliveryUpdateWithWhereUniqueWithoutSenderEmailInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutSenderEmailInput | DeliveryUpdateManyWithWhereWithoutSenderEmailInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type DeliveryUpdateManyWithoutReceiverAddressNestedInput = {
    create?: XOR<DeliveryCreateWithoutReceiverAddressInput, DeliveryUncheckedCreateWithoutReceiverAddressInput> | DeliveryCreateWithoutReceiverAddressInput[] | DeliveryUncheckedCreateWithoutReceiverAddressInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutReceiverAddressInput | DeliveryCreateOrConnectWithoutReceiverAddressInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutReceiverAddressInput | DeliveryUpsertWithWhereUniqueWithoutReceiverAddressInput[]
    createMany?: DeliveryCreateManyReceiverAddressInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutReceiverAddressInput | DeliveryUpdateWithWhereUniqueWithoutReceiverAddressInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutReceiverAddressInput | DeliveryUpdateManyWithWhereWithoutReceiverAddressInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type DeliveryUpdateManyWithoutReceiverPhoneNestedInput = {
    create?: XOR<DeliveryCreateWithoutReceiverPhoneInput, DeliveryUncheckedCreateWithoutReceiverPhoneInput> | DeliveryCreateWithoutReceiverPhoneInput[] | DeliveryUncheckedCreateWithoutReceiverPhoneInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutReceiverPhoneInput | DeliveryCreateOrConnectWithoutReceiverPhoneInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutReceiverPhoneInput | DeliveryUpsertWithWhereUniqueWithoutReceiverPhoneInput[]
    createMany?: DeliveryCreateManyReceiverPhoneInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutReceiverPhoneInput | DeliveryUpdateWithWhereUniqueWithoutReceiverPhoneInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutReceiverPhoneInput | DeliveryUpdateManyWithWhereWithoutReceiverPhoneInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type DeliveryUpdateManyWithoutReceiverEmailNestedInput = {
    create?: XOR<DeliveryCreateWithoutReceiverEmailInput, DeliveryUncheckedCreateWithoutReceiverEmailInput> | DeliveryCreateWithoutReceiverEmailInput[] | DeliveryUncheckedCreateWithoutReceiverEmailInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutReceiverEmailInput | DeliveryCreateOrConnectWithoutReceiverEmailInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutReceiverEmailInput | DeliveryUpsertWithWhereUniqueWithoutReceiverEmailInput[]
    createMany?: DeliveryCreateManyReceiverEmailInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutReceiverEmailInput | DeliveryUpdateWithWhereUniqueWithoutReceiverEmailInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutReceiverEmailInput | DeliveryUpdateManyWithWhereWithoutReceiverEmailInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type CustomerUpdateManyWithoutAddressNestedInput = {
    create?: XOR<CustomerCreateWithoutAddressInput, CustomerUncheckedCreateWithoutAddressInput> | CustomerCreateWithoutAddressInput[] | CustomerUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutAddressInput | CustomerCreateOrConnectWithoutAddressInput[]
    upsert?: CustomerUpsertWithWhereUniqueWithoutAddressInput | CustomerUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: CustomerCreateManyAddressInputEnvelope
    set?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    disconnect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    delete?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    update?: CustomerUpdateWithWhereUniqueWithoutAddressInput | CustomerUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: CustomerUpdateManyWithWhereWithoutAddressInput | CustomerUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
  }

  export type CustomerUpdateManyWithoutPhoneNestedInput = {
    create?: XOR<CustomerCreateWithoutPhoneInput, CustomerUncheckedCreateWithoutPhoneInput> | CustomerCreateWithoutPhoneInput[] | CustomerUncheckedCreateWithoutPhoneInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutPhoneInput | CustomerCreateOrConnectWithoutPhoneInput[]
    upsert?: CustomerUpsertWithWhereUniqueWithoutPhoneInput | CustomerUpsertWithWhereUniqueWithoutPhoneInput[]
    createMany?: CustomerCreateManyPhoneInputEnvelope
    set?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    disconnect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    delete?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    update?: CustomerUpdateWithWhereUniqueWithoutPhoneInput | CustomerUpdateWithWhereUniqueWithoutPhoneInput[]
    updateMany?: CustomerUpdateManyWithWhereWithoutPhoneInput | CustomerUpdateManyWithWhereWithoutPhoneInput[]
    deleteMany?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutDeliveryAddressNestedInput = {
    create?: XOR<OrderCreateWithoutDeliveryAddressInput, OrderUncheckedCreateWithoutDeliveryAddressInput> | OrderCreateWithoutDeliveryAddressInput[] | OrderUncheckedCreateWithoutDeliveryAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutDeliveryAddressInput | OrderCreateOrConnectWithoutDeliveryAddressInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutDeliveryAddressInput | OrderUpsertWithWhereUniqueWithoutDeliveryAddressInput[]
    createMany?: OrderCreateManyDeliveryAddressInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutDeliveryAddressInput | OrderUpdateWithWhereUniqueWithoutDeliveryAddressInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutDeliveryAddressInput | OrderUpdateManyWithWhereWithoutDeliveryAddressInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutBillingAddressNestedInput = {
    create?: XOR<OrderCreateWithoutBillingAddressInput, OrderUncheckedCreateWithoutBillingAddressInput> | OrderCreateWithoutBillingAddressInput[] | OrderUncheckedCreateWithoutBillingAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutBillingAddressInput | OrderCreateOrConnectWithoutBillingAddressInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutBillingAddressInput | OrderUpsertWithWhereUniqueWithoutBillingAddressInput[]
    createMany?: OrderCreateManyBillingAddressInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutBillingAddressInput | OrderUpdateWithWhereUniqueWithoutBillingAddressInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutBillingAddressInput | OrderUpdateManyWithWhereWithoutBillingAddressInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutPhoneNestedInput = {
    create?: XOR<OrderCreateWithoutPhoneInput, OrderUncheckedCreateWithoutPhoneInput> | OrderCreateWithoutPhoneInput[] | OrderUncheckedCreateWithoutPhoneInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutPhoneInput | OrderCreateOrConnectWithoutPhoneInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutPhoneInput | OrderUpsertWithWhereUniqueWithoutPhoneInput[]
    createMany?: OrderCreateManyPhoneInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutPhoneInput | OrderUpdateWithWhereUniqueWithoutPhoneInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutPhoneInput | OrderUpdateManyWithWhereWithoutPhoneInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutEmailNestedInput = {
    create?: XOR<OrderCreateWithoutEmailInput, OrderUncheckedCreateWithoutEmailInput> | OrderCreateWithoutEmailInput[] | OrderUncheckedCreateWithoutEmailInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutEmailInput | OrderCreateOrConnectWithoutEmailInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutEmailInput | OrderUpsertWithWhereUniqueWithoutEmailInput[]
    createMany?: OrderCreateManyEmailInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutEmailInput | OrderUpdateWithWhereUniqueWithoutEmailInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutEmailInput | OrderUpdateManyWithWhereWithoutEmailInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type DeliveryUncheckedUpdateManyWithoutSenderAddressNestedInput = {
    create?: XOR<DeliveryCreateWithoutSenderAddressInput, DeliveryUncheckedCreateWithoutSenderAddressInput> | DeliveryCreateWithoutSenderAddressInput[] | DeliveryUncheckedCreateWithoutSenderAddressInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutSenderAddressInput | DeliveryCreateOrConnectWithoutSenderAddressInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutSenderAddressInput | DeliveryUpsertWithWhereUniqueWithoutSenderAddressInput[]
    createMany?: DeliveryCreateManySenderAddressInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutSenderAddressInput | DeliveryUpdateWithWhereUniqueWithoutSenderAddressInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutSenderAddressInput | DeliveryUpdateManyWithWhereWithoutSenderAddressInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type DeliveryUncheckedUpdateManyWithoutSenderPhoneNestedInput = {
    create?: XOR<DeliveryCreateWithoutSenderPhoneInput, DeliveryUncheckedCreateWithoutSenderPhoneInput> | DeliveryCreateWithoutSenderPhoneInput[] | DeliveryUncheckedCreateWithoutSenderPhoneInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutSenderPhoneInput | DeliveryCreateOrConnectWithoutSenderPhoneInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutSenderPhoneInput | DeliveryUpsertWithWhereUniqueWithoutSenderPhoneInput[]
    createMany?: DeliveryCreateManySenderPhoneInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutSenderPhoneInput | DeliveryUpdateWithWhereUniqueWithoutSenderPhoneInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutSenderPhoneInput | DeliveryUpdateManyWithWhereWithoutSenderPhoneInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type DeliveryUncheckedUpdateManyWithoutSenderEmailNestedInput = {
    create?: XOR<DeliveryCreateWithoutSenderEmailInput, DeliveryUncheckedCreateWithoutSenderEmailInput> | DeliveryCreateWithoutSenderEmailInput[] | DeliveryUncheckedCreateWithoutSenderEmailInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutSenderEmailInput | DeliveryCreateOrConnectWithoutSenderEmailInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutSenderEmailInput | DeliveryUpsertWithWhereUniqueWithoutSenderEmailInput[]
    createMany?: DeliveryCreateManySenderEmailInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutSenderEmailInput | DeliveryUpdateWithWhereUniqueWithoutSenderEmailInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutSenderEmailInput | DeliveryUpdateManyWithWhereWithoutSenderEmailInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type DeliveryUncheckedUpdateManyWithoutReceiverAddressNestedInput = {
    create?: XOR<DeliveryCreateWithoutReceiverAddressInput, DeliveryUncheckedCreateWithoutReceiverAddressInput> | DeliveryCreateWithoutReceiverAddressInput[] | DeliveryUncheckedCreateWithoutReceiverAddressInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutReceiverAddressInput | DeliveryCreateOrConnectWithoutReceiverAddressInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutReceiverAddressInput | DeliveryUpsertWithWhereUniqueWithoutReceiverAddressInput[]
    createMany?: DeliveryCreateManyReceiverAddressInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutReceiverAddressInput | DeliveryUpdateWithWhereUniqueWithoutReceiverAddressInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutReceiverAddressInput | DeliveryUpdateManyWithWhereWithoutReceiverAddressInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type DeliveryUncheckedUpdateManyWithoutReceiverPhoneNestedInput = {
    create?: XOR<DeliveryCreateWithoutReceiverPhoneInput, DeliveryUncheckedCreateWithoutReceiverPhoneInput> | DeliveryCreateWithoutReceiverPhoneInput[] | DeliveryUncheckedCreateWithoutReceiverPhoneInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutReceiverPhoneInput | DeliveryCreateOrConnectWithoutReceiverPhoneInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutReceiverPhoneInput | DeliveryUpsertWithWhereUniqueWithoutReceiverPhoneInput[]
    createMany?: DeliveryCreateManyReceiverPhoneInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutReceiverPhoneInput | DeliveryUpdateWithWhereUniqueWithoutReceiverPhoneInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutReceiverPhoneInput | DeliveryUpdateManyWithWhereWithoutReceiverPhoneInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type DeliveryUncheckedUpdateManyWithoutReceiverEmailNestedInput = {
    create?: XOR<DeliveryCreateWithoutReceiverEmailInput, DeliveryUncheckedCreateWithoutReceiverEmailInput> | DeliveryCreateWithoutReceiverEmailInput[] | DeliveryUncheckedCreateWithoutReceiverEmailInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutReceiverEmailInput | DeliveryCreateOrConnectWithoutReceiverEmailInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutReceiverEmailInput | DeliveryUpsertWithWhereUniqueWithoutReceiverEmailInput[]
    createMany?: DeliveryCreateManyReceiverEmailInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutReceiverEmailInput | DeliveryUpdateWithWhereUniqueWithoutReceiverEmailInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutReceiverEmailInput | DeliveryUpdateManyWithWhereWithoutReceiverEmailInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type CustomerUncheckedUpdateManyWithoutAddressNestedInput = {
    create?: XOR<CustomerCreateWithoutAddressInput, CustomerUncheckedCreateWithoutAddressInput> | CustomerCreateWithoutAddressInput[] | CustomerUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutAddressInput | CustomerCreateOrConnectWithoutAddressInput[]
    upsert?: CustomerUpsertWithWhereUniqueWithoutAddressInput | CustomerUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: CustomerCreateManyAddressInputEnvelope
    set?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    disconnect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    delete?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    update?: CustomerUpdateWithWhereUniqueWithoutAddressInput | CustomerUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: CustomerUpdateManyWithWhereWithoutAddressInput | CustomerUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
  }

  export type CustomerUncheckedUpdateManyWithoutPhoneNestedInput = {
    create?: XOR<CustomerCreateWithoutPhoneInput, CustomerUncheckedCreateWithoutPhoneInput> | CustomerCreateWithoutPhoneInput[] | CustomerUncheckedCreateWithoutPhoneInput[]
    connectOrCreate?: CustomerCreateOrConnectWithoutPhoneInput | CustomerCreateOrConnectWithoutPhoneInput[]
    upsert?: CustomerUpsertWithWhereUniqueWithoutPhoneInput | CustomerUpsertWithWhereUniqueWithoutPhoneInput[]
    createMany?: CustomerCreateManyPhoneInputEnvelope
    set?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    disconnect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    delete?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    connect?: CustomerWhereUniqueInput | CustomerWhereUniqueInput[]
    update?: CustomerUpdateWithWhereUniqueWithoutPhoneInput | CustomerUpdateWithWhereUniqueWithoutPhoneInput[]
    updateMany?: CustomerUpdateManyWithWhereWithoutPhoneInput | CustomerUpdateManyWithWhereWithoutPhoneInput[]
    deleteMany?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
  }

  export type OrderLineCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderLineCreateWithoutOrderInput, OrderLineUncheckedCreateWithoutOrderInput> | OrderLineCreateWithoutOrderInput[] | OrderLineUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderLineCreateOrConnectWithoutOrderInput | OrderLineCreateOrConnectWithoutOrderInput[]
    createMany?: OrderLineCreateManyOrderInputEnvelope
    connect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
  }

  export type MediaCreateNestedOneWithoutDeliveryOrderInput = {
    create?: XOR<MediaCreateWithoutDeliveryOrderInput, MediaUncheckedCreateWithoutDeliveryOrderInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliveryOrderInput
    connect?: MediaWhereUniqueInput
  }

  export type MediaCreateNestedOneWithoutBillingOrderInput = {
    create?: XOR<MediaCreateWithoutBillingOrderInput, MediaUncheckedCreateWithoutBillingOrderInput>
    connectOrCreate?: MediaCreateOrConnectWithoutBillingOrderInput
    connect?: MediaWhereUniqueInput
  }

  export type MediaCreateNestedOneWithoutPhoneOrderInput = {
    create?: XOR<MediaCreateWithoutPhoneOrderInput, MediaUncheckedCreateWithoutPhoneOrderInput>
    connectOrCreate?: MediaCreateOrConnectWithoutPhoneOrderInput
    connect?: MediaWhereUniqueInput
  }

  export type MediaCreateNestedOneWithoutEmailOrderInput = {
    create?: XOR<MediaCreateWithoutEmailOrderInput, MediaUncheckedCreateWithoutEmailOrderInput>
    connectOrCreate?: MediaCreateOrConnectWithoutEmailOrderInput
    connect?: MediaWhereUniqueInput
  }

  export type PaymentCreateNestedOneWithoutOrderInput = {
    create?: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutOrderInput
    connect?: PaymentWhereUniqueInput
  }

  export type MessageCreateNestedManyWithoutOrderInput = {
    create?: XOR<MessageCreateWithoutOrderInput, MessageUncheckedCreateWithoutOrderInput> | MessageCreateWithoutOrderInput[] | MessageUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutOrderInput | MessageCreateOrConnectWithoutOrderInput[]
    createMany?: MessageCreateManyOrderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type DeliveryCreateNestedManyWithoutOrderInput = {
    create?: XOR<DeliveryCreateWithoutOrderInput, DeliveryUncheckedCreateWithoutOrderInput> | DeliveryCreateWithoutOrderInput[] | DeliveryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutOrderInput | DeliveryCreateOrConnectWithoutOrderInput[]
    createMany?: DeliveryCreateManyOrderInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type CustomerCreateNestedOneWithoutOrdersInput = {
    create?: XOR<CustomerCreateWithoutOrdersInput, CustomerUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutOrdersInput
    connect?: CustomerWhereUniqueInput
  }

  export type InvoiceCreateNestedOneWithoutOrderInput = {
    create?: XOR<InvoiceCreateWithoutOrderInput, InvoiceUncheckedCreateWithoutOrderInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutOrderInput
    connect?: InvoiceWhereUniqueInput
  }

  export type OrderLineUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderLineCreateWithoutOrderInput, OrderLineUncheckedCreateWithoutOrderInput> | OrderLineCreateWithoutOrderInput[] | OrderLineUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderLineCreateOrConnectWithoutOrderInput | OrderLineCreateOrConnectWithoutOrderInput[]
    createMany?: OrderLineCreateManyOrderInputEnvelope
    connect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedOneWithoutOrderInput = {
    create?: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutOrderInput
    connect?: PaymentWhereUniqueInput
  }

  export type MessageUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<MessageCreateWithoutOrderInput, MessageUncheckedCreateWithoutOrderInput> | MessageCreateWithoutOrderInput[] | MessageUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutOrderInput | MessageCreateOrConnectWithoutOrderInput[]
    createMany?: MessageCreateManyOrderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type DeliveryUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<DeliveryCreateWithoutOrderInput, DeliveryUncheckedCreateWithoutOrderInput> | DeliveryCreateWithoutOrderInput[] | DeliveryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutOrderInput | DeliveryCreateOrConnectWithoutOrderInput[]
    createMany?: DeliveryCreateManyOrderInputEnvelope
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedOneWithoutOrderInput = {
    create?: XOR<InvoiceCreateWithoutOrderInput, InvoiceUncheckedCreateWithoutOrderInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutOrderInput
    connect?: InvoiceWhereUniqueInput
  }

  export type OrderLineUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderLineCreateWithoutOrderInput, OrderLineUncheckedCreateWithoutOrderInput> | OrderLineCreateWithoutOrderInput[] | OrderLineUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderLineCreateOrConnectWithoutOrderInput | OrderLineCreateOrConnectWithoutOrderInput[]
    upsert?: OrderLineUpsertWithWhereUniqueWithoutOrderInput | OrderLineUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderLineCreateManyOrderInputEnvelope
    set?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    disconnect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    delete?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    connect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    update?: OrderLineUpdateWithWhereUniqueWithoutOrderInput | OrderLineUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderLineUpdateManyWithWhereWithoutOrderInput | OrderLineUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderLineScalarWhereInput | OrderLineScalarWhereInput[]
  }

  export type MediaUpdateOneRequiredWithoutDeliveryOrderNestedInput = {
    create?: XOR<MediaCreateWithoutDeliveryOrderInput, MediaUncheckedCreateWithoutDeliveryOrderInput>
    connectOrCreate?: MediaCreateOrConnectWithoutDeliveryOrderInput
    upsert?: MediaUpsertWithoutDeliveryOrderInput
    connect?: MediaWhereUniqueInput
    update?: XOR<XOR<MediaUpdateToOneWithWhereWithoutDeliveryOrderInput, MediaUpdateWithoutDeliveryOrderInput>, MediaUncheckedUpdateWithoutDeliveryOrderInput>
  }

  export type MediaUpdateOneRequiredWithoutBillingOrderNestedInput = {
    create?: XOR<MediaCreateWithoutBillingOrderInput, MediaUncheckedCreateWithoutBillingOrderInput>
    connectOrCreate?: MediaCreateOrConnectWithoutBillingOrderInput
    upsert?: MediaUpsertWithoutBillingOrderInput
    connect?: MediaWhereUniqueInput
    update?: XOR<XOR<MediaUpdateToOneWithWhereWithoutBillingOrderInput, MediaUpdateWithoutBillingOrderInput>, MediaUncheckedUpdateWithoutBillingOrderInput>
  }

  export type MediaUpdateOneRequiredWithoutPhoneOrderNestedInput = {
    create?: XOR<MediaCreateWithoutPhoneOrderInput, MediaUncheckedCreateWithoutPhoneOrderInput>
    connectOrCreate?: MediaCreateOrConnectWithoutPhoneOrderInput
    upsert?: MediaUpsertWithoutPhoneOrderInput
    connect?: MediaWhereUniqueInput
    update?: XOR<XOR<MediaUpdateToOneWithWhereWithoutPhoneOrderInput, MediaUpdateWithoutPhoneOrderInput>, MediaUncheckedUpdateWithoutPhoneOrderInput>
  }

  export type MediaUpdateOneRequiredWithoutEmailOrderNestedInput = {
    create?: XOR<MediaCreateWithoutEmailOrderInput, MediaUncheckedCreateWithoutEmailOrderInput>
    connectOrCreate?: MediaCreateOrConnectWithoutEmailOrderInput
    upsert?: MediaUpsertWithoutEmailOrderInput
    connect?: MediaWhereUniqueInput
    update?: XOR<XOR<MediaUpdateToOneWithWhereWithoutEmailOrderInput, MediaUpdateWithoutEmailOrderInput>, MediaUncheckedUpdateWithoutEmailOrderInput>
  }

  export type PaymentUpdateOneWithoutOrderNestedInput = {
    create?: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutOrderInput
    upsert?: PaymentUpsertWithoutOrderInput
    disconnect?: PaymentWhereInput | boolean
    delete?: PaymentWhereInput | boolean
    connect?: PaymentWhereUniqueInput
    update?: XOR<XOR<PaymentUpdateToOneWithWhereWithoutOrderInput, PaymentUpdateWithoutOrderInput>, PaymentUncheckedUpdateWithoutOrderInput>
  }

  export type MessageUpdateManyWithoutOrderNestedInput = {
    create?: XOR<MessageCreateWithoutOrderInput, MessageUncheckedCreateWithoutOrderInput> | MessageCreateWithoutOrderInput[] | MessageUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutOrderInput | MessageCreateOrConnectWithoutOrderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutOrderInput | MessageUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: MessageCreateManyOrderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutOrderInput | MessageUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutOrderInput | MessageUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type DeliveryUpdateManyWithoutOrderNestedInput = {
    create?: XOR<DeliveryCreateWithoutOrderInput, DeliveryUncheckedCreateWithoutOrderInput> | DeliveryCreateWithoutOrderInput[] | DeliveryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutOrderInput | DeliveryCreateOrConnectWithoutOrderInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutOrderInput | DeliveryUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: DeliveryCreateManyOrderInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutOrderInput | DeliveryUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutOrderInput | DeliveryUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type CustomerUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<CustomerCreateWithoutOrdersInput, CustomerUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutOrdersInput
    upsert?: CustomerUpsertWithoutOrdersInput
    disconnect?: CustomerWhereInput | boolean
    delete?: CustomerWhereInput | boolean
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutOrdersInput, CustomerUpdateWithoutOrdersInput>, CustomerUncheckedUpdateWithoutOrdersInput>
  }

  export type InvoiceUpdateOneWithoutOrderNestedInput = {
    create?: XOR<InvoiceCreateWithoutOrderInput, InvoiceUncheckedCreateWithoutOrderInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutOrderInput
    upsert?: InvoiceUpsertWithoutOrderInput
    disconnect?: InvoiceWhereInput | boolean
    delete?: InvoiceWhereInput | boolean
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutOrderInput, InvoiceUpdateWithoutOrderInput>, InvoiceUncheckedUpdateWithoutOrderInput>
  }

  export type OrderLineUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderLineCreateWithoutOrderInput, OrderLineUncheckedCreateWithoutOrderInput> | OrderLineCreateWithoutOrderInput[] | OrderLineUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderLineCreateOrConnectWithoutOrderInput | OrderLineCreateOrConnectWithoutOrderInput[]
    upsert?: OrderLineUpsertWithWhereUniqueWithoutOrderInput | OrderLineUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderLineCreateManyOrderInputEnvelope
    set?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    disconnect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    delete?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    connect?: OrderLineWhereUniqueInput | OrderLineWhereUniqueInput[]
    update?: OrderLineUpdateWithWhereUniqueWithoutOrderInput | OrderLineUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderLineUpdateManyWithWhereWithoutOrderInput | OrderLineUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderLineScalarWhereInput | OrderLineScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateOneWithoutOrderNestedInput = {
    create?: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutOrderInput
    upsert?: PaymentUpsertWithoutOrderInput
    disconnect?: PaymentWhereInput | boolean
    delete?: PaymentWhereInput | boolean
    connect?: PaymentWhereUniqueInput
    update?: XOR<XOR<PaymentUpdateToOneWithWhereWithoutOrderInput, PaymentUpdateWithoutOrderInput>, PaymentUncheckedUpdateWithoutOrderInput>
  }

  export type MessageUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<MessageCreateWithoutOrderInput, MessageUncheckedCreateWithoutOrderInput> | MessageCreateWithoutOrderInput[] | MessageUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutOrderInput | MessageCreateOrConnectWithoutOrderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutOrderInput | MessageUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: MessageCreateManyOrderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutOrderInput | MessageUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutOrderInput | MessageUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type DeliveryUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<DeliveryCreateWithoutOrderInput, DeliveryUncheckedCreateWithoutOrderInput> | DeliveryCreateWithoutOrderInput[] | DeliveryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: DeliveryCreateOrConnectWithoutOrderInput | DeliveryCreateOrConnectWithoutOrderInput[]
    upsert?: DeliveryUpsertWithWhereUniqueWithoutOrderInput | DeliveryUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: DeliveryCreateManyOrderInputEnvelope
    set?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    disconnect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    delete?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    connect?: DeliveryWhereUniqueInput | DeliveryWhereUniqueInput[]
    update?: DeliveryUpdateWithWhereUniqueWithoutOrderInput | DeliveryUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: DeliveryUpdateManyWithWhereWithoutOrderInput | DeliveryUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateOneWithoutOrderNestedInput = {
    create?: XOR<InvoiceCreateWithoutOrderInput, InvoiceUncheckedCreateWithoutOrderInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutOrderInput
    upsert?: InvoiceUpsertWithoutOrderInput
    disconnect?: InvoiceWhereInput | boolean
    delete?: InvoiceWhereInput | boolean
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutOrderInput, InvoiceUpdateWithoutOrderInput>, InvoiceUncheckedUpdateWithoutOrderInput>
  }

  export type ProductCreateNestedManyWithoutLaboratoryInput = {
    create?: XOR<ProductCreateWithoutLaboratoryInput, ProductUncheckedCreateWithoutLaboratoryInput> | ProductCreateWithoutLaboratoryInput[] | ProductUncheckedCreateWithoutLaboratoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutLaboratoryInput | ProductCreateOrConnectWithoutLaboratoryInput[]
    createMany?: ProductCreateManyLaboratoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ImageCreateNestedOneWithoutLaboratoryImageInput = {
    create?: XOR<ImageCreateWithoutLaboratoryImageInput, ImageUncheckedCreateWithoutLaboratoryImageInput>
    connectOrCreate?: ImageCreateOrConnectWithoutLaboratoryImageInput
    connect?: ImageWhereUniqueInput
  }

  export type ImageCreateNestedOneWithoutLaboratoryMiniatureInput = {
    create?: XOR<ImageCreateWithoutLaboratoryMiniatureInput, ImageUncheckedCreateWithoutLaboratoryMiniatureInput>
    connectOrCreate?: ImageCreateOrConnectWithoutLaboratoryMiniatureInput
    connect?: ImageWhereUniqueInput
  }

  export type ProductUncheckedCreateNestedManyWithoutLaboratoryInput = {
    create?: XOR<ProductCreateWithoutLaboratoryInput, ProductUncheckedCreateWithoutLaboratoryInput> | ProductCreateWithoutLaboratoryInput[] | ProductUncheckedCreateWithoutLaboratoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutLaboratoryInput | ProductCreateOrConnectWithoutLaboratoryInput[]
    createMany?: ProductCreateManyLaboratoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUpdateManyWithoutLaboratoryNestedInput = {
    create?: XOR<ProductCreateWithoutLaboratoryInput, ProductUncheckedCreateWithoutLaboratoryInput> | ProductCreateWithoutLaboratoryInput[] | ProductUncheckedCreateWithoutLaboratoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutLaboratoryInput | ProductCreateOrConnectWithoutLaboratoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutLaboratoryInput | ProductUpsertWithWhereUniqueWithoutLaboratoryInput[]
    createMany?: ProductCreateManyLaboratoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutLaboratoryInput | ProductUpdateWithWhereUniqueWithoutLaboratoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutLaboratoryInput | ProductUpdateManyWithWhereWithoutLaboratoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ImageUpdateOneWithoutLaboratoryImageNestedInput = {
    create?: XOR<ImageCreateWithoutLaboratoryImageInput, ImageUncheckedCreateWithoutLaboratoryImageInput>
    connectOrCreate?: ImageCreateOrConnectWithoutLaboratoryImageInput
    upsert?: ImageUpsertWithoutLaboratoryImageInput
    disconnect?: ImageWhereInput | boolean
    delete?: ImageWhereInput | boolean
    connect?: ImageWhereUniqueInput
    update?: XOR<XOR<ImageUpdateToOneWithWhereWithoutLaboratoryImageInput, ImageUpdateWithoutLaboratoryImageInput>, ImageUncheckedUpdateWithoutLaboratoryImageInput>
  }

  export type ImageUpdateOneWithoutLaboratoryMiniatureNestedInput = {
    create?: XOR<ImageCreateWithoutLaboratoryMiniatureInput, ImageUncheckedCreateWithoutLaboratoryMiniatureInput>
    connectOrCreate?: ImageCreateOrConnectWithoutLaboratoryMiniatureInput
    upsert?: ImageUpsertWithoutLaboratoryMiniatureInput
    disconnect?: ImageWhereInput | boolean
    delete?: ImageWhereInput | boolean
    connect?: ImageWhereUniqueInput
    update?: XOR<XOR<ImageUpdateToOneWithWhereWithoutLaboratoryMiniatureInput, ImageUpdateWithoutLaboratoryMiniatureInput>, ImageUncheckedUpdateWithoutLaboratoryMiniatureInput>
  }

  export type ProductUncheckedUpdateManyWithoutLaboratoryNestedInput = {
    create?: XOR<ProductCreateWithoutLaboratoryInput, ProductUncheckedCreateWithoutLaboratoryInput> | ProductCreateWithoutLaboratoryInput[] | ProductUncheckedCreateWithoutLaboratoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutLaboratoryInput | ProductCreateOrConnectWithoutLaboratoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutLaboratoryInput | ProductUpsertWithWhereUniqueWithoutLaboratoryInput[]
    createMany?: ProductCreateManyLaboratoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutLaboratoryInput | ProductUpdateWithWhereUniqueWithoutLaboratoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutLaboratoryInput | ProductUpdateManyWithWhereWithoutLaboratoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutMessagesInput = {
    create?: XOR<OrderCreateWithoutMessagesInput, OrderUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutMessagesInput
    connect?: OrderWhereUniqueInput
  }

  export type EnumMessageTypeFieldUpdateOperationsInput = {
    set?: $Enums.MessageType
  }

  export type EnumMessageStatusFieldUpdateOperationsInput = {
    set?: $Enums.MessageStatus
  }

  export type OrderUpdateOneWithoutMessagesNestedInput = {
    create?: XOR<OrderCreateWithoutMessagesInput, OrderUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutMessagesInput
    upsert?: OrderUpsertWithoutMessagesInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutMessagesInput, OrderUpdateWithoutMessagesInput>, OrderUncheckedUpdateWithoutMessagesInput>
  }

  export type MediaCreateNestedOneWithoutCustomerPhoneInput = {
    create?: XOR<MediaCreateWithoutCustomerPhoneInput, MediaUncheckedCreateWithoutCustomerPhoneInput>
    connectOrCreate?: MediaCreateOrConnectWithoutCustomerPhoneInput
    connect?: MediaWhereUniqueInput
  }

  export type MediaCreateNestedOneWithoutCustomerAddressInput = {
    create?: XOR<MediaCreateWithoutCustomerAddressInput, MediaUncheckedCreateWithoutCustomerAddressInput>
    connectOrCreate?: MediaCreateOrConnectWithoutCustomerAddressInput
    connect?: MediaWhereUniqueInput
  }

  export type OrderCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type MediaUpdateOneWithoutCustomerPhoneNestedInput = {
    create?: XOR<MediaCreateWithoutCustomerPhoneInput, MediaUncheckedCreateWithoutCustomerPhoneInput>
    connectOrCreate?: MediaCreateOrConnectWithoutCustomerPhoneInput
    upsert?: MediaUpsertWithoutCustomerPhoneInput
    disconnect?: MediaWhereInput | boolean
    delete?: MediaWhereInput | boolean
    connect?: MediaWhereUniqueInput
    update?: XOR<XOR<MediaUpdateToOneWithWhereWithoutCustomerPhoneInput, MediaUpdateWithoutCustomerPhoneInput>, MediaUncheckedUpdateWithoutCustomerPhoneInput>
  }

  export type MediaUpdateOneWithoutCustomerAddressNestedInput = {
    create?: XOR<MediaCreateWithoutCustomerAddressInput, MediaUncheckedCreateWithoutCustomerAddressInput>
    connectOrCreate?: MediaCreateOrConnectWithoutCustomerAddressInput
    upsert?: MediaUpsertWithoutCustomerAddressInput
    disconnect?: MediaWhereInput | boolean
    delete?: MediaWhereInput | boolean
    connect?: MediaWhereUniqueInput
    update?: XOR<XOR<MediaUpdateToOneWithWhereWithoutCustomerAddressInput, MediaUpdateWithoutCustomerAddressInput>, MediaUncheckedUpdateWithoutCustomerAddressInput>
  }

  export type OrderUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutInvoiceInput = {
    create?: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput>
    connectOrCreate?: OrderCreateOrConnectWithoutInvoiceInput
    connect?: OrderWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutInvoiceNestedInput = {
    create?: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput>
    connectOrCreate?: OrderCreateOrConnectWithoutInvoiceInput
    upsert?: OrderUpsertWithoutInvoiceInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutInvoiceInput, OrderUpdateWithoutInvoiceInput>, OrderUncheckedUpdateWithoutInvoiceInput>
  }

  export type ImageCreateNestedOneWithoutBannerImageInput = {
    create?: XOR<ImageCreateWithoutBannerImageInput, ImageUncheckedCreateWithoutBannerImageInput>
    connectOrCreate?: ImageCreateOrConnectWithoutBannerImageInput
    connect?: ImageWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type ImageUpdateOneRequiredWithoutBannerImageNestedInput = {
    create?: XOR<ImageCreateWithoutBannerImageInput, ImageUncheckedCreateWithoutBannerImageInput>
    connectOrCreate?: ImageCreateOrConnectWithoutBannerImageInput
    upsert?: ImageUpsertWithoutBannerImageInput
    connect?: ImageWhereUniqueInput
    update?: XOR<XOR<ImageUpdateToOneWithWhereWithoutBannerImageInput, ImageUpdateWithoutBannerImageInput>, ImageUncheckedUpdateWithoutBannerImageInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumProductStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusFilter<$PrismaModel> | $Enums.ProductStatus
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumProductStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusWithAggregatesFilter<$PrismaModel> | $Enums.ProductStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductStatusFilter<$PrismaModel>
    _max?: NestedEnumProductStatusFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumReductionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ReductionType | EnumReductionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReductionType[] | ListEnumReductionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReductionType[] | ListEnumReductionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReductionTypeFilter<$PrismaModel> | $Enums.ReductionType
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumReductionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReductionType | EnumReductionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReductionType[] | ListEnumReductionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReductionType[] | ListEnumReductionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReductionTypeWithAggregatesFilter<$PrismaModel> | $Enums.ReductionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReductionTypeFilter<$PrismaModel>
    _max?: NestedEnumReductionTypeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumDeliveryMethodTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryMethodType | EnumDeliveryMethodTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryMethodType[] | ListEnumDeliveryMethodTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryMethodType[] | ListEnumDeliveryMethodTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryMethodTypeFilter<$PrismaModel> | $Enums.DeliveryMethodType
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumDeliveryMethodTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryMethodType | EnumDeliveryMethodTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryMethodType[] | ListEnumDeliveryMethodTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryMethodType[] | ListEnumDeliveryMethodTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryMethodTypeWithAggregatesFilter<$PrismaModel> | $Enums.DeliveryMethodType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeliveryMethodTypeFilter<$PrismaModel>
    _max?: NestedEnumDeliveryMethodTypeFilter<$PrismaModel>
  }

  export type NestedEnumDeliveryDirectionFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryDirection | EnumDeliveryDirectionFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryDirection[] | ListEnumDeliveryDirectionFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryDirection[] | ListEnumDeliveryDirectionFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryDirectionFilter<$PrismaModel> | $Enums.DeliveryDirection
  }

  export type NestedEnumDeliveryStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryStatus | EnumDeliveryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryStatusFilter<$PrismaModel> | $Enums.DeliveryStatus
  }

  export type NestedBytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type NestedEnumDeliveryDirectionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryDirection | EnumDeliveryDirectionFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryDirection[] | ListEnumDeliveryDirectionFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryDirection[] | ListEnumDeliveryDirectionFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryDirectionWithAggregatesFilter<$PrismaModel> | $Enums.DeliveryDirection
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeliveryDirectionFilter<$PrismaModel>
    _max?: NestedEnumDeliveryDirectionFilter<$PrismaModel>
  }

  export type NestedEnumDeliveryStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryStatus | EnumDeliveryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryStatusWithAggregatesFilter<$PrismaModel> | $Enums.DeliveryStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeliveryStatusFilter<$PrismaModel>
    _max?: NestedEnumDeliveryStatusFilter<$PrismaModel>
  }

  export type NestedBytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Buffer[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type NestedEnumOrderLineStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderLineStatus | EnumOrderLineStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderLineStatus[] | ListEnumOrderLineStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderLineStatus[] | ListEnumOrderLineStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderLineStatusFilter<$PrismaModel> | $Enums.OrderLineStatus
  }

  export type NestedEnumOrderLineStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderLineStatus | EnumOrderLineStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderLineStatus[] | ListEnumOrderLineStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderLineStatus[] | ListEnumOrderLineStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderLineStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderLineStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderLineStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderLineStatusFilter<$PrismaModel>
  }

  export type NestedEnumMediaTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MediaType | EnumMediaTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMediaTypeFilter<$PrismaModel> | $Enums.MediaType
  }

  export type NestedEnumMediaTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MediaType | EnumMediaTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MediaType[] | ListEnumMediaTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMediaTypeWithAggregatesFilter<$PrismaModel> | $Enums.MediaType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMediaTypeFilter<$PrismaModel>
    _max?: NestedEnumMediaTypeFilter<$PrismaModel>
  }

  export type NestedEnumMessageTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageType | EnumMessageTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageTypeFilter<$PrismaModel> | $Enums.MessageType
  }

  export type NestedEnumMessageStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageStatus | EnumMessageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageStatusFilter<$PrismaModel> | $Enums.MessageStatus
  }

  export type NestedEnumMessageTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageType | EnumMessageTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageTypeWithAggregatesFilter<$PrismaModel> | $Enums.MessageType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMessageTypeFilter<$PrismaModel>
    _max?: NestedEnumMessageTypeFilter<$PrismaModel>
  }

  export type NestedEnumMessageStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageStatus | EnumMessageStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageStatus[] | ListEnumMessageStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageStatusWithAggregatesFilter<$PrismaModel> | $Enums.MessageStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMessageStatusFilter<$PrismaModel>
    _max?: NestedEnumMessageStatusFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type ProductCreateWithoutNoticeInput = {
    uuid: string
    availableStock: number
    name: string
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionCreateNestedManyWithoutProductInput
    orderLines?: OrderLineCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    miniature?: ImageCreateNestedOneWithoutProductMiniatureInput
    categories?: ProductCategoryCreateNestedManyWithoutProductInput
    laboratory?: LaboratoryCreateNestedOneWithoutProductInput
    locations?: ProductLocationCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutNoticeInput = {
    uuid: string
    availableStock: number
    name: string
    miniatureHash?: string | null
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    laboratoryUuid?: string | null
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionUncheckedCreateNestedManyWithoutProductInput
    orderLines?: OrderLineUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductInput
    locations?: ProductLocationUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutNoticeInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutNoticeInput, ProductUncheckedCreateWithoutNoticeInput>
  }

  export type ProductUpsertWithoutNoticeInput = {
    update: XOR<ProductUpdateWithoutNoticeInput, ProductUncheckedUpdateWithoutNoticeInput>
    create: XOR<ProductCreateWithoutNoticeInput, ProductUncheckedCreateWithoutNoticeInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutNoticeInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutNoticeInput, ProductUncheckedUpdateWithoutNoticeInput>
  }

  export type ProductUpdateWithoutNoticeInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    miniature?: ImageUpdateOneWithoutProductMiniatureNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductNestedInput
    laboratory?: LaboratoryUpdateOneWithoutProductNestedInput
    locations?: ProductLocationUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutNoticeInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUncheckedUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductNestedInput
    locations?: ProductLocationUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductPromotionCreateWithoutProductInput = {
    promotion: PromotionCreateNestedOneWithoutProductsInput
  }

  export type ProductPromotionUncheckedCreateWithoutProductInput = {
    promotionUuid: string
  }

  export type ProductPromotionCreateOrConnectWithoutProductInput = {
    where: ProductPromotionWhereUniqueInput
    create: XOR<ProductPromotionCreateWithoutProductInput, ProductPromotionUncheckedCreateWithoutProductInput>
  }

  export type ProductPromotionCreateManyProductInputEnvelope = {
    data: ProductPromotionCreateManyProductInput | ProductPromotionCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type OrderLineCreateWithoutProductInput = {
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    expectedQuantity: number
    preparedQuantity: number
    status: $Enums.OrderLineStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    order: OrderCreateNestedOneWithoutLinesInput
    promotion?: PromotionCreateNestedOneWithoutOrderLinesInput
  }

  export type OrderLineUncheckedCreateWithoutProductInput = {
    orderUuid: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    expectedQuantity: number
    preparedQuantity: number
    promotionUuid?: string | null
    status: $Enums.OrderLineStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type OrderLineCreateOrConnectWithoutProductInput = {
    where: OrderLineWhereUniqueInput
    create: XOR<OrderLineCreateWithoutProductInput, OrderLineUncheckedCreateWithoutProductInput>
  }

  export type OrderLineCreateManyProductInputEnvelope = {
    data: OrderLineCreateManyProductInput | OrderLineCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductImageCreateWithoutProductInput = {
    image: ImageCreateNestedOneWithoutProductImageInput
  }

  export type ProductImageUncheckedCreateWithoutProductInput = {
    imageHash: string
  }

  export type ProductImageCreateOrConnectWithoutProductInput = {
    where: ProductImageWhereUniqueInput
    create: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput>
  }

  export type ProductImageCreateManyProductInputEnvelope = {
    data: ProductImageCreateManyProductInput | ProductImageCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ImageCreateWithoutProductMiniatureInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryCreateNestedManyWithoutImageInput
    categoryMiniature?: CategoryCreateNestedManyWithoutMiniatureInput
    productImage?: ProductImageCreateNestedManyWithoutImageInput
    laboratoryImage?: LaboratoryCreateNestedManyWithoutImageInput
    laboratoryMiniature?: LaboratoryCreateNestedManyWithoutMiniatureInput
    bannerImage?: BannerCreateNestedManyWithoutImageInput
  }

  export type ImageUncheckedCreateWithoutProductMiniatureInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryUncheckedCreateNestedManyWithoutImageInput
    categoryMiniature?: CategoryUncheckedCreateNestedManyWithoutMiniatureInput
    productImage?: ProductImageUncheckedCreateNestedManyWithoutImageInput
    laboratoryImage?: LaboratoryUncheckedCreateNestedManyWithoutImageInput
    laboratoryMiniature?: LaboratoryUncheckedCreateNestedManyWithoutMiniatureInput
    bannerImage?: BannerUncheckedCreateNestedManyWithoutImageInput
  }

  export type ImageCreateOrConnectWithoutProductMiniatureInput = {
    where: ImageWhereUniqueInput
    create: XOR<ImageCreateWithoutProductMiniatureInput, ImageUncheckedCreateWithoutProductMiniatureInput>
  }

  export type ProductCategoryCreateWithoutProductInput = {
    category: CategoryCreateNestedOneWithoutProductCategoryInput
  }

  export type ProductCategoryUncheckedCreateWithoutProductInput = {
    categoryUuid: string
  }

  export type ProductCategoryCreateOrConnectWithoutProductInput = {
    where: ProductCategoryWhereUniqueInput
    create: XOR<ProductCategoryCreateWithoutProductInput, ProductCategoryUncheckedCreateWithoutProductInput>
  }

  export type ProductCategoryCreateManyProductInputEnvelope = {
    data: ProductCategoryCreateManyProductInput | ProductCategoryCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type LaboratoryCreateWithoutProductInput = {
    uuid: string
    name: string
    description?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    image?: ImageCreateNestedOneWithoutLaboratoryImageInput
    miniature?: ImageCreateNestedOneWithoutLaboratoryMiniatureInput
  }

  export type LaboratoryUncheckedCreateWithoutProductInput = {
    uuid: string
    name: string
    description?: string | null
    imageHash?: string | null
    miniatureHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type LaboratoryCreateOrConnectWithoutProductInput = {
    where: LaboratoryWhereUniqueInput
    create: XOR<LaboratoryCreateWithoutProductInput, LaboratoryUncheckedCreateWithoutProductInput>
  }

  export type ProductLocationCreateWithoutProductInput = {
    value: string
    location: LocationCreateNestedOneWithoutProductLocationInput
  }

  export type ProductLocationUncheckedCreateWithoutProductInput = {
    locationUuid: string
    value: string
  }

  export type ProductLocationCreateOrConnectWithoutProductInput = {
    where: ProductLocationWhereUniqueInput
    create: XOR<ProductLocationCreateWithoutProductInput, ProductLocationUncheckedCreateWithoutProductInput>
  }

  export type ProductLocationCreateManyProductInputEnvelope = {
    data: ProductLocationCreateManyProductInput | ProductLocationCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type NoticeCreateWithoutProductInput = {
    url: string
  }

  export type NoticeUncheckedCreateWithoutProductInput = {
    url: string
  }

  export type NoticeCreateOrConnectWithoutProductInput = {
    where: NoticeWhereUniqueInput
    create: XOR<NoticeCreateWithoutProductInput, NoticeUncheckedCreateWithoutProductInput>
  }

  export type ProductPromotionUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductPromotionWhereUniqueInput
    update: XOR<ProductPromotionUpdateWithoutProductInput, ProductPromotionUncheckedUpdateWithoutProductInput>
    create: XOR<ProductPromotionCreateWithoutProductInput, ProductPromotionUncheckedCreateWithoutProductInput>
  }

  export type ProductPromotionUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductPromotionWhereUniqueInput
    data: XOR<ProductPromotionUpdateWithoutProductInput, ProductPromotionUncheckedUpdateWithoutProductInput>
  }

  export type ProductPromotionUpdateManyWithWhereWithoutProductInput = {
    where: ProductPromotionScalarWhereInput
    data: XOR<ProductPromotionUpdateManyMutationInput, ProductPromotionUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductPromotionScalarWhereInput = {
    AND?: ProductPromotionScalarWhereInput | ProductPromotionScalarWhereInput[]
    OR?: ProductPromotionScalarWhereInput[]
    NOT?: ProductPromotionScalarWhereInput | ProductPromotionScalarWhereInput[]
    productUuid?: StringFilter<"ProductPromotion"> | string
    promotionUuid?: StringFilter<"ProductPromotion"> | string
  }

  export type OrderLineUpsertWithWhereUniqueWithoutProductInput = {
    where: OrderLineWhereUniqueInput
    update: XOR<OrderLineUpdateWithoutProductInput, OrderLineUncheckedUpdateWithoutProductInput>
    create: XOR<OrderLineCreateWithoutProductInput, OrderLineUncheckedCreateWithoutProductInput>
  }

  export type OrderLineUpdateWithWhereUniqueWithoutProductInput = {
    where: OrderLineWhereUniqueInput
    data: XOR<OrderLineUpdateWithoutProductInput, OrderLineUncheckedUpdateWithoutProductInput>
  }

  export type OrderLineUpdateManyWithWhereWithoutProductInput = {
    where: OrderLineScalarWhereInput
    data: XOR<OrderLineUpdateManyMutationInput, OrderLineUncheckedUpdateManyWithoutProductInput>
  }

  export type OrderLineScalarWhereInput = {
    AND?: OrderLineScalarWhereInput | OrderLineScalarWhereInput[]
    OR?: OrderLineScalarWhereInput[]
    NOT?: OrderLineScalarWhereInput | OrderLineScalarWhereInput[]
    productUuid?: StringFilter<"OrderLine"> | string
    orderUuid?: StringFilter<"OrderLine"> | string
    priceWithoutTax?: DecimalFilter<"OrderLine"> | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFilter<"OrderLine"> | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFilter<"OrderLine"> | number
    preparedQuantity?: IntFilter<"OrderLine"> | number
    promotionUuid?: StringNullableFilter<"OrderLine"> | string | null
    status?: EnumOrderLineStatusFilter<"OrderLine"> | $Enums.OrderLineStatus
    createdAt?: DateTimeFilter<"OrderLine"> | Date | string
    createdBy?: StringFilter<"OrderLine"> | string
    updatedAt?: DateTimeFilter<"OrderLine"> | Date | string
    updatedBy?: StringFilter<"OrderLine"> | string
  }

  export type ProductImageUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductImageWhereUniqueInput
    update: XOR<ProductImageUpdateWithoutProductInput, ProductImageUncheckedUpdateWithoutProductInput>
    create: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput>
  }

  export type ProductImageUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductImageWhereUniqueInput
    data: XOR<ProductImageUpdateWithoutProductInput, ProductImageUncheckedUpdateWithoutProductInput>
  }

  export type ProductImageUpdateManyWithWhereWithoutProductInput = {
    where: ProductImageScalarWhereInput
    data: XOR<ProductImageUpdateManyMutationInput, ProductImageUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductImageScalarWhereInput = {
    AND?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
    OR?: ProductImageScalarWhereInput[]
    NOT?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
    imageHash?: StringFilter<"ProductImage"> | string
    productUuid?: StringFilter<"ProductImage"> | string
  }

  export type ImageUpsertWithoutProductMiniatureInput = {
    update: XOR<ImageUpdateWithoutProductMiniatureInput, ImageUncheckedUpdateWithoutProductMiniatureInput>
    create: XOR<ImageCreateWithoutProductMiniatureInput, ImageUncheckedCreateWithoutProductMiniatureInput>
    where?: ImageWhereInput
  }

  export type ImageUpdateToOneWithWhereWithoutProductMiniatureInput = {
    where?: ImageWhereInput
    data: XOR<ImageUpdateWithoutProductMiniatureInput, ImageUncheckedUpdateWithoutProductMiniatureInput>
  }

  export type ImageUpdateWithoutProductMiniatureInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUpdateManyWithoutImageNestedInput
    categoryMiniature?: CategoryUpdateManyWithoutMiniatureNestedInput
    productImage?: ProductImageUpdateManyWithoutImageNestedInput
    laboratoryImage?: LaboratoryUpdateManyWithoutImageNestedInput
    laboratoryMiniature?: LaboratoryUpdateManyWithoutMiniatureNestedInput
    bannerImage?: BannerUpdateManyWithoutImageNestedInput
  }

  export type ImageUncheckedUpdateWithoutProductMiniatureInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUncheckedUpdateManyWithoutImageNestedInput
    categoryMiniature?: CategoryUncheckedUpdateManyWithoutMiniatureNestedInput
    productImage?: ProductImageUncheckedUpdateManyWithoutImageNestedInput
    laboratoryImage?: LaboratoryUncheckedUpdateManyWithoutImageNestedInput
    laboratoryMiniature?: LaboratoryUncheckedUpdateManyWithoutMiniatureNestedInput
    bannerImage?: BannerUncheckedUpdateManyWithoutImageNestedInput
  }

  export type ProductCategoryUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductCategoryWhereUniqueInput
    update: XOR<ProductCategoryUpdateWithoutProductInput, ProductCategoryUncheckedUpdateWithoutProductInput>
    create: XOR<ProductCategoryCreateWithoutProductInput, ProductCategoryUncheckedCreateWithoutProductInput>
  }

  export type ProductCategoryUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductCategoryWhereUniqueInput
    data: XOR<ProductCategoryUpdateWithoutProductInput, ProductCategoryUncheckedUpdateWithoutProductInput>
  }

  export type ProductCategoryUpdateManyWithWhereWithoutProductInput = {
    where: ProductCategoryScalarWhereInput
    data: XOR<ProductCategoryUpdateManyMutationInput, ProductCategoryUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductCategoryScalarWhereInput = {
    AND?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
    OR?: ProductCategoryScalarWhereInput[]
    NOT?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
    categoryUuid?: StringFilter<"ProductCategory"> | string
    productUuid?: StringFilter<"ProductCategory"> | string
  }

  export type LaboratoryUpsertWithoutProductInput = {
    update: XOR<LaboratoryUpdateWithoutProductInput, LaboratoryUncheckedUpdateWithoutProductInput>
    create: XOR<LaboratoryCreateWithoutProductInput, LaboratoryUncheckedCreateWithoutProductInput>
    where?: LaboratoryWhereInput
  }

  export type LaboratoryUpdateToOneWithWhereWithoutProductInput = {
    where?: LaboratoryWhereInput
    data: XOR<LaboratoryUpdateWithoutProductInput, LaboratoryUncheckedUpdateWithoutProductInput>
  }

  export type LaboratoryUpdateWithoutProductInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    image?: ImageUpdateOneWithoutLaboratoryImageNestedInput
    miniature?: ImageUpdateOneWithoutLaboratoryMiniatureNestedInput
  }

  export type LaboratoryUncheckedUpdateWithoutProductInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageHash?: NullableStringFieldUpdateOperationsInput | string | null
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductLocationUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductLocationWhereUniqueInput
    update: XOR<ProductLocationUpdateWithoutProductInput, ProductLocationUncheckedUpdateWithoutProductInput>
    create: XOR<ProductLocationCreateWithoutProductInput, ProductLocationUncheckedCreateWithoutProductInput>
  }

  export type ProductLocationUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductLocationWhereUniqueInput
    data: XOR<ProductLocationUpdateWithoutProductInput, ProductLocationUncheckedUpdateWithoutProductInput>
  }

  export type ProductLocationUpdateManyWithWhereWithoutProductInput = {
    where: ProductLocationScalarWhereInput
    data: XOR<ProductLocationUpdateManyMutationInput, ProductLocationUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductLocationScalarWhereInput = {
    AND?: ProductLocationScalarWhereInput | ProductLocationScalarWhereInput[]
    OR?: ProductLocationScalarWhereInput[]
    NOT?: ProductLocationScalarWhereInput | ProductLocationScalarWhereInput[]
    locationUuid?: StringFilter<"ProductLocation"> | string
    productUuid?: StringFilter<"ProductLocation"> | string
    value?: StringFilter<"ProductLocation"> | string
  }

  export type NoticeUpsertWithoutProductInput = {
    update: XOR<NoticeUpdateWithoutProductInput, NoticeUncheckedUpdateWithoutProductInput>
    create: XOR<NoticeCreateWithoutProductInput, NoticeUncheckedCreateWithoutProductInput>
    where?: NoticeWhereInput
  }

  export type NoticeUpdateToOneWithWhereWithoutProductInput = {
    where?: NoticeWhereInput
    data: XOR<NoticeUpdateWithoutProductInput, NoticeUncheckedUpdateWithoutProductInput>
  }

  export type NoticeUpdateWithoutProductInput = {
    url?: StringFieldUpdateOperationsInput | string
  }

  export type NoticeUncheckedUpdateWithoutProductInput = {
    url?: StringFieldUpdateOperationsInput | string
  }

  export type ProductLocationCreateWithoutLocationInput = {
    value: string
    product: ProductCreateNestedOneWithoutLocationsInput
  }

  export type ProductLocationUncheckedCreateWithoutLocationInput = {
    productUuid: string
    value: string
  }

  export type ProductLocationCreateOrConnectWithoutLocationInput = {
    where: ProductLocationWhereUniqueInput
    create: XOR<ProductLocationCreateWithoutLocationInput, ProductLocationUncheckedCreateWithoutLocationInput>
  }

  export type ProductLocationCreateManyLocationInputEnvelope = {
    data: ProductLocationCreateManyLocationInput | ProductLocationCreateManyLocationInput[]
    skipDuplicates?: boolean
  }

  export type ProductLocationUpsertWithWhereUniqueWithoutLocationInput = {
    where: ProductLocationWhereUniqueInput
    update: XOR<ProductLocationUpdateWithoutLocationInput, ProductLocationUncheckedUpdateWithoutLocationInput>
    create: XOR<ProductLocationCreateWithoutLocationInput, ProductLocationUncheckedCreateWithoutLocationInput>
  }

  export type ProductLocationUpdateWithWhereUniqueWithoutLocationInput = {
    where: ProductLocationWhereUniqueInput
    data: XOR<ProductLocationUpdateWithoutLocationInput, ProductLocationUncheckedUpdateWithoutLocationInput>
  }

  export type ProductLocationUpdateManyWithWhereWithoutLocationInput = {
    where: ProductLocationScalarWhereInput
    data: XOR<ProductLocationUpdateManyMutationInput, ProductLocationUncheckedUpdateManyWithoutLocationInput>
  }

  export type LocationCreateWithoutProductLocationInput = {
    uuid: string
    name: string
    order: number
  }

  export type LocationUncheckedCreateWithoutProductLocationInput = {
    uuid: string
    name: string
    order: number
  }

  export type LocationCreateOrConnectWithoutProductLocationInput = {
    where: LocationWhereUniqueInput
    create: XOR<LocationCreateWithoutProductLocationInput, LocationUncheckedCreateWithoutProductLocationInput>
  }

  export type ProductCreateWithoutLocationsInput = {
    uuid: string
    availableStock: number
    name: string
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionCreateNestedManyWithoutProductInput
    orderLines?: OrderLineCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    miniature?: ImageCreateNestedOneWithoutProductMiniatureInput
    categories?: ProductCategoryCreateNestedManyWithoutProductInput
    laboratory?: LaboratoryCreateNestedOneWithoutProductInput
    notice?: NoticeCreateNestedOneWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutLocationsInput = {
    uuid: string
    availableStock: number
    name: string
    miniatureHash?: string | null
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    laboratoryUuid?: string | null
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionUncheckedCreateNestedManyWithoutProductInput
    orderLines?: OrderLineUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductInput
    notice?: NoticeUncheckedCreateNestedOneWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutLocationsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutLocationsInput, ProductUncheckedCreateWithoutLocationsInput>
  }

  export type LocationUpsertWithoutProductLocationInput = {
    update: XOR<LocationUpdateWithoutProductLocationInput, LocationUncheckedUpdateWithoutProductLocationInput>
    create: XOR<LocationCreateWithoutProductLocationInput, LocationUncheckedCreateWithoutProductLocationInput>
    where?: LocationWhereInput
  }

  export type LocationUpdateToOneWithWhereWithoutProductLocationInput = {
    where?: LocationWhereInput
    data: XOR<LocationUpdateWithoutProductLocationInput, LocationUncheckedUpdateWithoutProductLocationInput>
  }

  export type LocationUpdateWithoutProductLocationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
  }

  export type LocationUncheckedUpdateWithoutProductLocationInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
  }

  export type ProductUpsertWithoutLocationsInput = {
    update: XOR<ProductUpdateWithoutLocationsInput, ProductUncheckedUpdateWithoutLocationsInput>
    create: XOR<ProductCreateWithoutLocationsInput, ProductUncheckedCreateWithoutLocationsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutLocationsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutLocationsInput, ProductUncheckedUpdateWithoutLocationsInput>
  }

  export type ProductUpdateWithoutLocationsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    miniature?: ImageUpdateOneWithoutProductMiniatureNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductNestedInput
    laboratory?: LaboratoryUpdateOneWithoutProductNestedInput
    notice?: NoticeUpdateOneWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutLocationsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUncheckedUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductNestedInput
    notice?: NoticeUncheckedUpdateOneWithoutProductNestedInput
  }

  export type CategoryCreateWithoutImageInput = {
    uuid: string
    name: string
    description?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    productCategory?: ProductCategoryCreateNestedManyWithoutCategoryInput
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    miniature?: ImageCreateNestedOneWithoutCategoryMiniatureInput
  }

  export type CategoryUncheckedCreateWithoutImageInput = {
    uuid: string
    name: string
    description?: string | null
    parentUuid?: string | null
    miniatureHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    productCategory?: ProductCategoryUncheckedCreateNestedManyWithoutCategoryInput
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
  }

  export type CategoryCreateOrConnectWithoutImageInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutImageInput, CategoryUncheckedCreateWithoutImageInput>
  }

  export type CategoryCreateManyImageInputEnvelope = {
    data: CategoryCreateManyImageInput | CategoryCreateManyImageInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutMiniatureInput = {
    uuid: string
    name: string
    description?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    productCategory?: ProductCategoryCreateNestedManyWithoutCategoryInput
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    image?: ImageCreateNestedOneWithoutCategoryImageInput
  }

  export type CategoryUncheckedCreateWithoutMiniatureInput = {
    uuid: string
    name: string
    description?: string | null
    parentUuid?: string | null
    imageHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    productCategory?: ProductCategoryUncheckedCreateNestedManyWithoutCategoryInput
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
  }

  export type CategoryCreateOrConnectWithoutMiniatureInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutMiniatureInput, CategoryUncheckedCreateWithoutMiniatureInput>
  }

  export type CategoryCreateManyMiniatureInputEnvelope = {
    data: CategoryCreateManyMiniatureInput | CategoryCreateManyMiniatureInput[]
    skipDuplicates?: boolean
  }

  export type ProductImageCreateWithoutImageInput = {
    product?: ProductCreateNestedOneWithoutImagesInput
  }

  export type ProductImageUncheckedCreateWithoutImageInput = {
    productUuid: string
  }

  export type ProductImageCreateOrConnectWithoutImageInput = {
    where: ProductImageWhereUniqueInput
    create: XOR<ProductImageCreateWithoutImageInput, ProductImageUncheckedCreateWithoutImageInput>
  }

  export type ProductImageCreateManyImageInputEnvelope = {
    data: ProductImageCreateManyImageInput | ProductImageCreateManyImageInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutMiniatureInput = {
    uuid: string
    availableStock: number
    name: string
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionCreateNestedManyWithoutProductInput
    orderLines?: OrderLineCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    categories?: ProductCategoryCreateNestedManyWithoutProductInput
    laboratory?: LaboratoryCreateNestedOneWithoutProductInput
    locations?: ProductLocationCreateNestedManyWithoutProductInput
    notice?: NoticeCreateNestedOneWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutMiniatureInput = {
    uuid: string
    availableStock: number
    name: string
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    laboratoryUuid?: string | null
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionUncheckedCreateNestedManyWithoutProductInput
    orderLines?: OrderLineUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductInput
    locations?: ProductLocationUncheckedCreateNestedManyWithoutProductInput
    notice?: NoticeUncheckedCreateNestedOneWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutMiniatureInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutMiniatureInput, ProductUncheckedCreateWithoutMiniatureInput>
  }

  export type ProductCreateManyMiniatureInputEnvelope = {
    data: ProductCreateManyMiniatureInput | ProductCreateManyMiniatureInput[]
    skipDuplicates?: boolean
  }

  export type LaboratoryCreateWithoutImageInput = {
    uuid: string
    name: string
    description?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    product?: ProductCreateNestedManyWithoutLaboratoryInput
    miniature?: ImageCreateNestedOneWithoutLaboratoryMiniatureInput
  }

  export type LaboratoryUncheckedCreateWithoutImageInput = {
    uuid: string
    name: string
    description?: string | null
    miniatureHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    product?: ProductUncheckedCreateNestedManyWithoutLaboratoryInput
  }

  export type LaboratoryCreateOrConnectWithoutImageInput = {
    where: LaboratoryWhereUniqueInput
    create: XOR<LaboratoryCreateWithoutImageInput, LaboratoryUncheckedCreateWithoutImageInput>
  }

  export type LaboratoryCreateManyImageInputEnvelope = {
    data: LaboratoryCreateManyImageInput | LaboratoryCreateManyImageInput[]
    skipDuplicates?: boolean
  }

  export type LaboratoryCreateWithoutMiniatureInput = {
    uuid: string
    name: string
    description?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    product?: ProductCreateNestedManyWithoutLaboratoryInput
    image?: ImageCreateNestedOneWithoutLaboratoryImageInput
  }

  export type LaboratoryUncheckedCreateWithoutMiniatureInput = {
    uuid: string
    name: string
    description?: string | null
    imageHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    product?: ProductUncheckedCreateNestedManyWithoutLaboratoryInput
  }

  export type LaboratoryCreateOrConnectWithoutMiniatureInput = {
    where: LaboratoryWhereUniqueInput
    create: XOR<LaboratoryCreateWithoutMiniatureInput, LaboratoryUncheckedCreateWithoutMiniatureInput>
  }

  export type LaboratoryCreateManyMiniatureInputEnvelope = {
    data: LaboratoryCreateManyMiniatureInput | LaboratoryCreateManyMiniatureInput[]
    skipDuplicates?: boolean
  }

  export type BannerCreateWithoutImageInput = {
    uuid: string
    order: number
    isActive?: boolean
    href?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type BannerUncheckedCreateWithoutImageInput = {
    uuid: string
    order: number
    isActive?: boolean
    href?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type BannerCreateOrConnectWithoutImageInput = {
    where: BannerWhereUniqueInput
    create: XOR<BannerCreateWithoutImageInput, BannerUncheckedCreateWithoutImageInput>
  }

  export type BannerCreateManyImageInputEnvelope = {
    data: BannerCreateManyImageInput | BannerCreateManyImageInput[]
    skipDuplicates?: boolean
  }

  export type CategoryUpsertWithWhereUniqueWithoutImageInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutImageInput, CategoryUncheckedUpdateWithoutImageInput>
    create: XOR<CategoryCreateWithoutImageInput, CategoryUncheckedCreateWithoutImageInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutImageInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutImageInput, CategoryUncheckedUpdateWithoutImageInput>
  }

  export type CategoryUpdateManyWithWhereWithoutImageInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutImageInput>
  }

  export type CategoryScalarWhereInput = {
    AND?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    OR?: CategoryScalarWhereInput[]
    NOT?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    uuid?: StringFilter<"Category"> | string
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    parentUuid?: StringNullableFilter<"Category"> | string | null
    miniatureHash?: StringNullableFilter<"Category"> | string | null
    imageHash?: StringNullableFilter<"Category"> | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    createdBy?: StringFilter<"Category"> | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    updatedBy?: StringFilter<"Category"> | string
  }

  export type CategoryUpsertWithWhereUniqueWithoutMiniatureInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutMiniatureInput, CategoryUncheckedUpdateWithoutMiniatureInput>
    create: XOR<CategoryCreateWithoutMiniatureInput, CategoryUncheckedCreateWithoutMiniatureInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutMiniatureInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutMiniatureInput, CategoryUncheckedUpdateWithoutMiniatureInput>
  }

  export type CategoryUpdateManyWithWhereWithoutMiniatureInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutMiniatureInput>
  }

  export type ProductImageUpsertWithWhereUniqueWithoutImageInput = {
    where: ProductImageWhereUniqueInput
    update: XOR<ProductImageUpdateWithoutImageInput, ProductImageUncheckedUpdateWithoutImageInput>
    create: XOR<ProductImageCreateWithoutImageInput, ProductImageUncheckedCreateWithoutImageInput>
  }

  export type ProductImageUpdateWithWhereUniqueWithoutImageInput = {
    where: ProductImageWhereUniqueInput
    data: XOR<ProductImageUpdateWithoutImageInput, ProductImageUncheckedUpdateWithoutImageInput>
  }

  export type ProductImageUpdateManyWithWhereWithoutImageInput = {
    where: ProductImageScalarWhereInput
    data: XOR<ProductImageUpdateManyMutationInput, ProductImageUncheckedUpdateManyWithoutImageInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutMiniatureInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutMiniatureInput, ProductUncheckedUpdateWithoutMiniatureInput>
    create: XOR<ProductCreateWithoutMiniatureInput, ProductUncheckedCreateWithoutMiniatureInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutMiniatureInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutMiniatureInput, ProductUncheckedUpdateWithoutMiniatureInput>
  }

  export type ProductUpdateManyWithWhereWithoutMiniatureInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutMiniatureInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    uuid?: StringFilter<"Product"> | string
    availableStock?: IntFilter<"Product"> | number
    name?: StringFilter<"Product"> | string
    miniatureHash?: StringNullableFilter<"Product"> | string | null
    cip7?: StringNullableFilter<"Product"> | string | null
    cip13?: StringNullableFilter<"Product"> | string | null
    ean13?: StringFilter<"Product"> | string
    priceWithoutTax?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: StringNullableFilter<"Product"> | string | null
    description?: StringNullableFilter<"Product"> | string | null
    instructionsForUse?: StringNullableFilter<"Product"> | string | null
    composition?: StringNullableFilter<"Product"> | string | null
    weight?: IntFilter<"Product"> | number
    maxQuantityForOrder?: IntNullableFilter<"Product"> | number | null
    status?: EnumProductStatusFilter<"Product"> | $Enums.ProductStatus
    createdAt?: DateTimeFilter<"Product"> | Date | string
    createdBy?: StringFilter<"Product"> | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    updatedBy?: StringFilter<"Product"> | string
  }

  export type LaboratoryUpsertWithWhereUniqueWithoutImageInput = {
    where: LaboratoryWhereUniqueInput
    update: XOR<LaboratoryUpdateWithoutImageInput, LaboratoryUncheckedUpdateWithoutImageInput>
    create: XOR<LaboratoryCreateWithoutImageInput, LaboratoryUncheckedCreateWithoutImageInput>
  }

  export type LaboratoryUpdateWithWhereUniqueWithoutImageInput = {
    where: LaboratoryWhereUniqueInput
    data: XOR<LaboratoryUpdateWithoutImageInput, LaboratoryUncheckedUpdateWithoutImageInput>
  }

  export type LaboratoryUpdateManyWithWhereWithoutImageInput = {
    where: LaboratoryScalarWhereInput
    data: XOR<LaboratoryUpdateManyMutationInput, LaboratoryUncheckedUpdateManyWithoutImageInput>
  }

  export type LaboratoryScalarWhereInput = {
    AND?: LaboratoryScalarWhereInput | LaboratoryScalarWhereInput[]
    OR?: LaboratoryScalarWhereInput[]
    NOT?: LaboratoryScalarWhereInput | LaboratoryScalarWhereInput[]
    uuid?: StringFilter<"Laboratory"> | string
    name?: StringFilter<"Laboratory"> | string
    description?: StringNullableFilter<"Laboratory"> | string | null
    imageHash?: StringNullableFilter<"Laboratory"> | string | null
    miniatureHash?: StringNullableFilter<"Laboratory"> | string | null
    createdAt?: DateTimeFilter<"Laboratory"> | Date | string
    createdBy?: StringFilter<"Laboratory"> | string
    updatedAt?: DateTimeFilter<"Laboratory"> | Date | string
    updatedBy?: StringFilter<"Laboratory"> | string
  }

  export type LaboratoryUpsertWithWhereUniqueWithoutMiniatureInput = {
    where: LaboratoryWhereUniqueInput
    update: XOR<LaboratoryUpdateWithoutMiniatureInput, LaboratoryUncheckedUpdateWithoutMiniatureInput>
    create: XOR<LaboratoryCreateWithoutMiniatureInput, LaboratoryUncheckedCreateWithoutMiniatureInput>
  }

  export type LaboratoryUpdateWithWhereUniqueWithoutMiniatureInput = {
    where: LaboratoryWhereUniqueInput
    data: XOR<LaboratoryUpdateWithoutMiniatureInput, LaboratoryUncheckedUpdateWithoutMiniatureInput>
  }

  export type LaboratoryUpdateManyWithWhereWithoutMiniatureInput = {
    where: LaboratoryScalarWhereInput
    data: XOR<LaboratoryUpdateManyMutationInput, LaboratoryUncheckedUpdateManyWithoutMiniatureInput>
  }

  export type BannerUpsertWithWhereUniqueWithoutImageInput = {
    where: BannerWhereUniqueInput
    update: XOR<BannerUpdateWithoutImageInput, BannerUncheckedUpdateWithoutImageInput>
    create: XOR<BannerCreateWithoutImageInput, BannerUncheckedCreateWithoutImageInput>
  }

  export type BannerUpdateWithWhereUniqueWithoutImageInput = {
    where: BannerWhereUniqueInput
    data: XOR<BannerUpdateWithoutImageInput, BannerUncheckedUpdateWithoutImageInput>
  }

  export type BannerUpdateManyWithWhereWithoutImageInput = {
    where: BannerScalarWhereInput
    data: XOR<BannerUpdateManyMutationInput, BannerUncheckedUpdateManyWithoutImageInput>
  }

  export type BannerScalarWhereInput = {
    AND?: BannerScalarWhereInput | BannerScalarWhereInput[]
    OR?: BannerScalarWhereInput[]
    NOT?: BannerScalarWhereInput | BannerScalarWhereInput[]
    uuid?: StringFilter<"Banner"> | string
    imageHash?: StringFilter<"Banner"> | string
    order?: IntFilter<"Banner"> | number
    isActive?: BoolFilter<"Banner"> | boolean
    href?: StringNullableFilter<"Banner"> | string | null
    startDate?: DateTimeNullableFilter<"Banner"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Banner"> | Date | string | null
    createdAt?: DateTimeFilter<"Banner"> | Date | string
    createdBy?: StringFilter<"Banner"> | string
    updatedAt?: DateTimeFilter<"Banner"> | Date | string
    updatedBy?: StringFilter<"Banner"> | string
  }

  export type ProductCreateWithoutImagesInput = {
    uuid: string
    availableStock: number
    name: string
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionCreateNestedManyWithoutProductInput
    orderLines?: OrderLineCreateNestedManyWithoutProductInput
    miniature?: ImageCreateNestedOneWithoutProductMiniatureInput
    categories?: ProductCategoryCreateNestedManyWithoutProductInput
    laboratory?: LaboratoryCreateNestedOneWithoutProductInput
    locations?: ProductLocationCreateNestedManyWithoutProductInput
    notice?: NoticeCreateNestedOneWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutImagesInput = {
    uuid: string
    availableStock: number
    name: string
    miniatureHash?: string | null
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    laboratoryUuid?: string | null
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionUncheckedCreateNestedManyWithoutProductInput
    orderLines?: OrderLineUncheckedCreateNestedManyWithoutProductInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductInput
    locations?: ProductLocationUncheckedCreateNestedManyWithoutProductInput
    notice?: NoticeUncheckedCreateNestedOneWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutImagesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
  }

  export type ImageCreateWithoutProductImageInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryCreateNestedManyWithoutImageInput
    categoryMiniature?: CategoryCreateNestedManyWithoutMiniatureInput
    productMiniature?: ProductCreateNestedManyWithoutMiniatureInput
    laboratoryImage?: LaboratoryCreateNestedManyWithoutImageInput
    laboratoryMiniature?: LaboratoryCreateNestedManyWithoutMiniatureInput
    bannerImage?: BannerCreateNestedManyWithoutImageInput
  }

  export type ImageUncheckedCreateWithoutProductImageInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryUncheckedCreateNestedManyWithoutImageInput
    categoryMiniature?: CategoryUncheckedCreateNestedManyWithoutMiniatureInput
    productMiniature?: ProductUncheckedCreateNestedManyWithoutMiniatureInput
    laboratoryImage?: LaboratoryUncheckedCreateNestedManyWithoutImageInput
    laboratoryMiniature?: LaboratoryUncheckedCreateNestedManyWithoutMiniatureInput
    bannerImage?: BannerUncheckedCreateNestedManyWithoutImageInput
  }

  export type ImageCreateOrConnectWithoutProductImageInput = {
    where: ImageWhereUniqueInput
    create: XOR<ImageCreateWithoutProductImageInput, ImageUncheckedCreateWithoutProductImageInput>
  }

  export type ProductUpsertWithoutImagesInput = {
    update: XOR<ProductUpdateWithoutImagesInput, ProductUncheckedUpdateWithoutImagesInput>
    create: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutImagesInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutImagesInput, ProductUncheckedUpdateWithoutImagesInput>
  }

  export type ProductUpdateWithoutImagesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUpdateManyWithoutProductNestedInput
    miniature?: ImageUpdateOneWithoutProductMiniatureNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductNestedInput
    laboratory?: LaboratoryUpdateOneWithoutProductNestedInput
    locations?: ProductLocationUpdateManyWithoutProductNestedInput
    notice?: NoticeUpdateOneWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutImagesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUncheckedUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUncheckedUpdateManyWithoutProductNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductNestedInput
    locations?: ProductLocationUncheckedUpdateManyWithoutProductNestedInput
    notice?: NoticeUncheckedUpdateOneWithoutProductNestedInput
  }

  export type ImageUpsertWithoutProductImageInput = {
    update: XOR<ImageUpdateWithoutProductImageInput, ImageUncheckedUpdateWithoutProductImageInput>
    create: XOR<ImageCreateWithoutProductImageInput, ImageUncheckedCreateWithoutProductImageInput>
    where?: ImageWhereInput
  }

  export type ImageUpdateToOneWithWhereWithoutProductImageInput = {
    where?: ImageWhereInput
    data: XOR<ImageUpdateWithoutProductImageInput, ImageUncheckedUpdateWithoutProductImageInput>
  }

  export type ImageUpdateWithoutProductImageInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUpdateManyWithoutImageNestedInput
    categoryMiniature?: CategoryUpdateManyWithoutMiniatureNestedInput
    productMiniature?: ProductUpdateManyWithoutMiniatureNestedInput
    laboratoryImage?: LaboratoryUpdateManyWithoutImageNestedInput
    laboratoryMiniature?: LaboratoryUpdateManyWithoutMiniatureNestedInput
    bannerImage?: BannerUpdateManyWithoutImageNestedInput
  }

  export type ImageUncheckedUpdateWithoutProductImageInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUncheckedUpdateManyWithoutImageNestedInput
    categoryMiniature?: CategoryUncheckedUpdateManyWithoutMiniatureNestedInput
    productMiniature?: ProductUncheckedUpdateManyWithoutMiniatureNestedInput
    laboratoryImage?: LaboratoryUncheckedUpdateManyWithoutImageNestedInput
    laboratoryMiniature?: LaboratoryUncheckedUpdateManyWithoutMiniatureNestedInput
    bannerImage?: BannerUncheckedUpdateManyWithoutImageNestedInput
  }

  export type ProductCategoryCreateWithoutCategoryInput = {
    product: ProductCreateNestedOneWithoutCategoriesInput
  }

  export type ProductCategoryUncheckedCreateWithoutCategoryInput = {
    productUuid: string
  }

  export type ProductCategoryCreateOrConnectWithoutCategoryInput = {
    where: ProductCategoryWhereUniqueInput
    create: XOR<ProductCategoryCreateWithoutCategoryInput, ProductCategoryUncheckedCreateWithoutCategoryInput>
  }

  export type ProductCategoryCreateManyCategoryInputEnvelope = {
    data: ProductCategoryCreateManyCategoryInput | ProductCategoryCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutChildrenInput = {
    uuid: string
    name: string
    description?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    productCategory?: ProductCategoryCreateNestedManyWithoutCategoryInput
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    image?: ImageCreateNestedOneWithoutCategoryImageInput
    miniature?: ImageCreateNestedOneWithoutCategoryMiniatureInput
  }

  export type CategoryUncheckedCreateWithoutChildrenInput = {
    uuid: string
    name: string
    description?: string | null
    parentUuid?: string | null
    miniatureHash?: string | null
    imageHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    productCategory?: ProductCategoryUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutChildrenInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
  }

  export type CategoryCreateWithoutParentInput = {
    uuid: string
    name: string
    description?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    productCategory?: ProductCategoryCreateNestedManyWithoutCategoryInput
    children?: CategoryCreateNestedManyWithoutParentInput
    image?: ImageCreateNestedOneWithoutCategoryImageInput
    miniature?: ImageCreateNestedOneWithoutCategoryMiniatureInput
  }

  export type CategoryUncheckedCreateWithoutParentInput = {
    uuid: string
    name: string
    description?: string | null
    miniatureHash?: string | null
    imageHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    productCategory?: ProductCategoryUncheckedCreateNestedManyWithoutCategoryInput
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
  }

  export type CategoryCreateOrConnectWithoutParentInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput>
  }

  export type CategoryCreateManyParentInputEnvelope = {
    data: CategoryCreateManyParentInput | CategoryCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type ImageCreateWithoutCategoryImageInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryMiniature?: CategoryCreateNestedManyWithoutMiniatureInput
    productImage?: ProductImageCreateNestedManyWithoutImageInput
    productMiniature?: ProductCreateNestedManyWithoutMiniatureInput
    laboratoryImage?: LaboratoryCreateNestedManyWithoutImageInput
    laboratoryMiniature?: LaboratoryCreateNestedManyWithoutMiniatureInput
    bannerImage?: BannerCreateNestedManyWithoutImageInput
  }

  export type ImageUncheckedCreateWithoutCategoryImageInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryMiniature?: CategoryUncheckedCreateNestedManyWithoutMiniatureInput
    productImage?: ProductImageUncheckedCreateNestedManyWithoutImageInput
    productMiniature?: ProductUncheckedCreateNestedManyWithoutMiniatureInput
    laboratoryImage?: LaboratoryUncheckedCreateNestedManyWithoutImageInput
    laboratoryMiniature?: LaboratoryUncheckedCreateNestedManyWithoutMiniatureInput
    bannerImage?: BannerUncheckedCreateNestedManyWithoutImageInput
  }

  export type ImageCreateOrConnectWithoutCategoryImageInput = {
    where: ImageWhereUniqueInput
    create: XOR<ImageCreateWithoutCategoryImageInput, ImageUncheckedCreateWithoutCategoryImageInput>
  }

  export type ImageCreateWithoutCategoryMiniatureInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryCreateNestedManyWithoutImageInput
    productImage?: ProductImageCreateNestedManyWithoutImageInput
    productMiniature?: ProductCreateNestedManyWithoutMiniatureInput
    laboratoryImage?: LaboratoryCreateNestedManyWithoutImageInput
    laboratoryMiniature?: LaboratoryCreateNestedManyWithoutMiniatureInput
    bannerImage?: BannerCreateNestedManyWithoutImageInput
  }

  export type ImageUncheckedCreateWithoutCategoryMiniatureInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryUncheckedCreateNestedManyWithoutImageInput
    productImage?: ProductImageUncheckedCreateNestedManyWithoutImageInput
    productMiniature?: ProductUncheckedCreateNestedManyWithoutMiniatureInput
    laboratoryImage?: LaboratoryUncheckedCreateNestedManyWithoutImageInput
    laboratoryMiniature?: LaboratoryUncheckedCreateNestedManyWithoutMiniatureInput
    bannerImage?: BannerUncheckedCreateNestedManyWithoutImageInput
  }

  export type ImageCreateOrConnectWithoutCategoryMiniatureInput = {
    where: ImageWhereUniqueInput
    create: XOR<ImageCreateWithoutCategoryMiniatureInput, ImageUncheckedCreateWithoutCategoryMiniatureInput>
  }

  export type ProductCategoryUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ProductCategoryWhereUniqueInput
    update: XOR<ProductCategoryUpdateWithoutCategoryInput, ProductCategoryUncheckedUpdateWithoutCategoryInput>
    create: XOR<ProductCategoryCreateWithoutCategoryInput, ProductCategoryUncheckedCreateWithoutCategoryInput>
  }

  export type ProductCategoryUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ProductCategoryWhereUniqueInput
    data: XOR<ProductCategoryUpdateWithoutCategoryInput, ProductCategoryUncheckedUpdateWithoutCategoryInput>
  }

  export type ProductCategoryUpdateManyWithWhereWithoutCategoryInput = {
    where: ProductCategoryScalarWhereInput
    data: XOR<ProductCategoryUpdateManyMutationInput, ProductCategoryUncheckedUpdateManyWithoutCategoryInput>
  }

  export type CategoryUpsertWithoutChildrenInput = {
    update: XOR<CategoryUpdateWithoutChildrenInput, CategoryUncheckedUpdateWithoutChildrenInput>
    create: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutChildrenInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutChildrenInput, CategoryUncheckedUpdateWithoutChildrenInput>
  }

  export type CategoryUpdateWithoutChildrenInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    productCategory?: ProductCategoryUpdateManyWithoutCategoryNestedInput
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    image?: ImageUpdateOneWithoutCategoryImageNestedInput
    miniature?: ImageUpdateOneWithoutCategoryMiniatureNestedInput
  }

  export type CategoryUncheckedUpdateWithoutChildrenInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentUuid?: NullableStringFieldUpdateOperationsInput | string | null
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    imageHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    productCategory?: ProductCategoryUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUpsertWithWhereUniqueWithoutParentInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutParentInput, CategoryUncheckedUpdateWithoutParentInput>
    create: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutParentInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutParentInput, CategoryUncheckedUpdateWithoutParentInput>
  }

  export type CategoryUpdateManyWithWhereWithoutParentInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutParentInput>
  }

  export type ImageUpsertWithoutCategoryImageInput = {
    update: XOR<ImageUpdateWithoutCategoryImageInput, ImageUncheckedUpdateWithoutCategoryImageInput>
    create: XOR<ImageCreateWithoutCategoryImageInput, ImageUncheckedCreateWithoutCategoryImageInput>
    where?: ImageWhereInput
  }

  export type ImageUpdateToOneWithWhereWithoutCategoryImageInput = {
    where?: ImageWhereInput
    data: XOR<ImageUpdateWithoutCategoryImageInput, ImageUncheckedUpdateWithoutCategoryImageInput>
  }

  export type ImageUpdateWithoutCategoryImageInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryMiniature?: CategoryUpdateManyWithoutMiniatureNestedInput
    productImage?: ProductImageUpdateManyWithoutImageNestedInput
    productMiniature?: ProductUpdateManyWithoutMiniatureNestedInput
    laboratoryImage?: LaboratoryUpdateManyWithoutImageNestedInput
    laboratoryMiniature?: LaboratoryUpdateManyWithoutMiniatureNestedInput
    bannerImage?: BannerUpdateManyWithoutImageNestedInput
  }

  export type ImageUncheckedUpdateWithoutCategoryImageInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryMiniature?: CategoryUncheckedUpdateManyWithoutMiniatureNestedInput
    productImage?: ProductImageUncheckedUpdateManyWithoutImageNestedInput
    productMiniature?: ProductUncheckedUpdateManyWithoutMiniatureNestedInput
    laboratoryImage?: LaboratoryUncheckedUpdateManyWithoutImageNestedInput
    laboratoryMiniature?: LaboratoryUncheckedUpdateManyWithoutMiniatureNestedInput
    bannerImage?: BannerUncheckedUpdateManyWithoutImageNestedInput
  }

  export type ImageUpsertWithoutCategoryMiniatureInput = {
    update: XOR<ImageUpdateWithoutCategoryMiniatureInput, ImageUncheckedUpdateWithoutCategoryMiniatureInput>
    create: XOR<ImageCreateWithoutCategoryMiniatureInput, ImageUncheckedCreateWithoutCategoryMiniatureInput>
    where?: ImageWhereInput
  }

  export type ImageUpdateToOneWithWhereWithoutCategoryMiniatureInput = {
    where?: ImageWhereInput
    data: XOR<ImageUpdateWithoutCategoryMiniatureInput, ImageUncheckedUpdateWithoutCategoryMiniatureInput>
  }

  export type ImageUpdateWithoutCategoryMiniatureInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUpdateManyWithoutImageNestedInput
    productImage?: ProductImageUpdateManyWithoutImageNestedInput
    productMiniature?: ProductUpdateManyWithoutMiniatureNestedInput
    laboratoryImage?: LaboratoryUpdateManyWithoutImageNestedInput
    laboratoryMiniature?: LaboratoryUpdateManyWithoutMiniatureNestedInput
    bannerImage?: BannerUpdateManyWithoutImageNestedInput
  }

  export type ImageUncheckedUpdateWithoutCategoryMiniatureInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUncheckedUpdateManyWithoutImageNestedInput
    productImage?: ProductImageUncheckedUpdateManyWithoutImageNestedInput
    productMiniature?: ProductUncheckedUpdateManyWithoutMiniatureNestedInput
    laboratoryImage?: LaboratoryUncheckedUpdateManyWithoutImageNestedInput
    laboratoryMiniature?: LaboratoryUncheckedUpdateManyWithoutMiniatureNestedInput
    bannerImage?: BannerUncheckedUpdateManyWithoutImageNestedInput
  }

  export type ProductPromotionCreateWithoutPromotionInput = {
    product: ProductCreateNestedOneWithoutPromotionsInput
  }

  export type ProductPromotionUncheckedCreateWithoutPromotionInput = {
    productUuid: string
  }

  export type ProductPromotionCreateOrConnectWithoutPromotionInput = {
    where: ProductPromotionWhereUniqueInput
    create: XOR<ProductPromotionCreateWithoutPromotionInput, ProductPromotionUncheckedCreateWithoutPromotionInput>
  }

  export type ProductPromotionCreateManyPromotionInputEnvelope = {
    data: ProductPromotionCreateManyPromotionInput | ProductPromotionCreateManyPromotionInput[]
    skipDuplicates?: boolean
  }

  export type OrderLineCreateWithoutPromotionInput = {
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    expectedQuantity: number
    preparedQuantity: number
    status: $Enums.OrderLineStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    product: ProductCreateNestedOneWithoutOrderLinesInput
    order: OrderCreateNestedOneWithoutLinesInput
  }

  export type OrderLineUncheckedCreateWithoutPromotionInput = {
    productUuid: string
    orderUuid: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    expectedQuantity: number
    preparedQuantity: number
    status: $Enums.OrderLineStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type OrderLineCreateOrConnectWithoutPromotionInput = {
    where: OrderLineWhereUniqueInput
    create: XOR<OrderLineCreateWithoutPromotionInput, OrderLineUncheckedCreateWithoutPromotionInput>
  }

  export type OrderLineCreateManyPromotionInputEnvelope = {
    data: OrderLineCreateManyPromotionInput | OrderLineCreateManyPromotionInput[]
    skipDuplicates?: boolean
  }

  export type ProductPromotionUpsertWithWhereUniqueWithoutPromotionInput = {
    where: ProductPromotionWhereUniqueInput
    update: XOR<ProductPromotionUpdateWithoutPromotionInput, ProductPromotionUncheckedUpdateWithoutPromotionInput>
    create: XOR<ProductPromotionCreateWithoutPromotionInput, ProductPromotionUncheckedCreateWithoutPromotionInput>
  }

  export type ProductPromotionUpdateWithWhereUniqueWithoutPromotionInput = {
    where: ProductPromotionWhereUniqueInput
    data: XOR<ProductPromotionUpdateWithoutPromotionInput, ProductPromotionUncheckedUpdateWithoutPromotionInput>
  }

  export type ProductPromotionUpdateManyWithWhereWithoutPromotionInput = {
    where: ProductPromotionScalarWhereInput
    data: XOR<ProductPromotionUpdateManyMutationInput, ProductPromotionUncheckedUpdateManyWithoutPromotionInput>
  }

  export type OrderLineUpsertWithWhereUniqueWithoutPromotionInput = {
    where: OrderLineWhereUniqueInput
    update: XOR<OrderLineUpdateWithoutPromotionInput, OrderLineUncheckedUpdateWithoutPromotionInput>
    create: XOR<OrderLineCreateWithoutPromotionInput, OrderLineUncheckedCreateWithoutPromotionInput>
  }

  export type OrderLineUpdateWithWhereUniqueWithoutPromotionInput = {
    where: OrderLineWhereUniqueInput
    data: XOR<OrderLineUpdateWithoutPromotionInput, OrderLineUncheckedUpdateWithoutPromotionInput>
  }

  export type OrderLineUpdateManyWithWhereWithoutPromotionInput = {
    where: OrderLineScalarWhereInput
    data: XOR<OrderLineUpdateManyMutationInput, OrderLineUncheckedUpdateManyWithoutPromotionInput>
  }

  export type CategoryCreateWithoutProductCategoryInput = {
    uuid: string
    name: string
    description?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    image?: ImageCreateNestedOneWithoutCategoryImageInput
    miniature?: ImageCreateNestedOneWithoutCategoryMiniatureInput
  }

  export type CategoryUncheckedCreateWithoutProductCategoryInput = {
    uuid: string
    name: string
    description?: string | null
    parentUuid?: string | null
    miniatureHash?: string | null
    imageHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
  }

  export type CategoryCreateOrConnectWithoutProductCategoryInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutProductCategoryInput, CategoryUncheckedCreateWithoutProductCategoryInput>
  }

  export type ProductCreateWithoutCategoriesInput = {
    uuid: string
    availableStock: number
    name: string
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionCreateNestedManyWithoutProductInput
    orderLines?: OrderLineCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    miniature?: ImageCreateNestedOneWithoutProductMiniatureInput
    laboratory?: LaboratoryCreateNestedOneWithoutProductInput
    locations?: ProductLocationCreateNestedManyWithoutProductInput
    notice?: NoticeCreateNestedOneWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutCategoriesInput = {
    uuid: string
    availableStock: number
    name: string
    miniatureHash?: string | null
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    laboratoryUuid?: string | null
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionUncheckedCreateNestedManyWithoutProductInput
    orderLines?: OrderLineUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    locations?: ProductLocationUncheckedCreateNestedManyWithoutProductInput
    notice?: NoticeUncheckedCreateNestedOneWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutCategoriesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput>
  }

  export type CategoryUpsertWithoutProductCategoryInput = {
    update: XOR<CategoryUpdateWithoutProductCategoryInput, CategoryUncheckedUpdateWithoutProductCategoryInput>
    create: XOR<CategoryCreateWithoutProductCategoryInput, CategoryUncheckedCreateWithoutProductCategoryInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutProductCategoryInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutProductCategoryInput, CategoryUncheckedUpdateWithoutProductCategoryInput>
  }

  export type CategoryUpdateWithoutProductCategoryInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    image?: ImageUpdateOneWithoutCategoryImageNestedInput
    miniature?: ImageUpdateOneWithoutCategoryMiniatureNestedInput
  }

  export type CategoryUncheckedUpdateWithoutProductCategoryInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentUuid?: NullableStringFieldUpdateOperationsInput | string | null
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    imageHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
  }

  export type ProductUpsertWithoutCategoriesInput = {
    update: XOR<ProductUpdateWithoutCategoriesInput, ProductUncheckedUpdateWithoutCategoriesInput>
    create: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutCategoriesInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutCategoriesInput, ProductUncheckedUpdateWithoutCategoriesInput>
  }

  export type ProductUpdateWithoutCategoriesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    miniature?: ImageUpdateOneWithoutProductMiniatureNestedInput
    laboratory?: LaboratoryUpdateOneWithoutProductNestedInput
    locations?: ProductLocationUpdateManyWithoutProductNestedInput
    notice?: NoticeUpdateOneWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutCategoriesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUncheckedUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    locations?: ProductLocationUncheckedUpdateManyWithoutProductNestedInput
    notice?: NoticeUncheckedUpdateOneWithoutProductNestedInput
  }

  export type ProductCreateWithoutPromotionsInput = {
    uuid: string
    availableStock: number
    name: string
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    orderLines?: OrderLineCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    miniature?: ImageCreateNestedOneWithoutProductMiniatureInput
    categories?: ProductCategoryCreateNestedManyWithoutProductInput
    laboratory?: LaboratoryCreateNestedOneWithoutProductInput
    locations?: ProductLocationCreateNestedManyWithoutProductInput
    notice?: NoticeCreateNestedOneWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutPromotionsInput = {
    uuid: string
    availableStock: number
    name: string
    miniatureHash?: string | null
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    laboratoryUuid?: string | null
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    orderLines?: OrderLineUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductInput
    locations?: ProductLocationUncheckedCreateNestedManyWithoutProductInput
    notice?: NoticeUncheckedCreateNestedOneWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutPromotionsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutPromotionsInput, ProductUncheckedCreateWithoutPromotionsInput>
  }

  export type PromotionCreateWithoutProductsInput = {
    uuid: string
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.ReductionType
    name?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    orderLines?: OrderLineCreateNestedManyWithoutPromotionInput
  }

  export type PromotionUncheckedCreateWithoutProductsInput = {
    uuid: string
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.ReductionType
    name?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    orderLines?: OrderLineUncheckedCreateNestedManyWithoutPromotionInput
  }

  export type PromotionCreateOrConnectWithoutProductsInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutProductsInput, PromotionUncheckedCreateWithoutProductsInput>
  }

  export type ProductUpsertWithoutPromotionsInput = {
    update: XOR<ProductUpdateWithoutPromotionsInput, ProductUncheckedUpdateWithoutPromotionsInput>
    create: XOR<ProductCreateWithoutPromotionsInput, ProductUncheckedCreateWithoutPromotionsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutPromotionsInput, ProductUncheckedUpdateWithoutPromotionsInput>
  }

  export type ProductUpdateWithoutPromotionsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    orderLines?: OrderLineUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    miniature?: ImageUpdateOneWithoutProductMiniatureNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductNestedInput
    laboratory?: LaboratoryUpdateOneWithoutProductNestedInput
    locations?: ProductLocationUpdateManyWithoutProductNestedInput
    notice?: NoticeUpdateOneWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutPromotionsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    orderLines?: OrderLineUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductNestedInput
    locations?: ProductLocationUncheckedUpdateManyWithoutProductNestedInput
    notice?: NoticeUncheckedUpdateOneWithoutProductNestedInput
  }

  export type PromotionUpsertWithoutProductsInput = {
    update: XOR<PromotionUpdateWithoutProductsInput, PromotionUncheckedUpdateWithoutProductsInput>
    create: XOR<PromotionCreateWithoutProductsInput, PromotionUncheckedCreateWithoutProductsInput>
    where?: PromotionWhereInput
  }

  export type PromotionUpdateToOneWithWhereWithoutProductsInput = {
    where?: PromotionWhereInput
    data: XOR<PromotionUpdateWithoutProductsInput, PromotionUncheckedUpdateWithoutProductsInput>
  }

  export type PromotionUpdateWithoutProductsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: EnumReductionTypeFieldUpdateOperationsInput | $Enums.ReductionType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    orderLines?: OrderLineUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionUncheckedUpdateWithoutProductsInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: EnumReductionTypeFieldUpdateOperationsInput | $Enums.ReductionType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    orderLines?: OrderLineUncheckedUpdateManyWithoutPromotionNestedInput
  }

  export type DeliveryCreateWithoutMethodInput = {
    uuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    senderAddress: MediaCreateNestedOneWithoutDeliverySenderAddressInput
    senderPhone: MediaCreateNestedOneWithoutDeliverySenderPhoneInput
    senderEmail: MediaCreateNestedOneWithoutDeliverySenderEmailInput
    receiverAddress: MediaCreateNestedOneWithoutDeliveryReceiverAddressInput
    receiverPhone: MediaCreateNestedOneWithoutDeliveryReceiverPhoneInput
    receiverEmail: MediaCreateNestedOneWithoutDeliveryReceiverEmailInput
    order: OrderCreateNestedOneWithoutDeliveriesInput
  }

  export type DeliveryUncheckedCreateWithoutMethodInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    senderAddressUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateOrConnectWithoutMethodInput = {
    where: DeliveryWhereUniqueInput
    create: XOR<DeliveryCreateWithoutMethodInput, DeliveryUncheckedCreateWithoutMethodInput>
  }

  export type DeliveryCreateManyMethodInputEnvelope = {
    data: DeliveryCreateManyMethodInput | DeliveryCreateManyMethodInput[]
    skipDuplicates?: boolean
  }

  export type DeliveryUpsertWithWhereUniqueWithoutMethodInput = {
    where: DeliveryWhereUniqueInput
    update: XOR<DeliveryUpdateWithoutMethodInput, DeliveryUncheckedUpdateWithoutMethodInput>
    create: XOR<DeliveryCreateWithoutMethodInput, DeliveryUncheckedCreateWithoutMethodInput>
  }

  export type DeliveryUpdateWithWhereUniqueWithoutMethodInput = {
    where: DeliveryWhereUniqueInput
    data: XOR<DeliveryUpdateWithoutMethodInput, DeliveryUncheckedUpdateWithoutMethodInput>
  }

  export type DeliveryUpdateManyWithWhereWithoutMethodInput = {
    where: DeliveryScalarWhereInput
    data: XOR<DeliveryUpdateManyMutationInput, DeliveryUncheckedUpdateManyWithoutMethodInput>
  }

  export type DeliveryScalarWhereInput = {
    AND?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
    OR?: DeliveryScalarWhereInput[]
    NOT?: DeliveryScalarWhereInput | DeliveryScalarWhereInput[]
    uuid?: StringFilter<"Delivery"> | string
    orderUuid?: StringFilter<"Delivery"> | string
    price?: DecimalFilter<"Delivery"> | Decimal | DecimalJsLike | number | string
    pickupId?: StringNullableFilter<"Delivery"> | string | null
    pickingDate?: DateTimeNullableFilter<"Delivery"> | Date | string | null
    trackingNumber?: StringNullableFilter<"Delivery"> | string | null
    direction?: EnumDeliveryDirectionFilter<"Delivery"> | $Enums.DeliveryDirection
    weight?: IntFilter<"Delivery"> | number
    status?: EnumDeliveryStatusFilter<"Delivery"> | $Enums.DeliveryStatus
    methodUuid?: StringFilter<"Delivery"> | string
    senderAddressUuid?: StringFilter<"Delivery"> | string
    senderPhoneUuid?: StringFilter<"Delivery"> | string
    senderEmailUuid?: StringFilter<"Delivery"> | string
    receiverAddressUuid?: StringFilter<"Delivery"> | string
    receiverPhoneUuid?: StringFilter<"Delivery"> | string
    receiverEmailUuid?: StringFilter<"Delivery"> | string
    data?: BytesNullableFilter<"Delivery"> | Buffer | null
    createdAt?: DateTimeFilter<"Delivery"> | Date | string
    createdBy?: StringFilter<"Delivery"> | string
    updatedAt?: DateTimeFilter<"Delivery"> | Date | string
    updatedBy?: StringFilter<"Delivery"> | string
  }

  export type DeliveryMethodCreateWithoutDeliveriesInput = {
    uuid: string
    name: string
    description: string
    priceRanges: JsonNullValueInput | InputJsonValue
    type: $Enums.DeliveryMethodType
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryMethodUncheckedCreateWithoutDeliveriesInput = {
    uuid: string
    name: string
    description: string
    priceRanges: JsonNullValueInput | InputJsonValue
    type: $Enums.DeliveryMethodType
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryMethodCreateOrConnectWithoutDeliveriesInput = {
    where: DeliveryMethodWhereUniqueInput
    create: XOR<DeliveryMethodCreateWithoutDeliveriesInput, DeliveryMethodUncheckedCreateWithoutDeliveriesInput>
  }

  export type MediaCreateWithoutDeliverySenderAddressInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderCreateNestedManyWithoutEmailInput
    deliverySenderPhone?: DeliveryCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerCreateNestedManyWithoutPhoneInput
  }

  export type MediaUncheckedCreateWithoutDeliverySenderAddressInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderUncheckedCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderUncheckedCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderUncheckedCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderUncheckedCreateNestedManyWithoutEmailInput
    deliverySenderPhone?: DeliveryUncheckedCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryUncheckedCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryUncheckedCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryUncheckedCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryUncheckedCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerUncheckedCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerUncheckedCreateNestedManyWithoutPhoneInput
  }

  export type MediaCreateOrConnectWithoutDeliverySenderAddressInput = {
    where: MediaWhereUniqueInput
    create: XOR<MediaCreateWithoutDeliverySenderAddressInput, MediaUncheckedCreateWithoutDeliverySenderAddressInput>
  }

  export type MediaCreateWithoutDeliverySenderPhoneInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryCreateNestedManyWithoutSenderAddressInput
    deliverySenderEmail?: DeliveryCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerCreateNestedManyWithoutPhoneInput
  }

  export type MediaUncheckedCreateWithoutDeliverySenderPhoneInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderUncheckedCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderUncheckedCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderUncheckedCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderUncheckedCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryUncheckedCreateNestedManyWithoutSenderAddressInput
    deliverySenderEmail?: DeliveryUncheckedCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryUncheckedCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryUncheckedCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryUncheckedCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerUncheckedCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerUncheckedCreateNestedManyWithoutPhoneInput
  }

  export type MediaCreateOrConnectWithoutDeliverySenderPhoneInput = {
    where: MediaWhereUniqueInput
    create: XOR<MediaCreateWithoutDeliverySenderPhoneInput, MediaUncheckedCreateWithoutDeliverySenderPhoneInput>
  }

  export type MediaCreateWithoutDeliverySenderEmailInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryCreateNestedManyWithoutSenderPhoneInput
    deliveryReceiverAddress?: DeliveryCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerCreateNestedManyWithoutPhoneInput
  }

  export type MediaUncheckedCreateWithoutDeliverySenderEmailInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderUncheckedCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderUncheckedCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderUncheckedCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderUncheckedCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryUncheckedCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryUncheckedCreateNestedManyWithoutSenderPhoneInput
    deliveryReceiverAddress?: DeliveryUncheckedCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryUncheckedCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryUncheckedCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerUncheckedCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerUncheckedCreateNestedManyWithoutPhoneInput
  }

  export type MediaCreateOrConnectWithoutDeliverySenderEmailInput = {
    where: MediaWhereUniqueInput
    create: XOR<MediaCreateWithoutDeliverySenderEmailInput, MediaUncheckedCreateWithoutDeliverySenderEmailInput>
  }

  export type MediaCreateWithoutDeliveryReceiverAddressInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverPhone?: DeliveryCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerCreateNestedManyWithoutPhoneInput
  }

  export type MediaUncheckedCreateWithoutDeliveryReceiverAddressInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderUncheckedCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderUncheckedCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderUncheckedCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderUncheckedCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryUncheckedCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryUncheckedCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryUncheckedCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverPhone?: DeliveryUncheckedCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryUncheckedCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerUncheckedCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerUncheckedCreateNestedManyWithoutPhoneInput
  }

  export type MediaCreateOrConnectWithoutDeliveryReceiverAddressInput = {
    where: MediaWhereUniqueInput
    create: XOR<MediaCreateWithoutDeliveryReceiverAddressInput, MediaUncheckedCreateWithoutDeliveryReceiverAddressInput>
  }

  export type MediaCreateWithoutDeliveryReceiverPhoneInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverEmail?: DeliveryCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerCreateNestedManyWithoutPhoneInput
  }

  export type MediaUncheckedCreateWithoutDeliveryReceiverPhoneInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderUncheckedCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderUncheckedCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderUncheckedCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderUncheckedCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryUncheckedCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryUncheckedCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryUncheckedCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryUncheckedCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverEmail?: DeliveryUncheckedCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerUncheckedCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerUncheckedCreateNestedManyWithoutPhoneInput
  }

  export type MediaCreateOrConnectWithoutDeliveryReceiverPhoneInput = {
    where: MediaWhereUniqueInput
    create: XOR<MediaCreateWithoutDeliveryReceiverPhoneInput, MediaUncheckedCreateWithoutDeliveryReceiverPhoneInput>
  }

  export type MediaCreateWithoutDeliveryReceiverEmailInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryCreateNestedManyWithoutReceiverPhoneInput
    customerAddress?: CustomerCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerCreateNestedManyWithoutPhoneInput
  }

  export type MediaUncheckedCreateWithoutDeliveryReceiverEmailInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderUncheckedCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderUncheckedCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderUncheckedCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderUncheckedCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryUncheckedCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryUncheckedCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryUncheckedCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryUncheckedCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryUncheckedCreateNestedManyWithoutReceiverPhoneInput
    customerAddress?: CustomerUncheckedCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerUncheckedCreateNestedManyWithoutPhoneInput
  }

  export type MediaCreateOrConnectWithoutDeliveryReceiverEmailInput = {
    where: MediaWhereUniqueInput
    create: XOR<MediaCreateWithoutDeliveryReceiverEmailInput, MediaUncheckedCreateWithoutDeliveryReceiverEmailInput>
  }

  export type OrderCreateWithoutDeliveriesInput = {
    uuid: string
    idPasserelle?: number | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineCreateNestedManyWithoutOrderInput
    deliveryAddress: MediaCreateNestedOneWithoutDeliveryOrderInput
    billingAddress: MediaCreateNestedOneWithoutBillingOrderInput
    phone: MediaCreateNestedOneWithoutPhoneOrderInput
    email: MediaCreateNestedOneWithoutEmailOrderInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    customer?: CustomerCreateNestedOneWithoutOrdersInput
    invoice?: InvoiceCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutDeliveriesInput = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineUncheckedCreateNestedManyWithoutOrderInput
    payment?: PaymentUncheckedCreateNestedOneWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    invoice?: InvoiceUncheckedCreateNestedOneWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutDeliveriesInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutDeliveriesInput, OrderUncheckedCreateWithoutDeliveriesInput>
  }

  export type DeliveryMethodUpsertWithoutDeliveriesInput = {
    update: XOR<DeliveryMethodUpdateWithoutDeliveriesInput, DeliveryMethodUncheckedUpdateWithoutDeliveriesInput>
    create: XOR<DeliveryMethodCreateWithoutDeliveriesInput, DeliveryMethodUncheckedCreateWithoutDeliveriesInput>
    where?: DeliveryMethodWhereInput
  }

  export type DeliveryMethodUpdateToOneWithWhereWithoutDeliveriesInput = {
    where?: DeliveryMethodWhereInput
    data: XOR<DeliveryMethodUpdateWithoutDeliveriesInput, DeliveryMethodUncheckedUpdateWithoutDeliveriesInput>
  }

  export type DeliveryMethodUpdateWithoutDeliveriesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    priceRanges?: JsonNullValueInput | InputJsonValue
    type?: EnumDeliveryMethodTypeFieldUpdateOperationsInput | $Enums.DeliveryMethodType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryMethodUncheckedUpdateWithoutDeliveriesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    priceRanges?: JsonNullValueInput | InputJsonValue
    type?: EnumDeliveryMethodTypeFieldUpdateOperationsInput | $Enums.DeliveryMethodType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type MediaUpsertWithoutDeliverySenderAddressInput = {
    update: XOR<MediaUpdateWithoutDeliverySenderAddressInput, MediaUncheckedUpdateWithoutDeliverySenderAddressInput>
    create: XOR<MediaCreateWithoutDeliverySenderAddressInput, MediaUncheckedCreateWithoutDeliverySenderAddressInput>
    where?: MediaWhereInput
  }

  export type MediaUpdateToOneWithWhereWithoutDeliverySenderAddressInput = {
    where?: MediaWhereInput
    data: XOR<MediaUpdateWithoutDeliverySenderAddressInput, MediaUncheckedUpdateWithoutDeliverySenderAddressInput>
  }

  export type MediaUpdateWithoutDeliverySenderAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUpdateManyWithoutEmailNestedInput
    deliverySenderPhone?: DeliveryUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUncheckedUpdateWithoutDeliverySenderAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUncheckedUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUncheckedUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUncheckedUpdateManyWithoutEmailNestedInput
    deliverySenderPhone?: DeliveryUncheckedUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUncheckedUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUncheckedUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUncheckedUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUncheckedUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUncheckedUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUncheckedUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUpsertWithoutDeliverySenderPhoneInput = {
    update: XOR<MediaUpdateWithoutDeliverySenderPhoneInput, MediaUncheckedUpdateWithoutDeliverySenderPhoneInput>
    create: XOR<MediaCreateWithoutDeliverySenderPhoneInput, MediaUncheckedCreateWithoutDeliverySenderPhoneInput>
    where?: MediaWhereInput
  }

  export type MediaUpdateToOneWithWhereWithoutDeliverySenderPhoneInput = {
    where?: MediaWhereInput
    data: XOR<MediaUpdateWithoutDeliverySenderPhoneInput, MediaUncheckedUpdateWithoutDeliverySenderPhoneInput>
  }

  export type MediaUpdateWithoutDeliverySenderPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUpdateManyWithoutSenderAddressNestedInput
    deliverySenderEmail?: DeliveryUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUncheckedUpdateWithoutDeliverySenderPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUncheckedUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUncheckedUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUncheckedUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUncheckedUpdateManyWithoutSenderAddressNestedInput
    deliverySenderEmail?: DeliveryUncheckedUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUncheckedUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUncheckedUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUncheckedUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUncheckedUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUncheckedUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUpsertWithoutDeliverySenderEmailInput = {
    update: XOR<MediaUpdateWithoutDeliverySenderEmailInput, MediaUncheckedUpdateWithoutDeliverySenderEmailInput>
    create: XOR<MediaCreateWithoutDeliverySenderEmailInput, MediaUncheckedCreateWithoutDeliverySenderEmailInput>
    where?: MediaWhereInput
  }

  export type MediaUpdateToOneWithWhereWithoutDeliverySenderEmailInput = {
    where?: MediaWhereInput
    data: XOR<MediaUpdateWithoutDeliverySenderEmailInput, MediaUncheckedUpdateWithoutDeliverySenderEmailInput>
  }

  export type MediaUpdateWithoutDeliverySenderEmailInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUpdateManyWithoutSenderPhoneNestedInput
    deliveryReceiverAddress?: DeliveryUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUncheckedUpdateWithoutDeliverySenderEmailInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUncheckedUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUncheckedUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUncheckedUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUncheckedUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUncheckedUpdateManyWithoutSenderPhoneNestedInput
    deliveryReceiverAddress?: DeliveryUncheckedUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUncheckedUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUncheckedUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUncheckedUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUncheckedUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUpsertWithoutDeliveryReceiverAddressInput = {
    update: XOR<MediaUpdateWithoutDeliveryReceiverAddressInput, MediaUncheckedUpdateWithoutDeliveryReceiverAddressInput>
    create: XOR<MediaCreateWithoutDeliveryReceiverAddressInput, MediaUncheckedCreateWithoutDeliveryReceiverAddressInput>
    where?: MediaWhereInput
  }

  export type MediaUpdateToOneWithWhereWithoutDeliveryReceiverAddressInput = {
    where?: MediaWhereInput
    data: XOR<MediaUpdateWithoutDeliveryReceiverAddressInput, MediaUncheckedUpdateWithoutDeliveryReceiverAddressInput>
  }

  export type MediaUpdateWithoutDeliveryReceiverAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverPhone?: DeliveryUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUncheckedUpdateWithoutDeliveryReceiverAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUncheckedUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUncheckedUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUncheckedUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUncheckedUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUncheckedUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUncheckedUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverPhone?: DeliveryUncheckedUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUncheckedUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUncheckedUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUncheckedUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUpsertWithoutDeliveryReceiverPhoneInput = {
    update: XOR<MediaUpdateWithoutDeliveryReceiverPhoneInput, MediaUncheckedUpdateWithoutDeliveryReceiverPhoneInput>
    create: XOR<MediaCreateWithoutDeliveryReceiverPhoneInput, MediaUncheckedCreateWithoutDeliveryReceiverPhoneInput>
    where?: MediaWhereInput
  }

  export type MediaUpdateToOneWithWhereWithoutDeliveryReceiverPhoneInput = {
    where?: MediaWhereInput
    data: XOR<MediaUpdateWithoutDeliveryReceiverPhoneInput, MediaUncheckedUpdateWithoutDeliveryReceiverPhoneInput>
  }

  export type MediaUpdateWithoutDeliveryReceiverPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverEmail?: DeliveryUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUncheckedUpdateWithoutDeliveryReceiverPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUncheckedUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUncheckedUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUncheckedUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUncheckedUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUncheckedUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUncheckedUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUncheckedUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverEmail?: DeliveryUncheckedUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUncheckedUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUncheckedUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUpsertWithoutDeliveryReceiverEmailInput = {
    update: XOR<MediaUpdateWithoutDeliveryReceiverEmailInput, MediaUncheckedUpdateWithoutDeliveryReceiverEmailInput>
    create: XOR<MediaCreateWithoutDeliveryReceiverEmailInput, MediaUncheckedCreateWithoutDeliveryReceiverEmailInput>
    where?: MediaWhereInput
  }

  export type MediaUpdateToOneWithWhereWithoutDeliveryReceiverEmailInput = {
    where?: MediaWhereInput
    data: XOR<MediaUpdateWithoutDeliveryReceiverEmailInput, MediaUncheckedUpdateWithoutDeliveryReceiverEmailInput>
  }

  export type MediaUpdateWithoutDeliveryReceiverEmailInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUpdateManyWithoutReceiverPhoneNestedInput
    customerAddress?: CustomerUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUncheckedUpdateWithoutDeliveryReceiverEmailInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUncheckedUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUncheckedUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUncheckedUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUncheckedUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUncheckedUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUncheckedUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUncheckedUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUncheckedUpdateManyWithoutReceiverPhoneNestedInput
    customerAddress?: CustomerUncheckedUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUncheckedUpdateManyWithoutPhoneNestedInput
  }

  export type OrderUpsertWithoutDeliveriesInput = {
    update: XOR<OrderUpdateWithoutDeliveriesInput, OrderUncheckedUpdateWithoutDeliveriesInput>
    create: XOR<OrderCreateWithoutDeliveriesInput, OrderUncheckedCreateWithoutDeliveriesInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutDeliveriesInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutDeliveriesInput, OrderUncheckedUpdateWithoutDeliveriesInput>
  }

  export type OrderUpdateWithoutDeliveriesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUpdateManyWithoutOrderNestedInput
    deliveryAddress?: MediaUpdateOneRequiredWithoutDeliveryOrderNestedInput
    billingAddress?: MediaUpdateOneRequiredWithoutBillingOrderNestedInput
    phone?: MediaUpdateOneRequiredWithoutPhoneOrderNestedInput
    email?: MediaUpdateOneRequiredWithoutEmailOrderNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
    invoice?: InvoiceUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutDeliveriesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUncheckedUpdateManyWithoutOrderNestedInput
    payment?: PaymentUncheckedUpdateOneWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUncheckedUpdateOneWithoutOrderNestedInput
  }

  export type OrderCreateWithoutPaymentInput = {
    uuid: string
    idPasserelle?: number | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineCreateNestedManyWithoutOrderInput
    deliveryAddress: MediaCreateNestedOneWithoutDeliveryOrderInput
    billingAddress: MediaCreateNestedOneWithoutBillingOrderInput
    phone: MediaCreateNestedOneWithoutPhoneOrderInput
    email: MediaCreateNestedOneWithoutEmailOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryCreateNestedManyWithoutOrderInput
    customer?: CustomerCreateNestedOneWithoutOrdersInput
    invoice?: InvoiceCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutPaymentInput = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineUncheckedCreateNestedManyWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryUncheckedCreateNestedManyWithoutOrderInput
    invoice?: InvoiceUncheckedCreateNestedOneWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutPaymentInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput>
  }

  export type OrderUpsertWithoutPaymentInput = {
    update: XOR<OrderUpdateWithoutPaymentInput, OrderUncheckedUpdateWithoutPaymentInput>
    create: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutPaymentInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutPaymentInput, OrderUncheckedUpdateWithoutPaymentInput>
  }

  export type OrderUpdateWithoutPaymentInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUpdateManyWithoutOrderNestedInput
    deliveryAddress?: MediaUpdateOneRequiredWithoutDeliveryOrderNestedInput
    billingAddress?: MediaUpdateOneRequiredWithoutBillingOrderNestedInput
    phone?: MediaUpdateOneRequiredWithoutPhoneOrderNestedInput
    email?: MediaUpdateOneRequiredWithoutEmailOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUpdateManyWithoutOrderNestedInput
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
    invoice?: InvoiceUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutPaymentInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUncheckedUpdateManyWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUncheckedUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUncheckedUpdateOneWithoutOrderNestedInput
  }

  export type ProductCreateWithoutOrderLinesInput = {
    uuid: string
    availableStock: number
    name: string
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    miniature?: ImageCreateNestedOneWithoutProductMiniatureInput
    categories?: ProductCategoryCreateNestedManyWithoutProductInput
    laboratory?: LaboratoryCreateNestedOneWithoutProductInput
    locations?: ProductLocationCreateNestedManyWithoutProductInput
    notice?: NoticeCreateNestedOneWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutOrderLinesInput = {
    uuid: string
    availableStock: number
    name: string
    miniatureHash?: string | null
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    laboratoryUuid?: string | null
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductInput
    locations?: ProductLocationUncheckedCreateNestedManyWithoutProductInput
    notice?: NoticeUncheckedCreateNestedOneWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutOrderLinesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutOrderLinesInput, ProductUncheckedCreateWithoutOrderLinesInput>
  }

  export type OrderCreateWithoutLinesInput = {
    uuid: string
    idPasserelle?: number | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    deliveryAddress: MediaCreateNestedOneWithoutDeliveryOrderInput
    billingAddress: MediaCreateNestedOneWithoutBillingOrderInput
    phone: MediaCreateNestedOneWithoutPhoneOrderInput
    email: MediaCreateNestedOneWithoutEmailOrderInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryCreateNestedManyWithoutOrderInput
    customer?: CustomerCreateNestedOneWithoutOrdersInput
    invoice?: InvoiceCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutLinesInput = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    payment?: PaymentUncheckedCreateNestedOneWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryUncheckedCreateNestedManyWithoutOrderInput
    invoice?: InvoiceUncheckedCreateNestedOneWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutLinesInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutLinesInput, OrderUncheckedCreateWithoutLinesInput>
  }

  export type PromotionCreateWithoutOrderLinesInput = {
    uuid: string
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.ReductionType
    name?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    products?: ProductPromotionCreateNestedManyWithoutPromotionInput
  }

  export type PromotionUncheckedCreateWithoutOrderLinesInput = {
    uuid: string
    amount: Decimal | DecimalJsLike | number | string
    type: $Enums.ReductionType
    name?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    products?: ProductPromotionUncheckedCreateNestedManyWithoutPromotionInput
  }

  export type PromotionCreateOrConnectWithoutOrderLinesInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutOrderLinesInput, PromotionUncheckedCreateWithoutOrderLinesInput>
  }

  export type ProductUpsertWithoutOrderLinesInput = {
    update: XOR<ProductUpdateWithoutOrderLinesInput, ProductUncheckedUpdateWithoutOrderLinesInput>
    create: XOR<ProductCreateWithoutOrderLinesInput, ProductUncheckedCreateWithoutOrderLinesInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutOrderLinesInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutOrderLinesInput, ProductUncheckedUpdateWithoutOrderLinesInput>
  }

  export type ProductUpdateWithoutOrderLinesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    miniature?: ImageUpdateOneWithoutProductMiniatureNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductNestedInput
    laboratory?: LaboratoryUpdateOneWithoutProductNestedInput
    locations?: ProductLocationUpdateManyWithoutProductNestedInput
    notice?: NoticeUpdateOneWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutOrderLinesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductNestedInput
    locations?: ProductLocationUncheckedUpdateManyWithoutProductNestedInput
    notice?: NoticeUncheckedUpdateOneWithoutProductNestedInput
  }

  export type OrderUpsertWithoutLinesInput = {
    update: XOR<OrderUpdateWithoutLinesInput, OrderUncheckedUpdateWithoutLinesInput>
    create: XOR<OrderCreateWithoutLinesInput, OrderUncheckedCreateWithoutLinesInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutLinesInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutLinesInput, OrderUncheckedUpdateWithoutLinesInput>
  }

  export type OrderUpdateWithoutLinesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    deliveryAddress?: MediaUpdateOneRequiredWithoutDeliveryOrderNestedInput
    billingAddress?: MediaUpdateOneRequiredWithoutBillingOrderNestedInput
    phone?: MediaUpdateOneRequiredWithoutPhoneOrderNestedInput
    email?: MediaUpdateOneRequiredWithoutEmailOrderNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUpdateManyWithoutOrderNestedInput
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
    invoice?: InvoiceUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutLinesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    payment?: PaymentUncheckedUpdateOneWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUncheckedUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUncheckedUpdateOneWithoutOrderNestedInput
  }

  export type PromotionUpsertWithoutOrderLinesInput = {
    update: XOR<PromotionUpdateWithoutOrderLinesInput, PromotionUncheckedUpdateWithoutOrderLinesInput>
    create: XOR<PromotionCreateWithoutOrderLinesInput, PromotionUncheckedCreateWithoutOrderLinesInput>
    where?: PromotionWhereInput
  }

  export type PromotionUpdateToOneWithWhereWithoutOrderLinesInput = {
    where?: PromotionWhereInput
    data: XOR<PromotionUpdateWithoutOrderLinesInput, PromotionUncheckedUpdateWithoutOrderLinesInput>
  }

  export type PromotionUpdateWithoutOrderLinesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: EnumReductionTypeFieldUpdateOperationsInput | $Enums.ReductionType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    products?: ProductPromotionUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionUncheckedUpdateWithoutOrderLinesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: EnumReductionTypeFieldUpdateOperationsInput | $Enums.ReductionType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    products?: ProductPromotionUncheckedUpdateManyWithoutPromotionNestedInput
  }

  export type OrderCreateWithoutDeliveryAddressInput = {
    uuid: string
    idPasserelle?: number | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineCreateNestedManyWithoutOrderInput
    billingAddress: MediaCreateNestedOneWithoutBillingOrderInput
    phone: MediaCreateNestedOneWithoutPhoneOrderInput
    email: MediaCreateNestedOneWithoutEmailOrderInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryCreateNestedManyWithoutOrderInput
    customer?: CustomerCreateNestedOneWithoutOrdersInput
    invoice?: InvoiceCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutDeliveryAddressInput = {
    uuid: string
    billingAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineUncheckedCreateNestedManyWithoutOrderInput
    payment?: PaymentUncheckedCreateNestedOneWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryUncheckedCreateNestedManyWithoutOrderInput
    invoice?: InvoiceUncheckedCreateNestedOneWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutDeliveryAddressInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutDeliveryAddressInput, OrderUncheckedCreateWithoutDeliveryAddressInput>
  }

  export type OrderCreateManyDeliveryAddressInputEnvelope = {
    data: OrderCreateManyDeliveryAddressInput | OrderCreateManyDeliveryAddressInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutBillingAddressInput = {
    uuid: string
    idPasserelle?: number | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineCreateNestedManyWithoutOrderInput
    deliveryAddress: MediaCreateNestedOneWithoutDeliveryOrderInput
    phone: MediaCreateNestedOneWithoutPhoneOrderInput
    email: MediaCreateNestedOneWithoutEmailOrderInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryCreateNestedManyWithoutOrderInput
    customer?: CustomerCreateNestedOneWithoutOrdersInput
    invoice?: InvoiceCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutBillingAddressInput = {
    uuid: string
    deliveryAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineUncheckedCreateNestedManyWithoutOrderInput
    payment?: PaymentUncheckedCreateNestedOneWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryUncheckedCreateNestedManyWithoutOrderInput
    invoice?: InvoiceUncheckedCreateNestedOneWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutBillingAddressInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutBillingAddressInput, OrderUncheckedCreateWithoutBillingAddressInput>
  }

  export type OrderCreateManyBillingAddressInputEnvelope = {
    data: OrderCreateManyBillingAddressInput | OrderCreateManyBillingAddressInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutPhoneInput = {
    uuid: string
    idPasserelle?: number | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineCreateNestedManyWithoutOrderInput
    deliveryAddress: MediaCreateNestedOneWithoutDeliveryOrderInput
    billingAddress: MediaCreateNestedOneWithoutBillingOrderInput
    email: MediaCreateNestedOneWithoutEmailOrderInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryCreateNestedManyWithoutOrderInput
    customer?: CustomerCreateNestedOneWithoutOrdersInput
    invoice?: InvoiceCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutPhoneInput = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineUncheckedCreateNestedManyWithoutOrderInput
    payment?: PaymentUncheckedCreateNestedOneWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryUncheckedCreateNestedManyWithoutOrderInput
    invoice?: InvoiceUncheckedCreateNestedOneWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutPhoneInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutPhoneInput, OrderUncheckedCreateWithoutPhoneInput>
  }

  export type OrderCreateManyPhoneInputEnvelope = {
    data: OrderCreateManyPhoneInput | OrderCreateManyPhoneInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutEmailInput = {
    uuid: string
    idPasserelle?: number | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineCreateNestedManyWithoutOrderInput
    deliveryAddress: MediaCreateNestedOneWithoutDeliveryOrderInput
    billingAddress: MediaCreateNestedOneWithoutBillingOrderInput
    phone: MediaCreateNestedOneWithoutPhoneOrderInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryCreateNestedManyWithoutOrderInput
    customer?: CustomerCreateNestedOneWithoutOrdersInput
    invoice?: InvoiceCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutEmailInput = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    phoneUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineUncheckedCreateNestedManyWithoutOrderInput
    payment?: PaymentUncheckedCreateNestedOneWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryUncheckedCreateNestedManyWithoutOrderInput
    invoice?: InvoiceUncheckedCreateNestedOneWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutEmailInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutEmailInput, OrderUncheckedCreateWithoutEmailInput>
  }

  export type OrderCreateManyEmailInputEnvelope = {
    data: OrderCreateManyEmailInput | OrderCreateManyEmailInput[]
    skipDuplicates?: boolean
  }

  export type DeliveryCreateWithoutSenderAddressInput = {
    uuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    method: DeliveryMethodCreateNestedOneWithoutDeliveriesInput
    senderPhone: MediaCreateNestedOneWithoutDeliverySenderPhoneInput
    senderEmail: MediaCreateNestedOneWithoutDeliverySenderEmailInput
    receiverAddress: MediaCreateNestedOneWithoutDeliveryReceiverAddressInput
    receiverPhone: MediaCreateNestedOneWithoutDeliveryReceiverPhoneInput
    receiverEmail: MediaCreateNestedOneWithoutDeliveryReceiverEmailInput
    order: OrderCreateNestedOneWithoutDeliveriesInput
  }

  export type DeliveryUncheckedCreateWithoutSenderAddressInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateOrConnectWithoutSenderAddressInput = {
    where: DeliveryWhereUniqueInput
    create: XOR<DeliveryCreateWithoutSenderAddressInput, DeliveryUncheckedCreateWithoutSenderAddressInput>
  }

  export type DeliveryCreateManySenderAddressInputEnvelope = {
    data: DeliveryCreateManySenderAddressInput | DeliveryCreateManySenderAddressInput[]
    skipDuplicates?: boolean
  }

  export type DeliveryCreateWithoutSenderPhoneInput = {
    uuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    method: DeliveryMethodCreateNestedOneWithoutDeliveriesInput
    senderAddress: MediaCreateNestedOneWithoutDeliverySenderAddressInput
    senderEmail: MediaCreateNestedOneWithoutDeliverySenderEmailInput
    receiverAddress: MediaCreateNestedOneWithoutDeliveryReceiverAddressInput
    receiverPhone: MediaCreateNestedOneWithoutDeliveryReceiverPhoneInput
    receiverEmail: MediaCreateNestedOneWithoutDeliveryReceiverEmailInput
    order: OrderCreateNestedOneWithoutDeliveriesInput
  }

  export type DeliveryUncheckedCreateWithoutSenderPhoneInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateOrConnectWithoutSenderPhoneInput = {
    where: DeliveryWhereUniqueInput
    create: XOR<DeliveryCreateWithoutSenderPhoneInput, DeliveryUncheckedCreateWithoutSenderPhoneInput>
  }

  export type DeliveryCreateManySenderPhoneInputEnvelope = {
    data: DeliveryCreateManySenderPhoneInput | DeliveryCreateManySenderPhoneInput[]
    skipDuplicates?: boolean
  }

  export type DeliveryCreateWithoutSenderEmailInput = {
    uuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    method: DeliveryMethodCreateNestedOneWithoutDeliveriesInput
    senderAddress: MediaCreateNestedOneWithoutDeliverySenderAddressInput
    senderPhone: MediaCreateNestedOneWithoutDeliverySenderPhoneInput
    receiverAddress: MediaCreateNestedOneWithoutDeliveryReceiverAddressInput
    receiverPhone: MediaCreateNestedOneWithoutDeliveryReceiverPhoneInput
    receiverEmail: MediaCreateNestedOneWithoutDeliveryReceiverEmailInput
    order: OrderCreateNestedOneWithoutDeliveriesInput
  }

  export type DeliveryUncheckedCreateWithoutSenderEmailInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderPhoneUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateOrConnectWithoutSenderEmailInput = {
    where: DeliveryWhereUniqueInput
    create: XOR<DeliveryCreateWithoutSenderEmailInput, DeliveryUncheckedCreateWithoutSenderEmailInput>
  }

  export type DeliveryCreateManySenderEmailInputEnvelope = {
    data: DeliveryCreateManySenderEmailInput | DeliveryCreateManySenderEmailInput[]
    skipDuplicates?: boolean
  }

  export type DeliveryCreateWithoutReceiverAddressInput = {
    uuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    method: DeliveryMethodCreateNestedOneWithoutDeliveriesInput
    senderAddress: MediaCreateNestedOneWithoutDeliverySenderAddressInput
    senderPhone: MediaCreateNestedOneWithoutDeliverySenderPhoneInput
    senderEmail: MediaCreateNestedOneWithoutDeliverySenderEmailInput
    receiverPhone: MediaCreateNestedOneWithoutDeliveryReceiverPhoneInput
    receiverEmail: MediaCreateNestedOneWithoutDeliveryReceiverEmailInput
    order: OrderCreateNestedOneWithoutDeliveriesInput
  }

  export type DeliveryUncheckedCreateWithoutReceiverAddressInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateOrConnectWithoutReceiverAddressInput = {
    where: DeliveryWhereUniqueInput
    create: XOR<DeliveryCreateWithoutReceiverAddressInput, DeliveryUncheckedCreateWithoutReceiverAddressInput>
  }

  export type DeliveryCreateManyReceiverAddressInputEnvelope = {
    data: DeliveryCreateManyReceiverAddressInput | DeliveryCreateManyReceiverAddressInput[]
    skipDuplicates?: boolean
  }

  export type DeliveryCreateWithoutReceiverPhoneInput = {
    uuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    method: DeliveryMethodCreateNestedOneWithoutDeliveriesInput
    senderAddress: MediaCreateNestedOneWithoutDeliverySenderAddressInput
    senderPhone: MediaCreateNestedOneWithoutDeliverySenderPhoneInput
    senderEmail: MediaCreateNestedOneWithoutDeliverySenderEmailInput
    receiverAddress: MediaCreateNestedOneWithoutDeliveryReceiverAddressInput
    receiverEmail: MediaCreateNestedOneWithoutDeliveryReceiverEmailInput
    order: OrderCreateNestedOneWithoutDeliveriesInput
  }

  export type DeliveryUncheckedCreateWithoutReceiverPhoneInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateOrConnectWithoutReceiverPhoneInput = {
    where: DeliveryWhereUniqueInput
    create: XOR<DeliveryCreateWithoutReceiverPhoneInput, DeliveryUncheckedCreateWithoutReceiverPhoneInput>
  }

  export type DeliveryCreateManyReceiverPhoneInputEnvelope = {
    data: DeliveryCreateManyReceiverPhoneInput | DeliveryCreateManyReceiverPhoneInput[]
    skipDuplicates?: boolean
  }

  export type DeliveryCreateWithoutReceiverEmailInput = {
    uuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    method: DeliveryMethodCreateNestedOneWithoutDeliveriesInput
    senderAddress: MediaCreateNestedOneWithoutDeliverySenderAddressInput
    senderPhone: MediaCreateNestedOneWithoutDeliverySenderPhoneInput
    senderEmail: MediaCreateNestedOneWithoutDeliverySenderEmailInput
    receiverAddress: MediaCreateNestedOneWithoutDeliveryReceiverAddressInput
    receiverPhone: MediaCreateNestedOneWithoutDeliveryReceiverPhoneInput
    order: OrderCreateNestedOneWithoutDeliveriesInput
  }

  export type DeliveryUncheckedCreateWithoutReceiverEmailInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateOrConnectWithoutReceiverEmailInput = {
    where: DeliveryWhereUniqueInput
    create: XOR<DeliveryCreateWithoutReceiverEmailInput, DeliveryUncheckedCreateWithoutReceiverEmailInput>
  }

  export type DeliveryCreateManyReceiverEmailInputEnvelope = {
    data: DeliveryCreateManyReceiverEmailInput | DeliveryCreateManyReceiverEmailInput[]
    skipDuplicates?: boolean
  }

  export type CustomerCreateWithoutAddressInput = {
    uuid: string
    email: string
    firstname?: string | null
    lastname?: string | null
    phone?: MediaCreateNestedOneWithoutCustomerPhoneInput
    orders?: OrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutAddressInput = {
    uuid: string
    email: string
    phoneUuid?: string | null
    firstname?: string | null
    lastname?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutAddressInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutAddressInput, CustomerUncheckedCreateWithoutAddressInput>
  }

  export type CustomerCreateManyAddressInputEnvelope = {
    data: CustomerCreateManyAddressInput | CustomerCreateManyAddressInput[]
    skipDuplicates?: boolean
  }

  export type CustomerCreateWithoutPhoneInput = {
    uuid: string
    email: string
    firstname?: string | null
    lastname?: string | null
    address?: MediaCreateNestedOneWithoutCustomerAddressInput
    orders?: OrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutPhoneInput = {
    uuid: string
    email: string
    firstname?: string | null
    lastname?: string | null
    addressUuid?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutPhoneInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutPhoneInput, CustomerUncheckedCreateWithoutPhoneInput>
  }

  export type CustomerCreateManyPhoneInputEnvelope = {
    data: CustomerCreateManyPhoneInput | CustomerCreateManyPhoneInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithWhereUniqueWithoutDeliveryAddressInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutDeliveryAddressInput, OrderUncheckedUpdateWithoutDeliveryAddressInput>
    create: XOR<OrderCreateWithoutDeliveryAddressInput, OrderUncheckedCreateWithoutDeliveryAddressInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutDeliveryAddressInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutDeliveryAddressInput, OrderUncheckedUpdateWithoutDeliveryAddressInput>
  }

  export type OrderUpdateManyWithWhereWithoutDeliveryAddressInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutDeliveryAddressInput>
  }

  export type OrderScalarWhereInput = {
    AND?: OrderScalarWhereInput | OrderScalarWhereInput[]
    OR?: OrderScalarWhereInput[]
    NOT?: OrderScalarWhereInput | OrderScalarWhereInput[]
    uuid?: StringFilter<"Order"> | string
    deliveryAddressUuid?: StringFilter<"Order"> | string
    billingAddressUuid?: StringFilter<"Order"> | string
    phoneUuid?: StringFilter<"Order"> | string
    emailUuid?: StringFilter<"Order"> | string
    idPasserelle?: IntNullableFilter<"Order"> | number | null
    customerUuid?: StringNullableFilter<"Order"> | string | null
    customerMessage?: StringNullableFilter<"Order"> | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    createdBy?: StringFilter<"Order"> | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    updatedBy?: StringFilter<"Order"> | string
  }

  export type OrderUpsertWithWhereUniqueWithoutBillingAddressInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutBillingAddressInput, OrderUncheckedUpdateWithoutBillingAddressInput>
    create: XOR<OrderCreateWithoutBillingAddressInput, OrderUncheckedCreateWithoutBillingAddressInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutBillingAddressInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutBillingAddressInput, OrderUncheckedUpdateWithoutBillingAddressInput>
  }

  export type OrderUpdateManyWithWhereWithoutBillingAddressInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutBillingAddressInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutPhoneInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutPhoneInput, OrderUncheckedUpdateWithoutPhoneInput>
    create: XOR<OrderCreateWithoutPhoneInput, OrderUncheckedCreateWithoutPhoneInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutPhoneInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutPhoneInput, OrderUncheckedUpdateWithoutPhoneInput>
  }

  export type OrderUpdateManyWithWhereWithoutPhoneInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutPhoneInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutEmailInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutEmailInput, OrderUncheckedUpdateWithoutEmailInput>
    create: XOR<OrderCreateWithoutEmailInput, OrderUncheckedCreateWithoutEmailInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutEmailInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutEmailInput, OrderUncheckedUpdateWithoutEmailInput>
  }

  export type OrderUpdateManyWithWhereWithoutEmailInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutEmailInput>
  }

  export type DeliveryUpsertWithWhereUniqueWithoutSenderAddressInput = {
    where: DeliveryWhereUniqueInput
    update: XOR<DeliveryUpdateWithoutSenderAddressInput, DeliveryUncheckedUpdateWithoutSenderAddressInput>
    create: XOR<DeliveryCreateWithoutSenderAddressInput, DeliveryUncheckedCreateWithoutSenderAddressInput>
  }

  export type DeliveryUpdateWithWhereUniqueWithoutSenderAddressInput = {
    where: DeliveryWhereUniqueInput
    data: XOR<DeliveryUpdateWithoutSenderAddressInput, DeliveryUncheckedUpdateWithoutSenderAddressInput>
  }

  export type DeliveryUpdateManyWithWhereWithoutSenderAddressInput = {
    where: DeliveryScalarWhereInput
    data: XOR<DeliveryUpdateManyMutationInput, DeliveryUncheckedUpdateManyWithoutSenderAddressInput>
  }

  export type DeliveryUpsertWithWhereUniqueWithoutSenderPhoneInput = {
    where: DeliveryWhereUniqueInput
    update: XOR<DeliveryUpdateWithoutSenderPhoneInput, DeliveryUncheckedUpdateWithoutSenderPhoneInput>
    create: XOR<DeliveryCreateWithoutSenderPhoneInput, DeliveryUncheckedCreateWithoutSenderPhoneInput>
  }

  export type DeliveryUpdateWithWhereUniqueWithoutSenderPhoneInput = {
    where: DeliveryWhereUniqueInput
    data: XOR<DeliveryUpdateWithoutSenderPhoneInput, DeliveryUncheckedUpdateWithoutSenderPhoneInput>
  }

  export type DeliveryUpdateManyWithWhereWithoutSenderPhoneInput = {
    where: DeliveryScalarWhereInput
    data: XOR<DeliveryUpdateManyMutationInput, DeliveryUncheckedUpdateManyWithoutSenderPhoneInput>
  }

  export type DeliveryUpsertWithWhereUniqueWithoutSenderEmailInput = {
    where: DeliveryWhereUniqueInput
    update: XOR<DeliveryUpdateWithoutSenderEmailInput, DeliveryUncheckedUpdateWithoutSenderEmailInput>
    create: XOR<DeliveryCreateWithoutSenderEmailInput, DeliveryUncheckedCreateWithoutSenderEmailInput>
  }

  export type DeliveryUpdateWithWhereUniqueWithoutSenderEmailInput = {
    where: DeliveryWhereUniqueInput
    data: XOR<DeliveryUpdateWithoutSenderEmailInput, DeliveryUncheckedUpdateWithoutSenderEmailInput>
  }

  export type DeliveryUpdateManyWithWhereWithoutSenderEmailInput = {
    where: DeliveryScalarWhereInput
    data: XOR<DeliveryUpdateManyMutationInput, DeliveryUncheckedUpdateManyWithoutSenderEmailInput>
  }

  export type DeliveryUpsertWithWhereUniqueWithoutReceiverAddressInput = {
    where: DeliveryWhereUniqueInput
    update: XOR<DeliveryUpdateWithoutReceiverAddressInput, DeliveryUncheckedUpdateWithoutReceiverAddressInput>
    create: XOR<DeliveryCreateWithoutReceiverAddressInput, DeliveryUncheckedCreateWithoutReceiverAddressInput>
  }

  export type DeliveryUpdateWithWhereUniqueWithoutReceiverAddressInput = {
    where: DeliveryWhereUniqueInput
    data: XOR<DeliveryUpdateWithoutReceiverAddressInput, DeliveryUncheckedUpdateWithoutReceiverAddressInput>
  }

  export type DeliveryUpdateManyWithWhereWithoutReceiverAddressInput = {
    where: DeliveryScalarWhereInput
    data: XOR<DeliveryUpdateManyMutationInput, DeliveryUncheckedUpdateManyWithoutReceiverAddressInput>
  }

  export type DeliveryUpsertWithWhereUniqueWithoutReceiverPhoneInput = {
    where: DeliveryWhereUniqueInput
    update: XOR<DeliveryUpdateWithoutReceiverPhoneInput, DeliveryUncheckedUpdateWithoutReceiverPhoneInput>
    create: XOR<DeliveryCreateWithoutReceiverPhoneInput, DeliveryUncheckedCreateWithoutReceiverPhoneInput>
  }

  export type DeliveryUpdateWithWhereUniqueWithoutReceiverPhoneInput = {
    where: DeliveryWhereUniqueInput
    data: XOR<DeliveryUpdateWithoutReceiverPhoneInput, DeliveryUncheckedUpdateWithoutReceiverPhoneInput>
  }

  export type DeliveryUpdateManyWithWhereWithoutReceiverPhoneInput = {
    where: DeliveryScalarWhereInput
    data: XOR<DeliveryUpdateManyMutationInput, DeliveryUncheckedUpdateManyWithoutReceiverPhoneInput>
  }

  export type DeliveryUpsertWithWhereUniqueWithoutReceiverEmailInput = {
    where: DeliveryWhereUniqueInput
    update: XOR<DeliveryUpdateWithoutReceiverEmailInput, DeliveryUncheckedUpdateWithoutReceiverEmailInput>
    create: XOR<DeliveryCreateWithoutReceiverEmailInput, DeliveryUncheckedCreateWithoutReceiverEmailInput>
  }

  export type DeliveryUpdateWithWhereUniqueWithoutReceiverEmailInput = {
    where: DeliveryWhereUniqueInput
    data: XOR<DeliveryUpdateWithoutReceiverEmailInput, DeliveryUncheckedUpdateWithoutReceiverEmailInput>
  }

  export type DeliveryUpdateManyWithWhereWithoutReceiverEmailInput = {
    where: DeliveryScalarWhereInput
    data: XOR<DeliveryUpdateManyMutationInput, DeliveryUncheckedUpdateManyWithoutReceiverEmailInput>
  }

  export type CustomerUpsertWithWhereUniqueWithoutAddressInput = {
    where: CustomerWhereUniqueInput
    update: XOR<CustomerUpdateWithoutAddressInput, CustomerUncheckedUpdateWithoutAddressInput>
    create: XOR<CustomerCreateWithoutAddressInput, CustomerUncheckedCreateWithoutAddressInput>
  }

  export type CustomerUpdateWithWhereUniqueWithoutAddressInput = {
    where: CustomerWhereUniqueInput
    data: XOR<CustomerUpdateWithoutAddressInput, CustomerUncheckedUpdateWithoutAddressInput>
  }

  export type CustomerUpdateManyWithWhereWithoutAddressInput = {
    where: CustomerScalarWhereInput
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyWithoutAddressInput>
  }

  export type CustomerScalarWhereInput = {
    AND?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
    OR?: CustomerScalarWhereInput[]
    NOT?: CustomerScalarWhereInput | CustomerScalarWhereInput[]
    uuid?: StringFilter<"Customer"> | string
    email?: StringFilter<"Customer"> | string
    phoneUuid?: StringNullableFilter<"Customer"> | string | null
    firstname?: StringNullableFilter<"Customer"> | string | null
    lastname?: StringNullableFilter<"Customer"> | string | null
    addressUuid?: StringNullableFilter<"Customer"> | string | null
  }

  export type CustomerUpsertWithWhereUniqueWithoutPhoneInput = {
    where: CustomerWhereUniqueInput
    update: XOR<CustomerUpdateWithoutPhoneInput, CustomerUncheckedUpdateWithoutPhoneInput>
    create: XOR<CustomerCreateWithoutPhoneInput, CustomerUncheckedCreateWithoutPhoneInput>
  }

  export type CustomerUpdateWithWhereUniqueWithoutPhoneInput = {
    where: CustomerWhereUniqueInput
    data: XOR<CustomerUpdateWithoutPhoneInput, CustomerUncheckedUpdateWithoutPhoneInput>
  }

  export type CustomerUpdateManyWithWhereWithoutPhoneInput = {
    where: CustomerScalarWhereInput
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyWithoutPhoneInput>
  }

  export type OrderLineCreateWithoutOrderInput = {
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    expectedQuantity: number
    preparedQuantity: number
    status: $Enums.OrderLineStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    product: ProductCreateNestedOneWithoutOrderLinesInput
    promotion?: PromotionCreateNestedOneWithoutOrderLinesInput
  }

  export type OrderLineUncheckedCreateWithoutOrderInput = {
    productUuid: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    expectedQuantity: number
    preparedQuantity: number
    promotionUuid?: string | null
    status: $Enums.OrderLineStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type OrderLineCreateOrConnectWithoutOrderInput = {
    where: OrderLineWhereUniqueInput
    create: XOR<OrderLineCreateWithoutOrderInput, OrderLineUncheckedCreateWithoutOrderInput>
  }

  export type OrderLineCreateManyOrderInputEnvelope = {
    data: OrderLineCreateManyOrderInput | OrderLineCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type MediaCreateWithoutDeliveryOrderInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    billingOrder?: OrderCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerCreateNestedManyWithoutPhoneInput
  }

  export type MediaUncheckedCreateWithoutDeliveryOrderInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    billingOrder?: OrderUncheckedCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderUncheckedCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderUncheckedCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryUncheckedCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryUncheckedCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryUncheckedCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryUncheckedCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryUncheckedCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryUncheckedCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerUncheckedCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerUncheckedCreateNestedManyWithoutPhoneInput
  }

  export type MediaCreateOrConnectWithoutDeliveryOrderInput = {
    where: MediaWhereUniqueInput
    create: XOR<MediaCreateWithoutDeliveryOrderInput, MediaUncheckedCreateWithoutDeliveryOrderInput>
  }

  export type MediaCreateWithoutBillingOrderInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderCreateNestedManyWithoutDeliveryAddressInput
    phoneOrder?: OrderCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerCreateNestedManyWithoutPhoneInput
  }

  export type MediaUncheckedCreateWithoutBillingOrderInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderUncheckedCreateNestedManyWithoutDeliveryAddressInput
    phoneOrder?: OrderUncheckedCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderUncheckedCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryUncheckedCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryUncheckedCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryUncheckedCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryUncheckedCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryUncheckedCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryUncheckedCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerUncheckedCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerUncheckedCreateNestedManyWithoutPhoneInput
  }

  export type MediaCreateOrConnectWithoutBillingOrderInput = {
    where: MediaWhereUniqueInput
    create: XOR<MediaCreateWithoutBillingOrderInput, MediaUncheckedCreateWithoutBillingOrderInput>
  }

  export type MediaCreateWithoutPhoneOrderInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderCreateNestedManyWithoutBillingAddressInput
    emailOrder?: OrderCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerCreateNestedManyWithoutPhoneInput
  }

  export type MediaUncheckedCreateWithoutPhoneOrderInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderUncheckedCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderUncheckedCreateNestedManyWithoutBillingAddressInput
    emailOrder?: OrderUncheckedCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryUncheckedCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryUncheckedCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryUncheckedCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryUncheckedCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryUncheckedCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryUncheckedCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerUncheckedCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerUncheckedCreateNestedManyWithoutPhoneInput
  }

  export type MediaCreateOrConnectWithoutPhoneOrderInput = {
    where: MediaWhereUniqueInput
    create: XOR<MediaCreateWithoutPhoneOrderInput, MediaUncheckedCreateWithoutPhoneOrderInput>
  }

  export type MediaCreateWithoutEmailOrderInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderCreateNestedManyWithoutPhoneInput
    deliverySenderAddress?: DeliveryCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerCreateNestedManyWithoutPhoneInput
  }

  export type MediaUncheckedCreateWithoutEmailOrderInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderUncheckedCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderUncheckedCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderUncheckedCreateNestedManyWithoutPhoneInput
    deliverySenderAddress?: DeliveryUncheckedCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryUncheckedCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryUncheckedCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryUncheckedCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryUncheckedCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryUncheckedCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerUncheckedCreateNestedManyWithoutAddressInput
    customerPhone?: CustomerUncheckedCreateNestedManyWithoutPhoneInput
  }

  export type MediaCreateOrConnectWithoutEmailOrderInput = {
    where: MediaWhereUniqueInput
    create: XOR<MediaCreateWithoutEmailOrderInput, MediaUncheckedCreateWithoutEmailOrderInput>
  }

  export type PaymentCreateWithoutOrderInput = {
    uuid: string
    amount: Decimal | DecimalJsLike | number | string
    status: $Enums.PaymentStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type PaymentUncheckedCreateWithoutOrderInput = {
    uuid: string
    amount: Decimal | DecimalJsLike | number | string
    status: $Enums.PaymentStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type PaymentCreateOrConnectWithoutOrderInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput>
  }

  export type MessageCreateWithoutOrderInput = {
    uuid: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MessageType
    status: $Enums.MessageStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type MessageUncheckedCreateWithoutOrderInput = {
    uuid: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MessageType
    status: $Enums.MessageStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type MessageCreateOrConnectWithoutOrderInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutOrderInput, MessageUncheckedCreateWithoutOrderInput>
  }

  export type MessageCreateManyOrderInputEnvelope = {
    data: MessageCreateManyOrderInput | MessageCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type DeliveryCreateWithoutOrderInput = {
    uuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    method: DeliveryMethodCreateNestedOneWithoutDeliveriesInput
    senderAddress: MediaCreateNestedOneWithoutDeliverySenderAddressInput
    senderPhone: MediaCreateNestedOneWithoutDeliverySenderPhoneInput
    senderEmail: MediaCreateNestedOneWithoutDeliverySenderEmailInput
    receiverAddress: MediaCreateNestedOneWithoutDeliveryReceiverAddressInput
    receiverPhone: MediaCreateNestedOneWithoutDeliveryReceiverPhoneInput
    receiverEmail: MediaCreateNestedOneWithoutDeliveryReceiverEmailInput
  }

  export type DeliveryUncheckedCreateWithoutOrderInput = {
    uuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateOrConnectWithoutOrderInput = {
    where: DeliveryWhereUniqueInput
    create: XOR<DeliveryCreateWithoutOrderInput, DeliveryUncheckedCreateWithoutOrderInput>
  }

  export type DeliveryCreateManyOrderInputEnvelope = {
    data: DeliveryCreateManyOrderInput | DeliveryCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type CustomerCreateWithoutOrdersInput = {
    uuid: string
    email: string
    firstname?: string | null
    lastname?: string | null
    phone?: MediaCreateNestedOneWithoutCustomerPhoneInput
    address?: MediaCreateNestedOneWithoutCustomerAddressInput
  }

  export type CustomerUncheckedCreateWithoutOrdersInput = {
    uuid: string
    email: string
    phoneUuid?: string | null
    firstname?: string | null
    lastname?: string | null
    addressUuid?: string | null
  }

  export type CustomerCreateOrConnectWithoutOrdersInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutOrdersInput, CustomerUncheckedCreateWithoutOrdersInput>
  }

  export type InvoiceCreateWithoutOrderInput = {
    invoiceNumber: string
    data: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    createdBy: string
  }

  export type InvoiceUncheckedCreateWithoutOrderInput = {
    invoiceNumber: string
    data: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    createdBy: string
  }

  export type InvoiceCreateOrConnectWithoutOrderInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutOrderInput, InvoiceUncheckedCreateWithoutOrderInput>
  }

  export type OrderLineUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderLineWhereUniqueInput
    update: XOR<OrderLineUpdateWithoutOrderInput, OrderLineUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderLineCreateWithoutOrderInput, OrderLineUncheckedCreateWithoutOrderInput>
  }

  export type OrderLineUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderLineWhereUniqueInput
    data: XOR<OrderLineUpdateWithoutOrderInput, OrderLineUncheckedUpdateWithoutOrderInput>
  }

  export type OrderLineUpdateManyWithWhereWithoutOrderInput = {
    where: OrderLineScalarWhereInput
    data: XOR<OrderLineUpdateManyMutationInput, OrderLineUncheckedUpdateManyWithoutOrderInput>
  }

  export type MediaUpsertWithoutDeliveryOrderInput = {
    update: XOR<MediaUpdateWithoutDeliveryOrderInput, MediaUncheckedUpdateWithoutDeliveryOrderInput>
    create: XOR<MediaCreateWithoutDeliveryOrderInput, MediaUncheckedCreateWithoutDeliveryOrderInput>
    where?: MediaWhereInput
  }

  export type MediaUpdateToOneWithWhereWithoutDeliveryOrderInput = {
    where?: MediaWhereInput
    data: XOR<MediaUpdateWithoutDeliveryOrderInput, MediaUncheckedUpdateWithoutDeliveryOrderInput>
  }

  export type MediaUpdateWithoutDeliveryOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    billingOrder?: OrderUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUncheckedUpdateWithoutDeliveryOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    billingOrder?: OrderUncheckedUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUncheckedUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUncheckedUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUncheckedUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUncheckedUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUncheckedUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUncheckedUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUncheckedUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUncheckedUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUncheckedUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUncheckedUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUpsertWithoutBillingOrderInput = {
    update: XOR<MediaUpdateWithoutBillingOrderInput, MediaUncheckedUpdateWithoutBillingOrderInput>
    create: XOR<MediaCreateWithoutBillingOrderInput, MediaUncheckedCreateWithoutBillingOrderInput>
    where?: MediaWhereInput
  }

  export type MediaUpdateToOneWithWhereWithoutBillingOrderInput = {
    where?: MediaWhereInput
    data: XOR<MediaUpdateWithoutBillingOrderInput, MediaUncheckedUpdateWithoutBillingOrderInput>
  }

  export type MediaUpdateWithoutBillingOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUpdateManyWithoutDeliveryAddressNestedInput
    phoneOrder?: OrderUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUncheckedUpdateWithoutBillingOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    phoneOrder?: OrderUncheckedUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUncheckedUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUncheckedUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUncheckedUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUncheckedUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUncheckedUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUncheckedUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUncheckedUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUncheckedUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUncheckedUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUpsertWithoutPhoneOrderInput = {
    update: XOR<MediaUpdateWithoutPhoneOrderInput, MediaUncheckedUpdateWithoutPhoneOrderInput>
    create: XOR<MediaCreateWithoutPhoneOrderInput, MediaUncheckedCreateWithoutPhoneOrderInput>
    where?: MediaWhereInput
  }

  export type MediaUpdateToOneWithWhereWithoutPhoneOrderInput = {
    where?: MediaWhereInput
    data: XOR<MediaUpdateWithoutPhoneOrderInput, MediaUncheckedUpdateWithoutPhoneOrderInput>
  }

  export type MediaUpdateWithoutPhoneOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUpdateManyWithoutBillingAddressNestedInput
    emailOrder?: OrderUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUncheckedUpdateWithoutPhoneOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUncheckedUpdateManyWithoutBillingAddressNestedInput
    emailOrder?: OrderUncheckedUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUncheckedUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUncheckedUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUncheckedUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUncheckedUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUncheckedUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUncheckedUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUncheckedUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUncheckedUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUpsertWithoutEmailOrderInput = {
    update: XOR<MediaUpdateWithoutEmailOrderInput, MediaUncheckedUpdateWithoutEmailOrderInput>
    create: XOR<MediaCreateWithoutEmailOrderInput, MediaUncheckedCreateWithoutEmailOrderInput>
    where?: MediaWhereInput
  }

  export type MediaUpdateToOneWithWhereWithoutEmailOrderInput = {
    where?: MediaWhereInput
    data: XOR<MediaUpdateWithoutEmailOrderInput, MediaUncheckedUpdateWithoutEmailOrderInput>
  }

  export type MediaUpdateWithoutEmailOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUpdateManyWithoutPhoneNestedInput
    deliverySenderAddress?: DeliveryUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUncheckedUpdateWithoutEmailOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUncheckedUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUncheckedUpdateManyWithoutPhoneNestedInput
    deliverySenderAddress?: DeliveryUncheckedUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUncheckedUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUncheckedUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUncheckedUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUncheckedUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUncheckedUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUncheckedUpdateManyWithoutAddressNestedInput
    customerPhone?: CustomerUncheckedUpdateManyWithoutPhoneNestedInput
  }

  export type PaymentUpsertWithoutOrderInput = {
    update: XOR<PaymentUpdateWithoutOrderInput, PaymentUncheckedUpdateWithoutOrderInput>
    create: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput>
    where?: PaymentWhereInput
  }

  export type PaymentUpdateToOneWithWhereWithoutOrderInput = {
    where?: PaymentWhereInput
    data: XOR<PaymentUpdateWithoutOrderInput, PaymentUncheckedUpdateWithoutOrderInput>
  }

  export type PaymentUpdateWithoutOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentUncheckedUpdateWithoutOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type MessageUpsertWithWhereUniqueWithoutOrderInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutOrderInput, MessageUncheckedUpdateWithoutOrderInput>
    create: XOR<MessageCreateWithoutOrderInput, MessageUncheckedCreateWithoutOrderInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutOrderInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutOrderInput, MessageUncheckedUpdateWithoutOrderInput>
  }

  export type MessageUpdateManyWithWhereWithoutOrderInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutOrderInput>
  }

  export type MessageScalarWhereInput = {
    AND?: MessageScalarWhereInput | MessageScalarWhereInput[]
    OR?: MessageScalarWhereInput[]
    NOT?: MessageScalarWhereInput | MessageScalarWhereInput[]
    uuid?: StringFilter<"Message"> | string
    data?: JsonFilter<"Message">
    type?: EnumMessageTypeFilter<"Message"> | $Enums.MessageType
    status?: EnumMessageStatusFilter<"Message"> | $Enums.MessageStatus
    orderUuid?: StringNullableFilter<"Message"> | string | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    createdBy?: StringFilter<"Message"> | string
    updatedAt?: DateTimeFilter<"Message"> | Date | string
    updatedBy?: StringFilter<"Message"> | string
  }

  export type DeliveryUpsertWithWhereUniqueWithoutOrderInput = {
    where: DeliveryWhereUniqueInput
    update: XOR<DeliveryUpdateWithoutOrderInput, DeliveryUncheckedUpdateWithoutOrderInput>
    create: XOR<DeliveryCreateWithoutOrderInput, DeliveryUncheckedCreateWithoutOrderInput>
  }

  export type DeliveryUpdateWithWhereUniqueWithoutOrderInput = {
    where: DeliveryWhereUniqueInput
    data: XOR<DeliveryUpdateWithoutOrderInput, DeliveryUncheckedUpdateWithoutOrderInput>
  }

  export type DeliveryUpdateManyWithWhereWithoutOrderInput = {
    where: DeliveryScalarWhereInput
    data: XOR<DeliveryUpdateManyMutationInput, DeliveryUncheckedUpdateManyWithoutOrderInput>
  }

  export type CustomerUpsertWithoutOrdersInput = {
    update: XOR<CustomerUpdateWithoutOrdersInput, CustomerUncheckedUpdateWithoutOrdersInput>
    create: XOR<CustomerCreateWithoutOrdersInput, CustomerUncheckedCreateWithoutOrdersInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutOrdersInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutOrdersInput, CustomerUncheckedUpdateWithoutOrdersInput>
  }

  export type CustomerUpdateWithoutOrdersInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: MediaUpdateOneWithoutCustomerPhoneNestedInput
    address?: MediaUpdateOneWithoutCustomerAddressNestedInput
  }

  export type CustomerUncheckedUpdateWithoutOrdersInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phoneUuid?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    addressUuid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvoiceUpsertWithoutOrderInput = {
    update: XOR<InvoiceUpdateWithoutOrderInput, InvoiceUncheckedUpdateWithoutOrderInput>
    create: XOR<InvoiceCreateWithoutOrderInput, InvoiceUncheckedCreateWithoutOrderInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutOrderInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutOrderInput, InvoiceUncheckedUpdateWithoutOrderInput>
  }

  export type InvoiceUpdateWithoutOrderInput = {
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type InvoiceUncheckedUpdateWithoutOrderInput = {
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductCreateWithoutLaboratoryInput = {
    uuid: string
    availableStock: number
    name: string
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionCreateNestedManyWithoutProductInput
    orderLines?: OrderLineCreateNestedManyWithoutProductInput
    images?: ProductImageCreateNestedManyWithoutProductInput
    miniature?: ImageCreateNestedOneWithoutProductMiniatureInput
    categories?: ProductCategoryCreateNestedManyWithoutProductInput
    locations?: ProductLocationCreateNestedManyWithoutProductInput
    notice?: NoticeCreateNestedOneWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutLaboratoryInput = {
    uuid: string
    availableStock: number
    name: string
    miniatureHash?: string | null
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    promotions?: ProductPromotionUncheckedCreateNestedManyWithoutProductInput
    orderLines?: OrderLineUncheckedCreateNestedManyWithoutProductInput
    images?: ProductImageUncheckedCreateNestedManyWithoutProductInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductInput
    locations?: ProductLocationUncheckedCreateNestedManyWithoutProductInput
    notice?: NoticeUncheckedCreateNestedOneWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutLaboratoryInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutLaboratoryInput, ProductUncheckedCreateWithoutLaboratoryInput>
  }

  export type ProductCreateManyLaboratoryInputEnvelope = {
    data: ProductCreateManyLaboratoryInput | ProductCreateManyLaboratoryInput[]
    skipDuplicates?: boolean
  }

  export type ImageCreateWithoutLaboratoryImageInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryCreateNestedManyWithoutImageInput
    categoryMiniature?: CategoryCreateNestedManyWithoutMiniatureInput
    productImage?: ProductImageCreateNestedManyWithoutImageInput
    productMiniature?: ProductCreateNestedManyWithoutMiniatureInput
    laboratoryMiniature?: LaboratoryCreateNestedManyWithoutMiniatureInput
    bannerImage?: BannerCreateNestedManyWithoutImageInput
  }

  export type ImageUncheckedCreateWithoutLaboratoryImageInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryUncheckedCreateNestedManyWithoutImageInput
    categoryMiniature?: CategoryUncheckedCreateNestedManyWithoutMiniatureInput
    productImage?: ProductImageUncheckedCreateNestedManyWithoutImageInput
    productMiniature?: ProductUncheckedCreateNestedManyWithoutMiniatureInput
    laboratoryMiniature?: LaboratoryUncheckedCreateNestedManyWithoutMiniatureInput
    bannerImage?: BannerUncheckedCreateNestedManyWithoutImageInput
  }

  export type ImageCreateOrConnectWithoutLaboratoryImageInput = {
    where: ImageWhereUniqueInput
    create: XOR<ImageCreateWithoutLaboratoryImageInput, ImageUncheckedCreateWithoutLaboratoryImageInput>
  }

  export type ImageCreateWithoutLaboratoryMiniatureInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryCreateNestedManyWithoutImageInput
    categoryMiniature?: CategoryCreateNestedManyWithoutMiniatureInput
    productImage?: ProductImageCreateNestedManyWithoutImageInput
    productMiniature?: ProductCreateNestedManyWithoutMiniatureInput
    laboratoryImage?: LaboratoryCreateNestedManyWithoutImageInput
    bannerImage?: BannerCreateNestedManyWithoutImageInput
  }

  export type ImageUncheckedCreateWithoutLaboratoryMiniatureInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryUncheckedCreateNestedManyWithoutImageInput
    categoryMiniature?: CategoryUncheckedCreateNestedManyWithoutMiniatureInput
    productImage?: ProductImageUncheckedCreateNestedManyWithoutImageInput
    productMiniature?: ProductUncheckedCreateNestedManyWithoutMiniatureInput
    laboratoryImage?: LaboratoryUncheckedCreateNestedManyWithoutImageInput
    bannerImage?: BannerUncheckedCreateNestedManyWithoutImageInput
  }

  export type ImageCreateOrConnectWithoutLaboratoryMiniatureInput = {
    where: ImageWhereUniqueInput
    create: XOR<ImageCreateWithoutLaboratoryMiniatureInput, ImageUncheckedCreateWithoutLaboratoryMiniatureInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutLaboratoryInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutLaboratoryInput, ProductUncheckedUpdateWithoutLaboratoryInput>
    create: XOR<ProductCreateWithoutLaboratoryInput, ProductUncheckedCreateWithoutLaboratoryInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutLaboratoryInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutLaboratoryInput, ProductUncheckedUpdateWithoutLaboratoryInput>
  }

  export type ProductUpdateManyWithWhereWithoutLaboratoryInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutLaboratoryInput>
  }

  export type ImageUpsertWithoutLaboratoryImageInput = {
    update: XOR<ImageUpdateWithoutLaboratoryImageInput, ImageUncheckedUpdateWithoutLaboratoryImageInput>
    create: XOR<ImageCreateWithoutLaboratoryImageInput, ImageUncheckedCreateWithoutLaboratoryImageInput>
    where?: ImageWhereInput
  }

  export type ImageUpdateToOneWithWhereWithoutLaboratoryImageInput = {
    where?: ImageWhereInput
    data: XOR<ImageUpdateWithoutLaboratoryImageInput, ImageUncheckedUpdateWithoutLaboratoryImageInput>
  }

  export type ImageUpdateWithoutLaboratoryImageInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUpdateManyWithoutImageNestedInput
    categoryMiniature?: CategoryUpdateManyWithoutMiniatureNestedInput
    productImage?: ProductImageUpdateManyWithoutImageNestedInput
    productMiniature?: ProductUpdateManyWithoutMiniatureNestedInput
    laboratoryMiniature?: LaboratoryUpdateManyWithoutMiniatureNestedInput
    bannerImage?: BannerUpdateManyWithoutImageNestedInput
  }

  export type ImageUncheckedUpdateWithoutLaboratoryImageInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUncheckedUpdateManyWithoutImageNestedInput
    categoryMiniature?: CategoryUncheckedUpdateManyWithoutMiniatureNestedInput
    productImage?: ProductImageUncheckedUpdateManyWithoutImageNestedInput
    productMiniature?: ProductUncheckedUpdateManyWithoutMiniatureNestedInput
    laboratoryMiniature?: LaboratoryUncheckedUpdateManyWithoutMiniatureNestedInput
    bannerImage?: BannerUncheckedUpdateManyWithoutImageNestedInput
  }

  export type ImageUpsertWithoutLaboratoryMiniatureInput = {
    update: XOR<ImageUpdateWithoutLaboratoryMiniatureInput, ImageUncheckedUpdateWithoutLaboratoryMiniatureInput>
    create: XOR<ImageCreateWithoutLaboratoryMiniatureInput, ImageUncheckedCreateWithoutLaboratoryMiniatureInput>
    where?: ImageWhereInput
  }

  export type ImageUpdateToOneWithWhereWithoutLaboratoryMiniatureInput = {
    where?: ImageWhereInput
    data: XOR<ImageUpdateWithoutLaboratoryMiniatureInput, ImageUncheckedUpdateWithoutLaboratoryMiniatureInput>
  }

  export type ImageUpdateWithoutLaboratoryMiniatureInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUpdateManyWithoutImageNestedInput
    categoryMiniature?: CategoryUpdateManyWithoutMiniatureNestedInput
    productImage?: ProductImageUpdateManyWithoutImageNestedInput
    productMiniature?: ProductUpdateManyWithoutMiniatureNestedInput
    laboratoryImage?: LaboratoryUpdateManyWithoutImageNestedInput
    bannerImage?: BannerUpdateManyWithoutImageNestedInput
  }

  export type ImageUncheckedUpdateWithoutLaboratoryMiniatureInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUncheckedUpdateManyWithoutImageNestedInput
    categoryMiniature?: CategoryUncheckedUpdateManyWithoutMiniatureNestedInput
    productImage?: ProductImageUncheckedUpdateManyWithoutImageNestedInput
    productMiniature?: ProductUncheckedUpdateManyWithoutMiniatureNestedInput
    laboratoryImage?: LaboratoryUncheckedUpdateManyWithoutImageNestedInput
    bannerImage?: BannerUncheckedUpdateManyWithoutImageNestedInput
  }

  export type OrderCreateWithoutMessagesInput = {
    uuid: string
    idPasserelle?: number | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineCreateNestedManyWithoutOrderInput
    deliveryAddress: MediaCreateNestedOneWithoutDeliveryOrderInput
    billingAddress: MediaCreateNestedOneWithoutBillingOrderInput
    phone: MediaCreateNestedOneWithoutPhoneOrderInput
    email: MediaCreateNestedOneWithoutEmailOrderInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    deliveries?: DeliveryCreateNestedManyWithoutOrderInput
    customer?: CustomerCreateNestedOneWithoutOrdersInput
    invoice?: InvoiceCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutMessagesInput = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineUncheckedCreateNestedManyWithoutOrderInput
    payment?: PaymentUncheckedCreateNestedOneWithoutOrderInput
    deliveries?: DeliveryUncheckedCreateNestedManyWithoutOrderInput
    invoice?: InvoiceUncheckedCreateNestedOneWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutMessagesInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutMessagesInput, OrderUncheckedCreateWithoutMessagesInput>
  }

  export type OrderUpsertWithoutMessagesInput = {
    update: XOR<OrderUpdateWithoutMessagesInput, OrderUncheckedUpdateWithoutMessagesInput>
    create: XOR<OrderCreateWithoutMessagesInput, OrderUncheckedCreateWithoutMessagesInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutMessagesInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutMessagesInput, OrderUncheckedUpdateWithoutMessagesInput>
  }

  export type OrderUpdateWithoutMessagesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUpdateManyWithoutOrderNestedInput
    deliveryAddress?: MediaUpdateOneRequiredWithoutDeliveryOrderNestedInput
    billingAddress?: MediaUpdateOneRequiredWithoutBillingOrderNestedInput
    phone?: MediaUpdateOneRequiredWithoutPhoneOrderNestedInput
    email?: MediaUpdateOneRequiredWithoutEmailOrderNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    deliveries?: DeliveryUpdateManyWithoutOrderNestedInput
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
    invoice?: InvoiceUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutMessagesInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUncheckedUpdateManyWithoutOrderNestedInput
    payment?: PaymentUncheckedUpdateOneWithoutOrderNestedInput
    deliveries?: DeliveryUncheckedUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUncheckedUpdateOneWithoutOrderNestedInput
  }

  export type MediaCreateWithoutCustomerPhoneInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerCreateNestedManyWithoutAddressInput
  }

  export type MediaUncheckedCreateWithoutCustomerPhoneInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderUncheckedCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderUncheckedCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderUncheckedCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderUncheckedCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryUncheckedCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryUncheckedCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryUncheckedCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryUncheckedCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryUncheckedCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryUncheckedCreateNestedManyWithoutReceiverEmailInput
    customerAddress?: CustomerUncheckedCreateNestedManyWithoutAddressInput
  }

  export type MediaCreateOrConnectWithoutCustomerPhoneInput = {
    where: MediaWhereUniqueInput
    create: XOR<MediaCreateWithoutCustomerPhoneInput, MediaUncheckedCreateWithoutCustomerPhoneInput>
  }

  export type MediaCreateWithoutCustomerAddressInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryCreateNestedManyWithoutReceiverEmailInput
    customerPhone?: CustomerCreateNestedManyWithoutPhoneInput
  }

  export type MediaUncheckedCreateWithoutCustomerAddressInput = {
    uuid?: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MediaType
    name?: string | null
    deliveryOrder?: OrderUncheckedCreateNestedManyWithoutDeliveryAddressInput
    billingOrder?: OrderUncheckedCreateNestedManyWithoutBillingAddressInput
    phoneOrder?: OrderUncheckedCreateNestedManyWithoutPhoneInput
    emailOrder?: OrderUncheckedCreateNestedManyWithoutEmailInput
    deliverySenderAddress?: DeliveryUncheckedCreateNestedManyWithoutSenderAddressInput
    deliverySenderPhone?: DeliveryUncheckedCreateNestedManyWithoutSenderPhoneInput
    deliverySenderEmail?: DeliveryUncheckedCreateNestedManyWithoutSenderEmailInput
    deliveryReceiverAddress?: DeliveryUncheckedCreateNestedManyWithoutReceiverAddressInput
    deliveryReceiverPhone?: DeliveryUncheckedCreateNestedManyWithoutReceiverPhoneInput
    deliveryReceiverEmail?: DeliveryUncheckedCreateNestedManyWithoutReceiverEmailInput
    customerPhone?: CustomerUncheckedCreateNestedManyWithoutPhoneInput
  }

  export type MediaCreateOrConnectWithoutCustomerAddressInput = {
    where: MediaWhereUniqueInput
    create: XOR<MediaCreateWithoutCustomerAddressInput, MediaUncheckedCreateWithoutCustomerAddressInput>
  }

  export type OrderCreateWithoutCustomerInput = {
    uuid: string
    idPasserelle?: number | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineCreateNestedManyWithoutOrderInput
    deliveryAddress: MediaCreateNestedOneWithoutDeliveryOrderInput
    billingAddress: MediaCreateNestedOneWithoutBillingOrderInput
    phone: MediaCreateNestedOneWithoutPhoneOrderInput
    email: MediaCreateNestedOneWithoutEmailOrderInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryCreateNestedManyWithoutOrderInput
    invoice?: InvoiceCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutCustomerInput = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineUncheckedCreateNestedManyWithoutOrderInput
    payment?: PaymentUncheckedCreateNestedOneWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryUncheckedCreateNestedManyWithoutOrderInput
    invoice?: InvoiceUncheckedCreateNestedOneWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderCreateManyCustomerInputEnvelope = {
    data: OrderCreateManyCustomerInput | OrderCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type MediaUpsertWithoutCustomerPhoneInput = {
    update: XOR<MediaUpdateWithoutCustomerPhoneInput, MediaUncheckedUpdateWithoutCustomerPhoneInput>
    create: XOR<MediaCreateWithoutCustomerPhoneInput, MediaUncheckedCreateWithoutCustomerPhoneInput>
    where?: MediaWhereInput
  }

  export type MediaUpdateToOneWithWhereWithoutCustomerPhoneInput = {
    where?: MediaWhereInput
    data: XOR<MediaUpdateWithoutCustomerPhoneInput, MediaUncheckedUpdateWithoutCustomerPhoneInput>
  }

  export type MediaUpdateWithoutCustomerPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUpdateManyWithoutAddressNestedInput
  }

  export type MediaUncheckedUpdateWithoutCustomerPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUncheckedUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUncheckedUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUncheckedUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUncheckedUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUncheckedUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUncheckedUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUncheckedUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUncheckedUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUncheckedUpdateManyWithoutReceiverEmailNestedInput
    customerAddress?: CustomerUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type MediaUpsertWithoutCustomerAddressInput = {
    update: XOR<MediaUpdateWithoutCustomerAddressInput, MediaUncheckedUpdateWithoutCustomerAddressInput>
    create: XOR<MediaCreateWithoutCustomerAddressInput, MediaUncheckedCreateWithoutCustomerAddressInput>
    where?: MediaWhereInput
  }

  export type MediaUpdateToOneWithWhereWithoutCustomerAddressInput = {
    where?: MediaWhereInput
    data: XOR<MediaUpdateWithoutCustomerAddressInput, MediaUncheckedUpdateWithoutCustomerAddressInput>
  }

  export type MediaUpdateWithoutCustomerAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUpdateManyWithoutReceiverEmailNestedInput
    customerPhone?: CustomerUpdateManyWithoutPhoneNestedInput
  }

  export type MediaUncheckedUpdateWithoutCustomerAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMediaTypeFieldUpdateOperationsInput | $Enums.MediaType
    name?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryOrder?: OrderUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    billingOrder?: OrderUncheckedUpdateManyWithoutBillingAddressNestedInput
    phoneOrder?: OrderUncheckedUpdateManyWithoutPhoneNestedInput
    emailOrder?: OrderUncheckedUpdateManyWithoutEmailNestedInput
    deliverySenderAddress?: DeliveryUncheckedUpdateManyWithoutSenderAddressNestedInput
    deliverySenderPhone?: DeliveryUncheckedUpdateManyWithoutSenderPhoneNestedInput
    deliverySenderEmail?: DeliveryUncheckedUpdateManyWithoutSenderEmailNestedInput
    deliveryReceiverAddress?: DeliveryUncheckedUpdateManyWithoutReceiverAddressNestedInput
    deliveryReceiverPhone?: DeliveryUncheckedUpdateManyWithoutReceiverPhoneNestedInput
    deliveryReceiverEmail?: DeliveryUncheckedUpdateManyWithoutReceiverEmailNestedInput
    customerPhone?: CustomerUncheckedUpdateManyWithoutPhoneNestedInput
  }

  export type OrderUpsertWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
  }

  export type OrderUpdateManyWithWhereWithoutCustomerInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutCustomerInput>
  }

  export type OrderCreateWithoutInvoiceInput = {
    uuid: string
    idPasserelle?: number | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineCreateNestedManyWithoutOrderInput
    deliveryAddress: MediaCreateNestedOneWithoutDeliveryOrderInput
    billingAddress: MediaCreateNestedOneWithoutBillingOrderInput
    phone: MediaCreateNestedOneWithoutPhoneOrderInput
    email: MediaCreateNestedOneWithoutEmailOrderInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    messages?: MessageCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryCreateNestedManyWithoutOrderInput
    customer?: CustomerCreateNestedOneWithoutOrdersInput
  }

  export type OrderUncheckedCreateWithoutInvoiceInput = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    lines?: OrderLineUncheckedCreateNestedManyWithoutOrderInput
    payment?: PaymentUncheckedCreateNestedOneWithoutOrderInput
    messages?: MessageUncheckedCreateNestedManyWithoutOrderInput
    deliveries?: DeliveryUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutInvoiceInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput>
  }

  export type OrderUpsertWithoutInvoiceInput = {
    update: XOR<OrderUpdateWithoutInvoiceInput, OrderUncheckedUpdateWithoutInvoiceInput>
    create: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutInvoiceInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutInvoiceInput, OrderUncheckedUpdateWithoutInvoiceInput>
  }

  export type OrderUpdateWithoutInvoiceInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUpdateManyWithoutOrderNestedInput
    deliveryAddress?: MediaUpdateOneRequiredWithoutDeliveryOrderNestedInput
    billingAddress?: MediaUpdateOneRequiredWithoutBillingOrderNestedInput
    phone?: MediaUpdateOneRequiredWithoutPhoneOrderNestedInput
    email?: MediaUpdateOneRequiredWithoutEmailOrderNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUpdateManyWithoutOrderNestedInput
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
  }

  export type OrderUncheckedUpdateWithoutInvoiceInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUncheckedUpdateManyWithoutOrderNestedInput
    payment?: PaymentUncheckedUpdateOneWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ImageCreateWithoutBannerImageInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryCreateNestedManyWithoutImageInput
    categoryMiniature?: CategoryCreateNestedManyWithoutMiniatureInput
    productImage?: ProductImageCreateNestedManyWithoutImageInput
    productMiniature?: ProductCreateNestedManyWithoutMiniatureInput
    laboratoryImage?: LaboratoryCreateNestedManyWithoutImageInput
    laboratoryMiniature?: LaboratoryCreateNestedManyWithoutMiniatureInput
  }

  export type ImageUncheckedCreateWithoutBannerImageInput = {
    hash: string
    name: string
    url: string
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
    categoryImage?: CategoryUncheckedCreateNestedManyWithoutImageInput
    categoryMiniature?: CategoryUncheckedCreateNestedManyWithoutMiniatureInput
    productImage?: ProductImageUncheckedCreateNestedManyWithoutImageInput
    productMiniature?: ProductUncheckedCreateNestedManyWithoutMiniatureInput
    laboratoryImage?: LaboratoryUncheckedCreateNestedManyWithoutImageInput
    laboratoryMiniature?: LaboratoryUncheckedCreateNestedManyWithoutMiniatureInput
  }

  export type ImageCreateOrConnectWithoutBannerImageInput = {
    where: ImageWhereUniqueInput
    create: XOR<ImageCreateWithoutBannerImageInput, ImageUncheckedCreateWithoutBannerImageInput>
  }

  export type ImageUpsertWithoutBannerImageInput = {
    update: XOR<ImageUpdateWithoutBannerImageInput, ImageUncheckedUpdateWithoutBannerImageInput>
    create: XOR<ImageCreateWithoutBannerImageInput, ImageUncheckedCreateWithoutBannerImageInput>
    where?: ImageWhereInput
  }

  export type ImageUpdateToOneWithWhereWithoutBannerImageInput = {
    where?: ImageWhereInput
    data: XOR<ImageUpdateWithoutBannerImageInput, ImageUncheckedUpdateWithoutBannerImageInput>
  }

  export type ImageUpdateWithoutBannerImageInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUpdateManyWithoutImageNestedInput
    categoryMiniature?: CategoryUpdateManyWithoutMiniatureNestedInput
    productImage?: ProductImageUpdateManyWithoutImageNestedInput
    productMiniature?: ProductUpdateManyWithoutMiniatureNestedInput
    laboratoryImage?: LaboratoryUpdateManyWithoutImageNestedInput
    laboratoryMiniature?: LaboratoryUpdateManyWithoutMiniatureNestedInput
  }

  export type ImageUncheckedUpdateWithoutBannerImageInput = {
    hash?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    categoryImage?: CategoryUncheckedUpdateManyWithoutImageNestedInput
    categoryMiniature?: CategoryUncheckedUpdateManyWithoutMiniatureNestedInput
    productImage?: ProductImageUncheckedUpdateManyWithoutImageNestedInput
    productMiniature?: ProductUncheckedUpdateManyWithoutMiniatureNestedInput
    laboratoryImage?: LaboratoryUncheckedUpdateManyWithoutImageNestedInput
    laboratoryMiniature?: LaboratoryUncheckedUpdateManyWithoutMiniatureNestedInput
  }

  export type ProductPromotionCreateManyProductInput = {
    promotionUuid: string
  }

  export type OrderLineCreateManyProductInput = {
    orderUuid: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    expectedQuantity: number
    preparedQuantity: number
    promotionUuid?: string | null
    status: $Enums.OrderLineStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type ProductImageCreateManyProductInput = {
    imageHash: string
  }

  export type ProductCategoryCreateManyProductInput = {
    categoryUuid: string
  }

  export type ProductLocationCreateManyProductInput = {
    locationUuid: string
    value: string
  }

  export type ProductPromotionUpdateWithoutProductInput = {
    promotion?: PromotionUpdateOneRequiredWithoutProductsNestedInput
  }

  export type ProductPromotionUncheckedUpdateWithoutProductInput = {
    promotionUuid?: StringFieldUpdateOperationsInput | string
  }

  export type ProductPromotionUncheckedUpdateManyWithoutProductInput = {
    promotionUuid?: StringFieldUpdateOperationsInput | string
  }

  export type OrderLineUpdateWithoutProductInput = {
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFieldUpdateOperationsInput | number
    preparedQuantity?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderLineStatusFieldUpdateOperationsInput | $Enums.OrderLineStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    order?: OrderUpdateOneRequiredWithoutLinesNestedInput
    promotion?: PromotionUpdateOneWithoutOrderLinesNestedInput
  }

  export type OrderLineUncheckedUpdateWithoutProductInput = {
    orderUuid?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFieldUpdateOperationsInput | number
    preparedQuantity?: IntFieldUpdateOperationsInput | number
    promotionUuid?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderLineStatusFieldUpdateOperationsInput | $Enums.OrderLineStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderLineUncheckedUpdateManyWithoutProductInput = {
    orderUuid?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFieldUpdateOperationsInput | number
    preparedQuantity?: IntFieldUpdateOperationsInput | number
    promotionUuid?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderLineStatusFieldUpdateOperationsInput | $Enums.OrderLineStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductImageUpdateWithoutProductInput = {
    image?: ImageUpdateOneRequiredWithoutProductImageNestedInput
  }

  export type ProductImageUncheckedUpdateWithoutProductInput = {
    imageHash?: StringFieldUpdateOperationsInput | string
  }

  export type ProductImageUncheckedUpdateManyWithoutProductInput = {
    imageHash?: StringFieldUpdateOperationsInput | string
  }

  export type ProductCategoryUpdateWithoutProductInput = {
    category?: CategoryUpdateOneRequiredWithoutProductCategoryNestedInput
  }

  export type ProductCategoryUncheckedUpdateWithoutProductInput = {
    categoryUuid?: StringFieldUpdateOperationsInput | string
  }

  export type ProductCategoryUncheckedUpdateManyWithoutProductInput = {
    categoryUuid?: StringFieldUpdateOperationsInput | string
  }

  export type ProductLocationUpdateWithoutProductInput = {
    value?: StringFieldUpdateOperationsInput | string
    location?: LocationUpdateOneRequiredWithoutProductLocationNestedInput
  }

  export type ProductLocationUncheckedUpdateWithoutProductInput = {
    locationUuid?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type ProductLocationUncheckedUpdateManyWithoutProductInput = {
    locationUuid?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type ProductLocationCreateManyLocationInput = {
    productUuid: string
    value: string
  }

  export type ProductLocationUpdateWithoutLocationInput = {
    value?: StringFieldUpdateOperationsInput | string
    product?: ProductUpdateOneRequiredWithoutLocationsNestedInput
  }

  export type ProductLocationUncheckedUpdateWithoutLocationInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type ProductLocationUncheckedUpdateManyWithoutLocationInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type CategoryCreateManyImageInput = {
    uuid: string
    name: string
    description?: string | null
    parentUuid?: string | null
    miniatureHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type CategoryCreateManyMiniatureInput = {
    uuid: string
    name: string
    description?: string | null
    parentUuid?: string | null
    imageHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type ProductImageCreateManyImageInput = {
    productUuid: string
  }

  export type ProductCreateManyMiniatureInput = {
    uuid: string
    availableStock: number
    name: string
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    laboratoryUuid?: string | null
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type LaboratoryCreateManyImageInput = {
    uuid: string
    name: string
    description?: string | null
    miniatureHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type LaboratoryCreateManyMiniatureInput = {
    uuid: string
    name: string
    description?: string | null
    imageHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type BannerCreateManyImageInput = {
    uuid: string
    order: number
    isActive?: boolean
    href?: string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type CategoryUpdateWithoutImageInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    productCategory?: ProductCategoryUpdateManyWithoutCategoryNestedInput
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    miniature?: ImageUpdateOneWithoutCategoryMiniatureNestedInput
  }

  export type CategoryUncheckedUpdateWithoutImageInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentUuid?: NullableStringFieldUpdateOperationsInput | string | null
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    productCategory?: ProductCategoryUncheckedUpdateManyWithoutCategoryNestedInput
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutImageInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentUuid?: NullableStringFieldUpdateOperationsInput | string | null
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type CategoryUpdateWithoutMiniatureInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    productCategory?: ProductCategoryUpdateManyWithoutCategoryNestedInput
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    image?: ImageUpdateOneWithoutCategoryImageNestedInput
  }

  export type CategoryUncheckedUpdateWithoutMiniatureInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentUuid?: NullableStringFieldUpdateOperationsInput | string | null
    imageHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    productCategory?: ProductCategoryUncheckedUpdateManyWithoutCategoryNestedInput
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutMiniatureInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentUuid?: NullableStringFieldUpdateOperationsInput | string | null
    imageHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductImageUpdateWithoutImageInput = {
    product?: ProductUpdateOneWithoutImagesNestedInput
  }

  export type ProductImageUncheckedUpdateWithoutImageInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
  }

  export type ProductImageUncheckedUpdateManyWithoutImageInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
  }

  export type ProductUpdateWithoutMiniatureInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductNestedInput
    laboratory?: LaboratoryUpdateOneWithoutProductNestedInput
    locations?: ProductLocationUpdateManyWithoutProductNestedInput
    notice?: NoticeUpdateOneWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutMiniatureInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUncheckedUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductNestedInput
    locations?: ProductLocationUncheckedUpdateManyWithoutProductNestedInput
    notice?: NoticeUncheckedUpdateOneWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutMiniatureInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    laboratoryUuid?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type LaboratoryUpdateWithoutImageInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    product?: ProductUpdateManyWithoutLaboratoryNestedInput
    miniature?: ImageUpdateOneWithoutLaboratoryMiniatureNestedInput
  }

  export type LaboratoryUncheckedUpdateWithoutImageInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    product?: ProductUncheckedUpdateManyWithoutLaboratoryNestedInput
  }

  export type LaboratoryUncheckedUpdateManyWithoutImageInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type LaboratoryUpdateWithoutMiniatureInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    product?: ProductUpdateManyWithoutLaboratoryNestedInput
    image?: ImageUpdateOneWithoutLaboratoryImageNestedInput
  }

  export type LaboratoryUncheckedUpdateWithoutMiniatureInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    product?: ProductUncheckedUpdateManyWithoutLaboratoryNestedInput
  }

  export type LaboratoryUncheckedUpdateManyWithoutMiniatureInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    imageHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type BannerUpdateWithoutImageInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    href?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type BannerUncheckedUpdateWithoutImageInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    href?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type BannerUncheckedUpdateManyWithoutImageInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    href?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductCategoryCreateManyCategoryInput = {
    productUuid: string
  }

  export type CategoryCreateManyParentInput = {
    uuid: string
    name: string
    description?: string | null
    miniatureHash?: string | null
    imageHash?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type ProductCategoryUpdateWithoutCategoryInput = {
    product?: ProductUpdateOneRequiredWithoutCategoriesNestedInput
  }

  export type ProductCategoryUncheckedUpdateWithoutCategoryInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
  }

  export type ProductCategoryUncheckedUpdateManyWithoutCategoryInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
  }

  export type CategoryUpdateWithoutParentInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    productCategory?: ProductCategoryUpdateManyWithoutCategoryNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    image?: ImageUpdateOneWithoutCategoryImageNestedInput
    miniature?: ImageUpdateOneWithoutCategoryMiniatureNestedInput
  }

  export type CategoryUncheckedUpdateWithoutParentInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    imageHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    productCategory?: ProductCategoryUncheckedUpdateManyWithoutCategoryNestedInput
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutParentInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    imageHash?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductPromotionCreateManyPromotionInput = {
    productUuid: string
  }

  export type OrderLineCreateManyPromotionInput = {
    productUuid: string
    orderUuid: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    expectedQuantity: number
    preparedQuantity: number
    status: $Enums.OrderLineStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type ProductPromotionUpdateWithoutPromotionInput = {
    product?: ProductUpdateOneRequiredWithoutPromotionsNestedInput
  }

  export type ProductPromotionUncheckedUpdateWithoutPromotionInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
  }

  export type ProductPromotionUncheckedUpdateManyWithoutPromotionInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
  }

  export type OrderLineUpdateWithoutPromotionInput = {
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFieldUpdateOperationsInput | number
    preparedQuantity?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderLineStatusFieldUpdateOperationsInput | $Enums.OrderLineStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    product?: ProductUpdateOneRequiredWithoutOrderLinesNestedInput
    order?: OrderUpdateOneRequiredWithoutLinesNestedInput
  }

  export type OrderLineUncheckedUpdateWithoutPromotionInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFieldUpdateOperationsInput | number
    preparedQuantity?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderLineStatusFieldUpdateOperationsInput | $Enums.OrderLineStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderLineUncheckedUpdateManyWithoutPromotionInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFieldUpdateOperationsInput | number
    preparedQuantity?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderLineStatusFieldUpdateOperationsInput | $Enums.OrderLineStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryCreateManyMethodInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    senderAddressUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryUpdateWithoutMethodInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    senderAddress?: MediaUpdateOneRequiredWithoutDeliverySenderAddressNestedInput
    senderPhone?: MediaUpdateOneRequiredWithoutDeliverySenderPhoneNestedInput
    senderEmail?: MediaUpdateOneRequiredWithoutDeliverySenderEmailNestedInput
    receiverAddress?: MediaUpdateOneRequiredWithoutDeliveryReceiverAddressNestedInput
    receiverPhone?: MediaUpdateOneRequiredWithoutDeliveryReceiverPhoneNestedInput
    receiverEmail?: MediaUpdateOneRequiredWithoutDeliveryReceiverEmailNestedInput
    order?: OrderUpdateOneRequiredWithoutDeliveriesNestedInput
  }

  export type DeliveryUncheckedUpdateWithoutMethodInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUncheckedUpdateManyWithoutMethodInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderCreateManyDeliveryAddressInput = {
    uuid: string
    billingAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type OrderCreateManyBillingAddressInput = {
    uuid: string
    deliveryAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type OrderCreateManyPhoneInput = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type OrderCreateManyEmailInput = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    phoneUuid: string
    idPasserelle?: number | null
    customerUuid?: string | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateManySenderAddressInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateManySenderPhoneInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateManySenderEmailInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderPhoneUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateManyReceiverAddressInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateManyReceiverPhoneInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateManyReceiverEmailInput = {
    uuid: string
    orderUuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type CustomerCreateManyAddressInput = {
    uuid: string
    email: string
    phoneUuid?: string | null
    firstname?: string | null
    lastname?: string | null
  }

  export type CustomerCreateManyPhoneInput = {
    uuid: string
    email: string
    firstname?: string | null
    lastname?: string | null
    addressUuid?: string | null
  }

  export type OrderUpdateWithoutDeliveryAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUpdateManyWithoutOrderNestedInput
    billingAddress?: MediaUpdateOneRequiredWithoutBillingOrderNestedInput
    phone?: MediaUpdateOneRequiredWithoutPhoneOrderNestedInput
    email?: MediaUpdateOneRequiredWithoutEmailOrderNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUpdateManyWithoutOrderNestedInput
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
    invoice?: InvoiceUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutDeliveryAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUncheckedUpdateManyWithoutOrderNestedInput
    payment?: PaymentUncheckedUpdateOneWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUncheckedUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUncheckedUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutDeliveryAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderUpdateWithoutBillingAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUpdateManyWithoutOrderNestedInput
    deliveryAddress?: MediaUpdateOneRequiredWithoutDeliveryOrderNestedInput
    phone?: MediaUpdateOneRequiredWithoutPhoneOrderNestedInput
    email?: MediaUpdateOneRequiredWithoutEmailOrderNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUpdateManyWithoutOrderNestedInput
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
    invoice?: InvoiceUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutBillingAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUncheckedUpdateManyWithoutOrderNestedInput
    payment?: PaymentUncheckedUpdateOneWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUncheckedUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUncheckedUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutBillingAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderUpdateWithoutPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUpdateManyWithoutOrderNestedInput
    deliveryAddress?: MediaUpdateOneRequiredWithoutDeliveryOrderNestedInput
    billingAddress?: MediaUpdateOneRequiredWithoutBillingOrderNestedInput
    email?: MediaUpdateOneRequiredWithoutEmailOrderNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUpdateManyWithoutOrderNestedInput
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
    invoice?: InvoiceUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUncheckedUpdateManyWithoutOrderNestedInput
    payment?: PaymentUncheckedUpdateOneWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUncheckedUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUncheckedUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderUpdateWithoutEmailInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUpdateManyWithoutOrderNestedInput
    deliveryAddress?: MediaUpdateOneRequiredWithoutDeliveryOrderNestedInput
    billingAddress?: MediaUpdateOneRequiredWithoutBillingOrderNestedInput
    phone?: MediaUpdateOneRequiredWithoutPhoneOrderNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUpdateManyWithoutOrderNestedInput
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
    invoice?: InvoiceUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutEmailInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUncheckedUpdateManyWithoutOrderNestedInput
    payment?: PaymentUncheckedUpdateOneWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUncheckedUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUncheckedUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutEmailInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerUuid?: NullableStringFieldUpdateOperationsInput | string | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUpdateWithoutSenderAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    method?: DeliveryMethodUpdateOneRequiredWithoutDeliveriesNestedInput
    senderPhone?: MediaUpdateOneRequiredWithoutDeliverySenderPhoneNestedInput
    senderEmail?: MediaUpdateOneRequiredWithoutDeliverySenderEmailNestedInput
    receiverAddress?: MediaUpdateOneRequiredWithoutDeliveryReceiverAddressNestedInput
    receiverPhone?: MediaUpdateOneRequiredWithoutDeliveryReceiverPhoneNestedInput
    receiverEmail?: MediaUpdateOneRequiredWithoutDeliveryReceiverEmailNestedInput
    order?: OrderUpdateOneRequiredWithoutDeliveriesNestedInput
  }

  export type DeliveryUncheckedUpdateWithoutSenderAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUncheckedUpdateManyWithoutSenderAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUpdateWithoutSenderPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    method?: DeliveryMethodUpdateOneRequiredWithoutDeliveriesNestedInput
    senderAddress?: MediaUpdateOneRequiredWithoutDeliverySenderAddressNestedInput
    senderEmail?: MediaUpdateOneRequiredWithoutDeliverySenderEmailNestedInput
    receiverAddress?: MediaUpdateOneRequiredWithoutDeliveryReceiverAddressNestedInput
    receiverPhone?: MediaUpdateOneRequiredWithoutDeliveryReceiverPhoneNestedInput
    receiverEmail?: MediaUpdateOneRequiredWithoutDeliveryReceiverEmailNestedInput
    order?: OrderUpdateOneRequiredWithoutDeliveriesNestedInput
  }

  export type DeliveryUncheckedUpdateWithoutSenderPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUncheckedUpdateManyWithoutSenderPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUpdateWithoutSenderEmailInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    method?: DeliveryMethodUpdateOneRequiredWithoutDeliveriesNestedInput
    senderAddress?: MediaUpdateOneRequiredWithoutDeliverySenderAddressNestedInput
    senderPhone?: MediaUpdateOneRequiredWithoutDeliverySenderPhoneNestedInput
    receiverAddress?: MediaUpdateOneRequiredWithoutDeliveryReceiverAddressNestedInput
    receiverPhone?: MediaUpdateOneRequiredWithoutDeliveryReceiverPhoneNestedInput
    receiverEmail?: MediaUpdateOneRequiredWithoutDeliveryReceiverEmailNestedInput
    order?: OrderUpdateOneRequiredWithoutDeliveriesNestedInput
  }

  export type DeliveryUncheckedUpdateWithoutSenderEmailInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUncheckedUpdateManyWithoutSenderEmailInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUpdateWithoutReceiverAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    method?: DeliveryMethodUpdateOneRequiredWithoutDeliveriesNestedInput
    senderAddress?: MediaUpdateOneRequiredWithoutDeliverySenderAddressNestedInput
    senderPhone?: MediaUpdateOneRequiredWithoutDeliverySenderPhoneNestedInput
    senderEmail?: MediaUpdateOneRequiredWithoutDeliverySenderEmailNestedInput
    receiverPhone?: MediaUpdateOneRequiredWithoutDeliveryReceiverPhoneNestedInput
    receiverEmail?: MediaUpdateOneRequiredWithoutDeliveryReceiverEmailNestedInput
    order?: OrderUpdateOneRequiredWithoutDeliveriesNestedInput
  }

  export type DeliveryUncheckedUpdateWithoutReceiverAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUncheckedUpdateManyWithoutReceiverAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUpdateWithoutReceiverPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    method?: DeliveryMethodUpdateOneRequiredWithoutDeliveriesNestedInput
    senderAddress?: MediaUpdateOneRequiredWithoutDeliverySenderAddressNestedInput
    senderPhone?: MediaUpdateOneRequiredWithoutDeliverySenderPhoneNestedInput
    senderEmail?: MediaUpdateOneRequiredWithoutDeliverySenderEmailNestedInput
    receiverAddress?: MediaUpdateOneRequiredWithoutDeliveryReceiverAddressNestedInput
    receiverEmail?: MediaUpdateOneRequiredWithoutDeliveryReceiverEmailNestedInput
    order?: OrderUpdateOneRequiredWithoutDeliveriesNestedInput
  }

  export type DeliveryUncheckedUpdateWithoutReceiverPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUncheckedUpdateManyWithoutReceiverPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUpdateWithoutReceiverEmailInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    method?: DeliveryMethodUpdateOneRequiredWithoutDeliveriesNestedInput
    senderAddress?: MediaUpdateOneRequiredWithoutDeliverySenderAddressNestedInput
    senderPhone?: MediaUpdateOneRequiredWithoutDeliverySenderPhoneNestedInput
    senderEmail?: MediaUpdateOneRequiredWithoutDeliverySenderEmailNestedInput
    receiverAddress?: MediaUpdateOneRequiredWithoutDeliveryReceiverAddressNestedInput
    receiverPhone?: MediaUpdateOneRequiredWithoutDeliveryReceiverPhoneNestedInput
    order?: OrderUpdateOneRequiredWithoutDeliveriesNestedInput
  }

  export type DeliveryUncheckedUpdateWithoutReceiverEmailInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUncheckedUpdateManyWithoutReceiverEmailInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    orderUuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type CustomerUpdateWithoutAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: MediaUpdateOneWithoutCustomerPhoneNestedInput
    orders?: OrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phoneUuid?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateManyWithoutAddressInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phoneUuid?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CustomerUpdateWithoutPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    address?: MediaUpdateOneWithoutCustomerAddressNestedInput
    orders?: OrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    addressUuid?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateManyWithoutPhoneInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    addressUuid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderLineCreateManyOrderInput = {
    productUuid: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    expectedQuantity: number
    preparedQuantity: number
    promotionUuid?: string | null
    status: $Enums.OrderLineStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type MessageCreateManyOrderInput = {
    uuid: string
    data: JsonNullValueInput | InputJsonValue
    type: $Enums.MessageType
    status: $Enums.MessageStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type DeliveryCreateManyOrderInput = {
    uuid: string
    price: Decimal | DecimalJsLike | number | string
    pickupId?: string | null
    pickingDate?: Date | string | null
    trackingNumber?: string | null
    direction: $Enums.DeliveryDirection
    weight: number
    status: $Enums.DeliveryStatus
    methodUuid: string
    senderAddressUuid: string
    senderPhoneUuid: string
    senderEmailUuid: string
    receiverAddressUuid: string
    receiverPhoneUuid: string
    receiverEmailUuid: string
    data?: Buffer | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type OrderLineUpdateWithoutOrderInput = {
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFieldUpdateOperationsInput | number
    preparedQuantity?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderLineStatusFieldUpdateOperationsInput | $Enums.OrderLineStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    product?: ProductUpdateOneRequiredWithoutOrderLinesNestedInput
    promotion?: PromotionUpdateOneWithoutOrderLinesNestedInput
  }

  export type OrderLineUncheckedUpdateWithoutOrderInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFieldUpdateOperationsInput | number
    preparedQuantity?: IntFieldUpdateOperationsInput | number
    promotionUuid?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderLineStatusFieldUpdateOperationsInput | $Enums.OrderLineStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderLineUncheckedUpdateManyWithoutOrderInput = {
    productUuid?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    expectedQuantity?: IntFieldUpdateOperationsInput | number
    preparedQuantity?: IntFieldUpdateOperationsInput | number
    promotionUuid?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderLineStatusFieldUpdateOperationsInput | $Enums.OrderLineStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type MessageUpdateWithoutOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type MessageUncheckedUpdateWithoutOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type MessageUncheckedUpdateManyWithoutOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    type?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    status?: EnumMessageStatusFieldUpdateOperationsInput | $Enums.MessageStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUpdateWithoutOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    method?: DeliveryMethodUpdateOneRequiredWithoutDeliveriesNestedInput
    senderAddress?: MediaUpdateOneRequiredWithoutDeliverySenderAddressNestedInput
    senderPhone?: MediaUpdateOneRequiredWithoutDeliverySenderPhoneNestedInput
    senderEmail?: MediaUpdateOneRequiredWithoutDeliverySenderEmailNestedInput
    receiverAddress?: MediaUpdateOneRequiredWithoutDeliveryReceiverAddressNestedInput
    receiverPhone?: MediaUpdateOneRequiredWithoutDeliveryReceiverPhoneNestedInput
    receiverEmail?: MediaUpdateOneRequiredWithoutDeliveryReceiverEmailNestedInput
  }

  export type DeliveryUncheckedUpdateWithoutOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type DeliveryUncheckedUpdateManyWithoutOrderInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pickupId?: NullableStringFieldUpdateOperationsInput | string | null
    pickingDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: EnumDeliveryDirectionFieldUpdateOperationsInput | $Enums.DeliveryDirection
    weight?: IntFieldUpdateOperationsInput | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    methodUuid?: StringFieldUpdateOperationsInput | string
    senderAddressUuid?: StringFieldUpdateOperationsInput | string
    senderPhoneUuid?: StringFieldUpdateOperationsInput | string
    senderEmailUuid?: StringFieldUpdateOperationsInput | string
    receiverAddressUuid?: StringFieldUpdateOperationsInput | string
    receiverPhoneUuid?: StringFieldUpdateOperationsInput | string
    receiverEmailUuid?: StringFieldUpdateOperationsInput | string
    data?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type ProductCreateManyLaboratoryInput = {
    uuid: string
    availableStock: number
    name: string
    miniatureHash?: string | null
    cip7?: string | null
    cip13?: string | null
    ean13: string
    priceWithoutTax: Decimal | DecimalJsLike | number | string
    percentTaxRate: Decimal | DecimalJsLike | number | string
    description?: string | null
    instructionsForUse?: string | null
    composition?: string | null
    weight: number
    maxQuantityForOrder?: number | null
    status: $Enums.ProductStatus
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type ProductUpdateWithoutLaboratoryInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUpdateManyWithoutProductNestedInput
    images?: ProductImageUpdateManyWithoutProductNestedInput
    miniature?: ImageUpdateOneWithoutProductMiniatureNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductNestedInput
    locations?: ProductLocationUpdateManyWithoutProductNestedInput
    notice?: NoticeUpdateOneWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutLaboratoryInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    promotions?: ProductPromotionUncheckedUpdateManyWithoutProductNestedInput
    orderLines?: OrderLineUncheckedUpdateManyWithoutProductNestedInput
    images?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductNestedInput
    locations?: ProductLocationUncheckedUpdateManyWithoutProductNestedInput
    notice?: NoticeUncheckedUpdateOneWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutLaboratoryInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    availableStock?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    miniatureHash?: NullableStringFieldUpdateOperationsInput | string | null
    cip7?: NullableStringFieldUpdateOperationsInput | string | null
    cip13?: NullableStringFieldUpdateOperationsInput | string | null
    ean13?: StringFieldUpdateOperationsInput | string
    priceWithoutTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentTaxRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    instructionsForUse?: NullableStringFieldUpdateOperationsInput | string | null
    composition?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: IntFieldUpdateOperationsInput | number
    maxQuantityForOrder?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type OrderCreateManyCustomerInput = {
    uuid: string
    deliveryAddressUuid: string
    billingAddressUuid: string
    phoneUuid: string
    emailUuid: string
    idPasserelle?: number | null
    customerMessage?: string | null
    createdAt: Date | string
    createdBy: string
    updatedAt: Date | string
    updatedBy: string
  }

  export type OrderUpdateWithoutCustomerInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUpdateManyWithoutOrderNestedInput
    deliveryAddress?: MediaUpdateOneRequiredWithoutDeliveryOrderNestedInput
    billingAddress?: MediaUpdateOneRequiredWithoutBillingOrderNestedInput
    phone?: MediaUpdateOneRequiredWithoutPhoneOrderNestedInput
    email?: MediaUpdateOneRequiredWithoutEmailOrderNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    messages?: MessageUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutCustomerInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
    lines?: OrderLineUncheckedUpdateManyWithoutOrderNestedInput
    payment?: PaymentUncheckedUpdateOneWithoutOrderNestedInput
    messages?: MessageUncheckedUpdateManyWithoutOrderNestedInput
    deliveries?: DeliveryUncheckedUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUncheckedUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutCustomerInput = {
    uuid?: StringFieldUpdateOperationsInput | string
    deliveryAddressUuid?: StringFieldUpdateOperationsInput | string
    billingAddressUuid?: StringFieldUpdateOperationsInput | string
    phoneUuid?: StringFieldUpdateOperationsInput | string
    emailUuid?: StringFieldUpdateOperationsInput | string
    idPasserelle?: NullableIntFieldUpdateOperationsInput | number | null
    customerMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use ProductCountOutputTypeDefaultArgs instead
     */
    export type ProductCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LocationCountOutputTypeDefaultArgs instead
     */
    export type LocationCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LocationCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ImageCountOutputTypeDefaultArgs instead
     */
    export type ImageCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ImageCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoryCountOutputTypeDefaultArgs instead
     */
    export type CategoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PromotionCountOutputTypeDefaultArgs instead
     */
    export type PromotionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PromotionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DeliveryMethodCountOutputTypeDefaultArgs instead
     */
    export type DeliveryMethodCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DeliveryMethodCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MediaCountOutputTypeDefaultArgs instead
     */
    export type MediaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MediaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderCountOutputTypeDefaultArgs instead
     */
    export type OrderCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LaboratoryCountOutputTypeDefaultArgs instead
     */
    export type LaboratoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LaboratoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CustomerCountOutputTypeDefaultArgs instead
     */
    export type CustomerCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CustomerCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NoticeDefaultArgs instead
     */
    export type NoticeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NoticeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductDefaultArgs instead
     */
    export type ProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LocationDefaultArgs instead
     */
    export type LocationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LocationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductLocationDefaultArgs instead
     */
    export type ProductLocationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductLocationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ImageDefaultArgs instead
     */
    export type ImageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ImageDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductImageDefaultArgs instead
     */
    export type ProductImageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductImageDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoryDefaultArgs instead
     */
    export type CategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PromotionDefaultArgs instead
     */
    export type PromotionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PromotionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductCategoryDefaultArgs instead
     */
    export type ProductCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductCategoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductPromotionDefaultArgs instead
     */
    export type ProductPromotionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductPromotionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DeliveryMethodDefaultArgs instead
     */
    export type DeliveryMethodArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DeliveryMethodDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DeliveryDefaultArgs instead
     */
    export type DeliveryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DeliveryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaymentDefaultArgs instead
     */
    export type PaymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaymentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderLineDefaultArgs instead
     */
    export type OrderLineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderLineDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MediaDefaultArgs instead
     */
    export type MediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MediaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderDefaultArgs instead
     */
    export type OrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LaboratoryDefaultArgs instead
     */
    export type LaboratoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LaboratoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MessageDefaultArgs instead
     */
    export type MessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MessageDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CustomerDefaultArgs instead
     */
    export type CustomerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CustomerDefaultArgs<ExtArgs>
    /**
     * @deprecated Use InvoiceDefaultArgs instead
     */
    export type InvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InvoiceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TokenDefaultArgs instead
     */
    export type TokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TokenDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BannerDefaultArgs instead
     */
    export type BannerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BannerDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}